<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="OmegaT-3.6.0" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>![BlurVSM](http://www.babylonjs.com/forumpics/blurVSM.jpg)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T123324Z" creationid="aceway" creationdate="20170204T123324Z">
        <seg>![模糊差分阴影映射](http://www.babylonjs.com/forumpics/blurVSM.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Collisions](http://www.babylonjs.com/tutorials/10%20-%20Collisions%20Intersect/10-1.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T085313Z" creationid="aceway" creationdate="20170130T085313Z">
        <seg>![碰撞检测](http://www.babylonjs.com/tutorials/10%20-%20Collisions%20Intersect/10-1.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Collisions](http://www.babylonjs.com/tutorials/10%20-%20Collisions%20Intersect/10-2.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T090141Z" creationid="aceway" creationdate="20170130T090141Z">
        <seg>![碰撞检测](http://www.babylonjs.com/tutorials/10%20-%20Collisions%20Intersect/10-2.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Collisions](http://www.babylonjs.com/tutorials/10%20-%20Collisions%20Intersect/10.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T081512Z" creationid="aceway" creationdate="20170130T081512Z">
        <seg>![碰撞检测](http://www.babylonjs.com/tutorials/10%20-%20Collisions%20Intersect/10.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Elements](http://urbanproductions.com/wingy/babylon/misc/tut02pic.jpg)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T125754Z" creationid="aceway" creationdate="20160503T125754Z">
        <seg>![元素](http://urbanproductions.com/wingy/babylon/misc/tut02pic.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Elements](http://www.babylonjs.com/Screenshots/testlight.jpg)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170208T132348Z" creationid="aceway" creationdate="20170208T132348Z">
        <seg>![元素](http://www.babylonjs.com/Screenshots/testlight.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Elements](http://www.babylonjs.com/tutorials/04%20-%20Materials/04.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T121413Z" creationid="aceway" creationdate="20160508T121413Z">
        <seg>![元素](http://www.babylonjs.com/tutorials/04%20-%20Materials/04.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Ellipsoid](https://camo.githubusercontent.com/19931f529e19679a0e2556e23fc94536e6a9b88c/687474703a2f2f7777772e626162796c6f6e6a732e636f6d2f7475746f7269616c732f30392532302d253230436f6c6c6973696f6e73253230477261766974792f30392d312e6a7067)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T034936Z" creationid="aceway" creationdate="20170130T034936Z">
        <seg>![椭球体](https://camo.githubusercontent.com/19931f529e19679a0e2556e23fc94536e6a9b88c/687474703a2f2f7777772e626162796c6f6e6a732e636f6d2f7475746f7269616c732f30392532302d253230436f6c6c6973696f6e73253230477261766974792f30392d312e6a7067)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![EmitBox](http://www.babylonjs.com/tutorials/12%20-%20Particles/12-2.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T073059Z" creationid="aceway" creationdate="20170131T073059Z">
        <seg>![发射盒EmitBox](http://www.babylonjs.com/tutorials/12%20-%20Particles/12-2.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Environment](http://www.babylonjs.com/tutorials/13%20-%20Environment/13.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T104221Z" creationid="aceway" creationdate="20170131T104221Z">
        <seg>![环境](http://www.babylonjs.com/tutorials/13%20-%20Environment/13.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Flare](http://www.babylonjs.com/tutorials/12%20-%20Particles/Flare.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T031208Z" creationid="aceway" creationdate="20170131T031208Z">
        <seg>![耀斑](http://www.babylonjs.com/tutorials/12%20-%20Particles/Flare.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Hard shadows](http://www.babylonjs.com/forumpics/hard.jpg)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T123143Z" creationid="aceway" creationdate="20170204T123143Z">
        <seg>![生硬的阴影](http://www.babylonjs.com/forumpics/hard.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![HeightMap2](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14-1.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T050405Z" creationid="aceway" creationdate="20170204T050042Z">
        <seg>![高度图2](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14-1.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![HeightMap3](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/worldHeightMap.jpg)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T050552Z" creationid="aceway" creationdate="20170204T050552Z">
        <seg>![高度图3](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/worldHeightMap.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![HeightMap4](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14-2.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T100756Z" creationid="aceway" creationdate="20170204T100756Z">
        <seg>![高度图4](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14-2.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![HeightMap4](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14-3.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T101608Z" creationid="aceway" creationdate="20170204T101608Z">
        <seg>![高度图4](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14-3.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![HeightMap5](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14-4.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T102043Z" creationid="aceway" creationdate="20170204T102043Z">
        <seg>![高度图5](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14-4.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![HeightMap](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T050349Z" creationid="aceway" creationdate="20170204T045736Z">
        <seg>![高度图](http://www.babylonjs.com/tutorials/14%20-%20Height%20map/14.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Particles](http://www.babylonjs.com/tutorials/12%20-%20Particles/12.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T023143Z" creationid="aceway" creationdate="20170131T023143Z">
        <seg>![粒子](http://www.babylonjs.com/tutorials/12%20-%20Particles/12.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Picking](http://www.babylonjs.com/tutorials/11%20-%20Collisions%20PickResult/11.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T092754Z" creationid="aceway" creationdate="20170130T092754Z">
        <seg>![拾取](http://www.babylonjs.com/tutorials/11%20-%20Collisions%20PickResult/11.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Poisson](http://www.babylonjs.com/forumpics/poisson.jpg)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T123207Z" creationid="aceway" creationdate="20170204T123207Z">
        <seg>![泊松采样](http://www.babylonjs.com/forumpics/poisson.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Ribbon](http://jerome.bousquie.fr/BJS/images/ribbon.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T132542Z" creationid="aceway" creationdate="20170204T132542Z">
        <seg>![色带](http://jerome.bousquie.fr/BJS/images/ribbon.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Shadows2](http://www.babylonjs.com/tutorials/15%20-%20Shadows/15-1.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T104258Z" creationid="aceway" creationdate="20170204T104258Z">
        <seg>![阴影2](http://www.babylonjs.com/tutorials/15%20-%20Shadows/15-1.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Shadows](http://www.babylonjs.com/tutorials/15%20-%20Shadows/15.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T103708Z" creationid="aceway" creationdate="20170204T103708Z">
        <seg>![阴影](http://www.babylonjs.com/tutorials/15%20-%20Shadows/15.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Skybox](http://www.babylonjs.com/tutorials/13%20-%20Environment/13-1.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T024900Z" creationid="aceway" creationdate="20170204T024900Z">
        <seg>![天空盒](http://www.babylonjs.com/tutorials/13%20-%20Environment/13-1.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![Skybox](http://www.babylonjs.com/tutorials/13%20-%20Environment/13-2.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T035400Z" creationid="aceway" creationdate="20170204T035400Z">
        <seg>![天空盒](http://www.babylonjs.com/tutorials/13%20-%20Environment/13-2.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![TextureMask](http://www.babylonjs.com/tutorials/12%20-%20Particles/12-1.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T031605Z" creationid="aceway" creationdate="20170131T031605Z">
        <seg>![纹理掩码](http://www.babylonjs.com/tutorials/12%20-%20Particles/12-1.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![VS02](http://i.imgur.com/Tb3nxWZ.png)
Make sure you check "Create directory for solution", this way the c:\test\babylon.js directory will be used to store the .sln file and a new directory will be created in c:\test\babylon.js\babylon.js for the project file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T095606Z" creationid="aceway@qq.com" creationdate="20160427T095606Z">
        <seg>![VS02](http://i.imgur.com/Tb3nxWZ.png)
确保你选择了 "为解决方案创建目录", 这样则c:\test\babylon.js目录会被用于存储该 .sln 文件，而且在c:\test\babylon.js\babylon.js里会为工程创建一个新文件夹</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![VS03](http://i.imgur.com/fZLlLQW.png)
We select ASP.Net 4, don't try the 5 version Template: it's a lot of troubles right now.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T095715Z" creationid="aceway@qq.com" creationdate="20160427T095715Z">
        <seg>![VS03](http://i.imgur.com/fZLlLQW.png)
我们选择 ASP.Net 4, 不要尝试第5版模版: 它现在还有许多问题.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![VSM](http://www.babylonjs.com/forumpics/vsm.jpg)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T123309Z" creationid="aceway" creationdate="20170204T123309Z">
        <seg>![差分阴影映射](http://www.babylonjs.com/forumpics/vsm.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![](http://urbanproductions.com/wingy/babylon/misc/playground02.jpg)
A Saved 'Custom' Playground Scene: http://babylonjs-playground.azurewebsites.net/#QKQHS</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T151417Z" creationid="aceway" creationdate="20160423T142546Z">
        <seg>![](http://urbanproductions.com/wingy/babylon/misc/playground02.jpg)
一个保存的'定制的' 娱乐场场景: http://babylonjs-playground.azurewebsites.net/#QKQHS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![emitRate](http://www.babylonjs.com/tutorials/12%20-%20Particles/12-3.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T074106Z" creationid="aceway" creationdate="20170131T074053Z">
        <seg>![发射速率](http://www.babylonjs.com/tutorials/12%20-%20Particles/12-3.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![emitRate](http://www.babylonjs.com/tutorials/12%20-%20Particles/12-4.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T075518Z" creationid="aceway" creationdate="20170131T075518Z">
        <seg>![发射速率](http://www.babylonjs.com/tutorials/12%20-%20Particles/12-4.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![tof](http://www.babylonjs.com/tutorials/04%20-%20Materials/04-2.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T135403Z" creationid="aceway" creationdate="20160522T135403Z">
        <seg>![tof](http://www.babylonjs.com/教程/04%20-%20Materials/04-2.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>![tof](http://www.babylonjs.com/tutorials/04%20-%20Materials/04-3.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T135505Z" creationid="aceway" creationdate="20160522T135505Z">
        <seg>![tof](http://www.babylonjs.com/教程/04%20-%20Materials/04-3.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"animations": array of Animations (see below, can be omitted),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T073524Z" creationid="aceway@qq.com" creationdate="20160427T073524Z">
        <seg>"animations": Animations数组 (见下面，可以省略),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"animations": array of Animations (see below, can be omitted),
    "autoAnimate": boolean,
    "autoAnimateFrom": int,
    "autoAnimateTo": int,
    "autoAnimateLoop": boolean (can be omitted),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T074735Z" creationid="aceway@qq.com" creationdate="20160427T074735Z">
        <seg>"animations": array of Animations (见下面，可以忽略),
    "autoAnimate": boolean,
    "autoAnimateFrom": int,
    "autoAnimateTo": int,
    "autoAnimateLoop": boolean (可以忽略),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"autoAnimate": boolean,
    "autoAnimateFrom": int,
    "autoAnimateTo": int,
    "autoAnimateLoop": boolean (can be omitted),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T073542Z" creationid="aceway@qq.com" creationdate="20160427T073542Z">
        <seg>"autoAnimate": boolean,
    "autoAnimateFrom": int,
    "autoAnimateTo": int,
    "autoAnimateLoop": boolean (可以省略),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"autoAnimateSpeed": number (can be omitted)
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T074750Z" creationid="aceway@qq.com" creationdate="20160427T074750Z">
        <seg>"autoAnimateSpeed": number (可以忽略)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"autoAnimateSpeed": number (can be omitted)
}
```
## Cameras
A camera is defined by the following JSON:
```javascript
{
    "name": string,
    "id": string,
    "type": string,
    "tags": string,
    "parentId": string,
    "lockedTargetId": string,
    "position": vector3,
    "target": vector3,
    "alpha": float, // only for ArcRotateCamera and AnaglyphArcRotateCamera
    "beta": float, // only for ArcRotateCamera and AnaglyphArcRotateCamera
    "radius": float, // only for ArcRotateCamera, FollowCamera and AnaglyphArcRotateCamera
    "eye_space": float, // only for AnaglyphFreeCamera and AnaglyphArcRotateCamera
    "heightOffset": float, // only for FollowCamera
    "rotationOffset": float, // only for FollowCamera
    "cameraRigMode": int (can be omitted),
    "fov": float (in radians),
    "minZ": float,
    "maxZ": float,
    "speed": float,
    "inertia": float (between 0 and 1),
    "checkCollisions": boolean,
    "applyGravity": boolean,
    "ellipsoid": vector3,
    "animations": array of Animations (see below, can be omitted),
    "autoAnimate": boolean,
    "autoAnimateFrom": int,
    "autoAnimateTo": int,
    "autoAnimateLoop": boolean (can be omitted),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T073836Z" creationid="aceway@qq.com" creationdate="20160427T073836Z">
        <seg>"autoAnimateSpeed": number (can be omitted)
}
```
## 相机
一个相机通过如下JSON格式定义:
```javascript
{
    "name": string,
    "id": string,
    "type": string,
    "tags": string,
    "parentId": string,
    "lockedTargetId": string,
    "position": vector3,
    "target": vector3,
    "alpha": float, // 仅仅支持ArcRotateCamera 和 AnaglyphArcRotateCamera
    "beta": float, // 仅仅支持 ArcRotateCamera 和 AnaglyphArcRotateCamera
    "radius": float, // 仅仅支持 ArcRotateCamera, FollowCamera 和 AnaglyphArcRotateCamera
    "eye_space": float, // 仅仅支持 AnaglyphFreeCamera 和 AnaglyphArcRotateCamera
    "heightOffset": float, // 仅仅支持 FollowCamera
    "rotationOffset": float, // 仅仅支持 FollowCamera
    "cameraRigMode": int (可以忽略),
    "fov": float (弧度单位),
    "minZ": float,
    "maxZ": float,
    "speed": float,
    "inertia": float (在0和1间),
    "checkCollisions": boolean,
    "applyGravity": boolean,
    "ellipsoid": vector3,
    "animations": Animations数组 (见下面，可以忽略),
    "autoAnimate": boolean,
    "autoAnimateFrom": int,
    "autoAnimateTo": int,
    "autoAnimateLoop": boolean (可以忽略),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"autoAnimateSpeed": number (can be omitted)
    "instances": array of Instances (see below, can be omitted),
    "actions": array of actions (see below)
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T084204Z" creationid="aceway@qq.com" creationdate="20160427T084204Z">
        <seg>"autoAnimateSpeed": number (可以忽略)
    "instances": array of Instances (见下面, 可以忽略),
    "actions": array of actions (见下面)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"autoAnimateSpeed": number (can be omitted),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T073842Z" creationid="aceway@qq.com" creationdate="20160427T073842Z">
        <seg>"autoAnimateSpeed": number (可以忽略),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"inputmgr" : map of camera inputs (can be omitted, see below)
}
```
## Map of camera inputs
This is an object literal using the input type as a key, and the input settings as a child object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T074413Z" creationid="aceway@qq.com" creationdate="20160427T073940Z">
        <seg>"inputmgr" : map of camera inputs (可以忽略, 见下面)
}
```
## 相机输入的映射
这是个用输入类型的字面量做键对象，同时使用输入设定作为自对象的映射.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># The BabylonJS Playground!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T090905Z" creationid="aceway" creationdate="20160423T090905Z">
        <seg># BabylonJS娱乐场!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## 1) Clone the repositoty</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T094707Z" creationid="aceway@qq.com" creationdate="20160427T094707Z">
        <seg>## 1) 复制仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## 2) Create the Visual Studio project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T094937Z" creationid="aceway@qq.com" creationdate="20160427T094937Z">
        <seg>## 2) 创建Visual Studio工程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## 3) Include the Babylon.js source code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T100220Z" creationid="aceway@qq.com" creationdate="20160427T100220Z">
        <seg>## 3) 引入Babylon.js源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## 4) Create a small sandbox</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T101842Z" creationid="aceway@qq.com" creationdate="20160427T101842Z">
        <seg>## 4) 创建一个小的安全沙盒</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## A Visit to The Playground ##
We have worked hard and learned much, so we deserve some playground time, at the Babylon.js Playground web site.&amp;nbsp; Here is a scene that I once created and then saved... at the playground:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160404T033340Z">
        <seg>## 访问 娱乐场 ##
我们做得很努力且学到不少东西了, 所以我们可以获得一些时间在 Babylon.js 娱乐场游乐一下了.&amp;nbsp; 此处是创建保存一次性场景的练习场:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## About the light
Keep in mind that this shadow generator can only be used with one light.  If you want to generate shadows from another light, then you will need to create another shadow generator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T125419Z" creationid="aceway" creationdate="20170204T125127Z">
        <seg>## 关于光源
要记住,这个阴影生成器只能和一个光源配合使用. 如果你想根据另一个光源生成阴影, 那么你需要创建另一个阴影生成器.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Actions
An action is defined by the following JSON.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T090520Z" creationid="aceway@qq.com" creationdate="20160427T090520Z">
        <seg>## 动作
动作通过如下的JSON格式定义.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Activating/Deactivating Lights ##</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170208T133436Z" creationid="aceway" creationdate="20170208T133436Z">
        <seg>## 激活/停用光源 ##</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Advanced Picking Features</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T095230Z" creationid="aceway" creationdate="20170130T095230Z">
        <seg>## 高级拾取特征</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Animation Blending</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T111439Z" creationid="aceway" creationdate="20160402T111439Z">
        <seg>## 动画渲染</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## AnimationKeys
An animationKey is defined by the following JSON:
```javascript
{
    "frame": int,
    "values": array of float (depending of animated value)
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T085131Z" creationid="aceway@qq.com" creationdate="20160427T084949Z">
        <seg>## 动画关键帧
动画关键帧通过如下的JSON格式定义:
```javascript
{
    "frame": int,
    "values": array of float (取决于播放的值)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Animations
An animation can be defined by the following JSON:
```javascript
{
    "dataType": int (0 = float, 1 = vector3, 2 = quaternion, 3 = matrix),
    "framePerSecond": int,
    "loopBehavior": int (0 = relative, 1 = cycle, 2 = constant),
    "name": string,
    "property": string,
    "keys": array of AnimationKeys (see below),
    "autoAnimate": boolean,
    "autoAnimateFrom": int,
    "autoAnimateTo": int,
    "autoAnimateLoop": boolean
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T085108Z" creationid="aceway@qq.com" creationdate="20160427T084732Z">
        <seg>## 动画
动画过如下的JSON格式定义:
```javascript
{
    "dataType": int (0 = 浮点, 1 = 3元量, 2 = 4元量, 3 = 矩阵),
    "framePerSecond": int,
    "loopBehavior": int (0 = 相对, 1 = 周期, 2 = 常量),
    "name": string,
    "property": string,
    "keys": array of AnimationKeys (见下面),
    "autoAnimate": boolean,
    "autoAnimateFrom": int,
    "autoAnimateTo": int,
    "autoAnimateLoop": boolean
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## ArcRotateCamera
The ArcRotateCamera can also check collisions but instead of sliding along obstacles, this camera won't move when a collision appends.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T080503Z" creationid="aceway" creationdate="20170130T051042Z">
        <seg>## 弧形旋转相机
弧形旋转相机也能支持检测碰撞，但是当碰撞发生时相机会停止移动而不是沿着障碍物移动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Attach events to animations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T151933Z" creationid="aceway" creationdate="20160402T151933Z">
        <seg>## 给动画添加事件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Babylon.js Objects, Properties, Methods, and Values ##</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160410T144445Z" creationid="aceway" creationdate="20160410T144445Z">
        <seg>## Babylon.js 对象, 属性, 方法, 和值 ##</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Babylon.js WebGL Game Creation System!##</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T031550Z" creationid="aceway" creationdate="20160403T031550Z">
        <seg>## Babylon.js 页面图像库 游戏创建系统!##</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## BabylonJS Playground ##</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160404T033413Z">
        <seg>## BabylonJS 娱乐场 ##</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Basic animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160330T033807Z" creationid="aceway" creationdate="20160330T033807Z">
        <seg>## 简单动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Basic types
.babylon files uses the following convention for basic types:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T072309Z" creationid="aceway@qq.com" creationdate="20160427T072309Z">
        <seg>## 基础类型
.babylon 文件使用下面的约定来定义基础类型:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Bones
A bone is defined by the following JSON:
```javascript
{
    "parentBoneIndex": int,
    "name": string,
    "matrix": matrix,
    "animations": array of Animations (must be of matrix type)
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T085450Z" creationid="aceway@qq.com" creationdate="20160427T085450Z">
        <seg>## 骨骼
骨骼通过如下的JSON格式定义:
```javascript
{
    "parentBoneIndex": int,
    "name": string,
    "matrix": matrix,
    "animations": array of Animations (必须是个矩阵类型)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Boxes
A box is defined by the following JSON:
```javascript
{
    "id": string,
    "size": float,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T082449Z" creationid="aceway@qq.com" creationdate="20160427T082449Z">
        <seg>## 盒子
盒子通过如下的JSON格式定义:
```javascript
{
    "id": string,
    "size": float,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## CDN</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T070458Z" creationid="aceway@qq.com" creationdate="20160427T070458Z">
        <seg>## CDN(内容分发网络)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Compilation Errors
![](http://urbanproductions.com/wingy/babylon/misc/playground_ce01.jpg)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T024711Z" creationid="aceway@qq.com" creationdate="20160427T024711Z">
        <seg>## 编译错误
![](http://urbanproductions.com/wingy/babylon/misc/playground_ce01.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Compilation modes
Before going further you have to understand there are two compilation modes available to build Babylon.js.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T092518Z" creationid="aceway@qq.com" creationdate="20160427T092518Z">
        <seg>## 编译模式
在深入之前，你需要明白有两种编译模式可用来编译Babylon.js.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Complex animation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T150904Z" creationid="aceway" creationdate="20160402T150904Z">
        <seg>## 复杂动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Controlling animations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T110133Z" creationid="aceway" creationdate="20160402T110133Z">
        <seg>## 控制动画</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Core version: *babylon.core.js* (introduced in 2.3)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T071838Z" creationid="aceway@qq.com" creationdate="20160427T071626Z">
        <seg>## 核心版本: *babylon.core.js* (在2.3中介绍引入)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Custom functions
You can get even more control over particles by using custom functions:
```startDirectionFunction: (emitPower: number, worldMatrix: Matrix, directionToUpdate: Vector3)```: This function can be defined to specify initial direction for every new particle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T101636Z" creationid="aceway" creationdate="20170131T101636Z">
        <seg>## 自定义方法
通过使用自定义方法你可以获得更多的控制粒子:
```startDirectionFunction: (emitPower: number, worldMatrix: Matrix, directionToUpdate: Vector3)```: 这个函数能够用为每个新粒子定义初始方向.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Customizing inputs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T142311Z" creationid="aceway" creationdate="20170207T142311Z">
        <seg>## 自定义输入</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Cylinders
A cylinder is defined by the following JSON:
```javascript
{
    "id": string,
    "height": float,
    "diameterTop": float,
    "diameterBottom": float,
    "tessellation": float,
    "subdivisions": integer,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T082605Z" creationid="aceway@qq.com" creationdate="20160427T082605Z">
        <seg>## 圆柱体
圆柱体通过如下的JSON格式定义:
```javascript
{
    "id": string,
    "height": float,
    "diameterTop": float,
    "diameterBottom": float,
    "tessellation": float,
    "subdivisions": integer,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Diving into createScene() ##
&amp;nbsp;
I would like you to visit the Babylon.js Playground once again (open in a new window or new tab, if possible), but this time we will visit its base URL at:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160404T145752Z">
        <seg>## 深入 createScene() ##
&amp;nbsp;
我希望你在此访问下 Babylon.js 娱乐场 (如果可能的话,用新的窗口或标签打开), 只是这次我们访问的是它的基础网址:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Easing functions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T160011Z" creationid="aceway" creationdate="20160402T125349Z">
        <seg>## 简化函数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Example
Here is a simple example of .babylon file:
```javascript
{
    "autoClear": true,
    "clearColor": [0, 0, 0],
    "ambientColor": [0, 0, 0],
    "gravity": [0, -9.81, 0],
    "cameras": [{
        "name": "Camera",
        "id": "Camera",
        "position": [7.4811, 5.3437, -6.5076],
        "target": [-0.3174, 0.8953, 0.3125],
        "fov": 0.8576,
        "minZ": 0.1,
        "maxZ": 100,
        "speed": 1,
        "inertia": 0.9,
        "checkCollisions": false,
        "applyGravity": false,
        "ellipsoid": [0.2, 0.9, 0.2]
    }],
    "activeCamera": "Camera",
    "lights": [{
        "name": "Sun",
        "id": "Sun",
        "type": 1,
        "position": [0.926, 7.3608, 14.1829],
        "direction": [-0.347, -0.4916, -0.7987],
        "intensity": 1,
        "diffuse": [1, 1, 1],
        "specular": [1, 1, 1]
    }],
    "materials": [{
        "name": "Material",
        "id": "Material",
        "ambient": [0.8, 0.8, 0.8],
        "diffuse": [0.64, 0.64, 0.64],
        "specular": [0.5, 0.5, 0.5],
        "specularPower": 50,
        "emissive": [0, 0, 0],
        "alpha": 1,
        "backFaceCulling": true,
        "diffuseTexture": {
            "name": "Metal1.png",
            "level": 1,
            "hasAlpha": 1,
            "coordinatesMode": 0,
            "uOffset": 0,
            "vOffset": 0,
            "uScale": 1,
            "vScale": 1,
            "uAng": 0,
            "vAng": 0,
            "wAng": 0,
            "wrapU": true,
            "wrapV": true,
            "coordinatesIndex": 0
        }
    },
    {
        "name": "Material.001",
        "id": "Material.001",
        "ambient": [0.8, 0.8, 0.8],
        "diffuse": [0.64, 0.64, 0.64],
        "specular": [0.5, 0.5, 0.5],
        "specularPower": 50,
        "emissive": [0, 0, 0],
        "alpha": 1,
        "backFaceCulling": true,
        "diffuseTexture": {
            "name": "concrete5.png",
            "level": 1,
            "hasAlpha": 1,
            "coordinatesMode": 0,
            "uOffset": 0,
            "vOffset": 0,
            "uScale": 5,
            "vScale": 5,
            "uAng": 0,
            "vAng": 0,
            "wAng": 0,
            "wrapU": true,
            "wrapV": true,
            "coordinatesIndex": 0
        }
    }],
    "geometries": {
        "boxes": [{
            "id": "BoxPrimitive",
            "size": 2,
            "canBeRegenerated": true,
            "tags": "Box Primitive Cube CanBeRegenerated"
        }],
        "vertexData": [{
            "id": "CubeGeometry",
            "updatable": false,
            "positions": [ 1, -1, 1, 1, -1, -1, -1, -1, 1, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, 1, 1, 1, 1, -1, 1, -1, 1, 1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1],
            "normals": [0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, -0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, -0.5773, 0.5773, -0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, -0.5773, -0.5773, -0.5773, -0.5773, -0.5773, -0.5773, 0.5773, -0.5773, -0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, 0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, -0.5773, -0.5773, 0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, 0.5773, -0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, 0.5773, -0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, 0.5773, 0.5773, -0.5773, 0.5773, -0.5773, -0.5773, 0.5773, -0.5773, 0.5773, 0.5773],
            "uvs": [0.5, 0.5, 0.5, 0, 0, 0.5, 0.5, 1, 0, 1, 0.5, 0.5, 0.5, 1, 0, 0.5, 0.5, 0.5, 0.5, 1, 0, 0.5, 0.5, 0.5, 0.5, 1, 1, 0.5, 0.5, 0.5, 0.5, 0, 0, 0.5, 0, 0, 0, 0.5, 0.5, 1, 0, 1, 0, 0.5, 0.5, 1, 0, 1, 1, 1, 1, 0.5, 0.5, 0, 0, 0, 0, 0.5],
            "indices": [0, 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 17, 2, 4, 18, 5, 19, 20, 21, 22, 23, 10, 12, 24, 25, 26, 27, 28]
        }]
    },
    "meshes": [{
        "name": "Plane",
        "id": "Plane",
        "materialId": "Material.001",
        "position": [0.0172, -2.9787, -0.5184],
        "rotation": [0, 0, 0],
        "scaling": [87.1479, 0.8635, 87.1479],
        "isVisible": true,
        "isEnabled": true,
        "checkCollisions": false,
        "billboardMode": 0,
        "receiveShadows": true,
        "positions": [-1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, 1],
        "normals": [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0],
        "uvs": [0.0001, 0.0001, 0.9999, 0.0001, 0.0001, 0.9999, 0.9999, 0.9999],
        "indices": [0, 1, 2, 1, 3, 2],
        "subMeshes": [{
            "materialIndex": 0,
            "verticesStart": 0,
            "verticesCount": 4,
            "indexStart": 0,
            "indexCount": 6
        }]
    },
    {
        "name": "Cube",
        "id": "Cube",
        "materialId": "Material",
        "geometryId": "CubeGeometry",
        "position": [0, 0, 0],
        "rotation": [0, 0, 0],
        "scaling": [1, 1, 1],
        "isVisible": true,
        "isEnabled": true,
        "checkCollisions": false,
        "billboardMode": 0,
        "receiveShadows": false,
        "subMeshes": [{
            "materialIndex": 0,
            "verticesStart": 0,
            "verticesCount": 29,
            "indexStart": 0,
            "indexCount": 36
        }],
        "animations": [{
            "dataType": 1,
            "framePerSecond": 30,
            "loopBehavior": 1,
            "name": "position animation",
            "property": "position",
            "keys": [{
                "frame": 0,
                "values": [0,0,0.0291]
            },
            {
                "frame": 1,
                "values": [0,0,0.0291]
            },
            {
                "frame": 30,
                "values": [0,0,10]
            },
            {
                "frame": 60,
                "values": [0,0,9.975]
            },
            {
                "frame": 90,
                "values": [0,0,0]
            },
            {
                "frame": 250,
                "values": [0,0,0]
            }]
        },
        {
            "dataType": 1,
            "framePerSecond": 30,
            "loopBehavior": 1,
            "name": "rotation animation",
            "property": "rotation",
            "keys": [{
                "frame": 0,
                "values": [-0.016, 0, 0]
            },
            {
                "frame": 30,
                "values": [-0.016, 0, 0]
            },
            {
                "frame": 60,
                "values": [-6.2832, 0, 0]
            },
            {
                "frame": 250,
                "values": [-6.2832, 0, 0]
            }]
        }],
        "autoAnimate": true,
        "autoAnimateFrom": 0,
        "autoAnimateTo": 250,
        "autoAnimateLoop": true
    },
    {
        "name": "Cube2",
        "id": "Cube2",
        "materialId": "Material",
        "geometryId": "CubeGeometry",
        "position": [10, 0, 0],
        "rotation": [0, 0, 0],
        "scaling": [1, 1, 1],
        "isVisible": true,
        "isEnabled": true,
        "checkCollisions": false,
        "billboardMode": 0,
        "receiveShadows": false,
        "subMeshes": [{
            "materialIndex": 0,
            "verticesStart": 0,
            "verticesCount": 29,
            "indexStart": 0,
            "indexCount": 36
        }]
    },
    {
        "name": "Cube3",
        "id": "Cube3",
        "materialId": "Material",
        "geometryId": "BoxPrimitive",
        "position": [-10, 0, 0],
        "rotation": [0, 0, 0],
        "scaling": [1, 1, 1],
        "isVisible": true,
        "isEnabled": true,
        "checkCollisions": false,
        "billboardMode": 0,
        "receiveShadows": false,
        "subMeshes": [{
            "materialIndex": 0,
            "verticesStart": 0,
            "verticesCount": 29,
            "indexStart": 0,
            "indexCount": 36
        }]
    }],
    "multiMaterials": [],
    "shadowGenerators": [{
        "useVarianceShadowMap": true,
        "mapSize": 1024,
        "lightId": "Sun",
        "renderList": ["Cube", "Cube2", "Cube3"]
    }],
    "skeletons": [],
    "sounds": [{          
        "name": "violons11.wav",
        "volume": 1,
        "autoplay": true,
        "loop": true,
        "soundTrackId": 1
        "spatialSound": true,
        "position": [0, 0, 0]
        "refDistance": 1.0,
        "rolloffFactor": 1.0,
        "maxDistance": 100,
        "distanceModel": "linear",
        "panningModel": "equalpower",
        "isDirectional": false,
        "coneInnerAngle": 90,
        "coneOuterAngle": 180,
        "coneOuterGain": 0,
        "connectedMeshId": 0,
        "localDirectionToMesh": [1, 0, 0]
   }]
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T091522Z" creationid="aceway@qq.com" creationdate="20160427T091522Z">
        <seg>## 例子
这儿是个简单的.babylon文件的例子:
```javascript
{
    "autoClear": true,
    "clearColor": [0, 0, 0],
    "ambientColor": [0, 0, 0],
    "gravity": [0, -9.81, 0],
    "cameras": [{
        "name": "Camera",
        "id": "Camera",
        "position": [7.4811, 5.3437, -6.5076],
        "target": [-0.3174, 0.8953, 0.3125],
        "fov": 0.8576,
        "minZ": 0.1,
        "maxZ": 100,
        "speed": 1,
        "inertia": 0.9,
        "checkCollisions": false,
        "applyGravity": false,
        "ellipsoid": [0.2, 0.9, 0.2]
    }],
    "activeCamera": "Camera",
    "lights": [{
        "name": "Sun",
        "id": "Sun",
        "type": 1,
        "position": [0.926, 7.3608, 14.1829],
        "direction": [-0.347, -0.4916, -0.7987],
        "intensity": 1,
        "diffuse": [1, 1, 1],
        "specular": [1, 1, 1]
    }],
    "materials": [{
        "name": "Material",
        "id": "Material",
        "ambient": [0.8, 0.8, 0.8],
        "diffuse": [0.64, 0.64, 0.64],
        "specular": [0.5, 0.5, 0.5],
        "specularPower": 50,
        "emissive": [0, 0, 0],
        "alpha": 1,
        "backFaceCulling": true,
        "diffuseTexture": {
            "name": "Metal1.png",
            "level": 1,
            "hasAlpha": 1,
            "coordinatesMode": 0,
            "uOffset": 0,
            "vOffset": 0,
            "uScale": 1,
            "vScale": 1,
            "uAng": 0,
            "vAng": 0,
            "wAng": 0,
            "wrapU": true,
            "wrapV": true,
            "coordinatesIndex": 0
        }
    },
    {
        "name": "Material.001",
        "id": "Material.001",
        "ambient": [0.8, 0.8, 0.8],
        "diffuse": [0.64, 0.64, 0.64],
        "specular": [0.5, 0.5, 0.5],
        "specularPower": 50,
        "emissive": [0, 0, 0],
        "alpha": 1,
        "backFaceCulling": true,
        "diffuseTexture": {
            "name": "concrete5.png",
            "level": 1,
            "hasAlpha": 1,
            "coordinatesMode": 0,
            "uOffset": 0,
            "vOffset": 0,
            "uScale": 5,
            "vScale": 5,
            "uAng": 0,
            "vAng": 0,
            "wAng": 0,
            "wrapU": true,
            "wrapV": true,
            "coordinatesIndex": 0
        }
    }],
    "geometries": {
        "boxes": [{
            "id": "BoxPrimitive",
            "size": 2,
            "canBeRegenerated": true,
            "tags": "Box Primitive Cube CanBeRegenerated"
        }],
        "vertexData": [{
            "id": "CubeGeometry",
            "updatable": false,
            "positions": [ 1, -1, 1, 1, -1, -1, -1, -1, 1, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, 1, 1, 1, 1, -1, 1, -1, 1, 1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1],
            "normals": [0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, -0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, -0.5773, 0.5773, -0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, -0.5773, -0.5773, -0.5773, -0.5773, -0.5773, -0.5773, 0.5773, -0.5773, -0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, 0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, -0.5773, -0.5773, 0.5773, -0.5773, 0.5773, 0.5773, 0.5773, 0.5773, 0.5773, -0.5773, 0.5773, -0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, 0.5773, -0.5773, -0.5773, 0.5773, 0.5773, -0.5773, -0.5773, 0.5773, 0.5773, -0.5773, 0.5773, -0.5773, -0.5773, 0.5773, -0.5773, 0.5773, 0.5773],
            "uvs": [0.5, 0.5, 0.5, 0, 0, 0.5, 0.5, 1, 0, 1, 0.5, 0.5, 0.5, 1, 0, 0.5, 0.5, 0.5, 0.5, 1, 0, 0.5, 0.5, 0.5, 0.5, 1, 1, 0.5, 0.5, 0.5, 0.5, 0, 0, 0.5, 0, 0, 0, 0.5, 0.5, 1, 0, 1, 0, 0.5, 0.5, 1, 0, 1, 1, 1, 1, 0.5, 0.5, 0, 0, 0, 0, 0.5],
            "indices": [0, 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 17, 2, 4, 18, 5, 19, 20, 21, 22, 23, 10, 12, 24, 25, 26, 27, 28]
        }]
    },
    "meshes": [{
        "name": "Plane",
        "id": "Plane",
        "materialId": "Material.001",
        "position": [0.0172, -2.9787, -0.5184],
        "rotation": [0, 0, 0],
        "scaling": [87.1479, 0.8635, 87.1479],
        "isVisible": true,
        "isEnabled": true,
        "checkCollisions": false,
        "billboardMode": 0,
        "receiveShadows": true,
        "positions": [-1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, 1],
        "normals": [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0],
        "uvs": [0.0001, 0.0001, 0.9999, 0.0001, 0.0001, 0.9999, 0.9999, 0.9999],
        "indices": [0, 1, 2, 1, 3, 2],
        "subMeshes": [{
            "materialIndex": 0,
            "verticesStart": 0,
            "verticesCount": 4,
            "indexStart": 0,
            "indexCount": 6
        }]
    },
    {
        "name": "Cube",
        "id": "Cube",
        "materialId": "Material",
        "geometryId": "CubeGeometry",
        "position": [0, 0, 0],
        "rotation": [0, 0, 0],
        "scaling": [1, 1, 1],
        "isVisible": true,
        "isEnabled": true,
        "checkCollisions": false,
        "billboardMode": 0,
        "receiveShadows": false,
        "subMeshes": [{
            "materialIndex": 0,
            "verticesStart": 0,
            "verticesCount": 29,
            "indexStart": 0,
            "indexCount": 36
        }],
        "animations": [{
            "dataType": 1,
            "framePerSecond": 30,
            "loopBehavior": 1,
            "name": "position animation",
            "property": "position",
            "keys": [{
                "frame": 0,
                "values": [0,0,0.0291]
            },
            {
                "frame": 1,
                "values": [0,0,0.0291]
            },
            {
                "frame": 30,
                "values": [0,0,10]
            },
            {
                "frame": 60,
                "values": [0,0,9.975]
            },
            {
                "frame": 90,
                "values": [0,0,0]
            },
            {
                "frame": 250,
                "values": [0,0,0]
            }]
        },
        {
            "dataType": 1,
            "framePerSecond": 30,
            "loopBehavior": 1,
            "name": "rotation animation",
            "property": "rotation",
            "keys": [{
                "frame": 0,
                "values": [-0.016, 0, 0]
            },
            {
                "frame": 30,
                "values": [-0.016, 0, 0]
            },
            {
                "frame": 60,
                "values": [-6.2832, 0, 0]
            },
            {
                "frame": 250,
                "values": [-6.2832, 0, 0]
            }]
        }],
        "autoAnimate": true,
        "autoAnimateFrom": 0,
        "autoAnimateTo": 250,
        "autoAnimateLoop": true
    },
    {
        "name": "Cube2",
        "id": "Cube2",
        "materialId": "Material",
        "geometryId": "CubeGeometry",
        "position": [10, 0, 0],
        "rotation": [0, 0, 0],
        "scaling": [1, 1, 1],
        "isVisible": true,
        "isEnabled": true,
        "checkCollisions": false,
        "billboardMode": 0,
        "receiveShadows": false,
        "subMeshes": [{
            "materialIndex": 0,
            "verticesStart": 0,
            "verticesCount": 29,
            "indexStart": 0,
            "indexCount": 36
        }]
    },
    {
        "name": "Cube3",
        "id": "Cube3",
        "materialId": "Material",
        "geometryId": "BoxPrimitive",
        "position": [-10, 0, 0],
        "rotation": [0, 0, 0],
        "scaling": [1, 1, 1],
        "isVisible": true,
        "isEnabled": true,
        "checkCollisions": false,
        "billboardMode": 0,
        "receiveShadows": false,
        "subMeshes": [{
            "materialIndex": 0,
            "verticesStart": 0,
            "verticesCount": 29,
            "indexStart": 0,
            "indexCount": 36
        }]
    }],
    "multiMaterials": [],
    "shadowGenerators": [{
        "useVarianceShadowMap": true,
        "mapSize": 1024,
        "lightId": "Sun",
        "renderList": ["Cube", "Cube2", "Cube3"]
    }],
    "skeletons": [],
    "sounds": [{          
        "name": "violons11.wav",
        "volume": 1,
        "autoplay": true,
        "loop": true,
        "soundTrackId": 1
        "spatialSound": true,
        "position": [0, 0, 0]
        "refDistance": 1.0,
        "rolloffFactor": 1.0,
        "maxDistance": 100,
        "distanceModel": "linear",
        "panningModel": "equalpower",
        "isDirectional": false,
        "coneInnerAngle": 90,
        "coneOuterAngle": 180,
        "coneOuterGain": 0,
        "connectedMeshId": 0,
        "localDirectionToMesh": [1, 0, 0]
   }]
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Filters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T105423Z" creationid="aceway" creationdate="20170204T105423Z">
        <seg>## 过滤器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Fresnel parameters
Fresnel parameters are defined by the following JSON:
```javascript
{
    "isEnabled": boolean,
    "leftColor": color3,
    "rightColor": color3,
    "bias": float,
    "power": float
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T081829Z" creationid="aceway@qq.com" creationdate="20160427T081742Z">
        <seg>## 菲涅耳参数
菲涅耳参数通过如下的JSON格式定义:
```javascript
{
    "isEnabled": boolean,
    "leftColor": color3,
    "rightColor": color3,
    "bias": float,
    "power": float
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Geometries
The structure of "geometries" is the following:
```javascript
{
    "boxes": array of Boxes (see below),
    "spheres": array of Spheres (see below),
    "cylinders": array of Cylinders (see below),
    "toruses": array of Toruses (see below),
    "grounds": array of Grounds (see below),
    "planes": array of Planes (see below),
    "torusKnots": array of TorusKnots (see below),
    "vertexData": array of VertexData (see below)
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T082420Z" creationid="aceway@qq.com" creationdate="20160427T082420Z">
        <seg>## 几何体
几何体的结构如下:
```javascript
{
    "boxes": array of Boxes (见下面),
    "spheres": array of Spheres (见下面),
    "cylinders": array of Cylinders (见下面),
    "toruses": array of Toruses (见下面),
    "grounds": array of Grounds (见下面),
    "planes": array of Planes (见下面),
    "torusKnots": array of TorusKnots (见下面),
    "vertexData": array of VertexData (见下面)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Global structure
The global structure of a .babylon file is the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T072844Z" creationid="aceway@qq.com" creationdate="20160427T072844Z">
        <seg>## 全局结构体
.babylon文件里的全局结构体是下面这样的:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Grounds
A ground is defined by the following JSON:
```javascript
{
    "id": string,
    "width": float,
    "height": float,
    "subdivisions": float,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T082811Z" creationid="aceway@qq.com" creationdate="20160427T082811Z">
        <seg>## 地面
地面通过如下的JSON格式定义:
```javascript
{
    "id": string,
    "width": float,
    "height": float,
    "subdivisions": float,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Helper function</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T110605Z" creationid="aceway" creationdate="20160402T110605Z">
        <seg>## 帮助函数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Hey, you made it!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T085118Z" creationid="aceway" creationdate="20160423T085118Z">
        <seg>## 嘿, 你做到了!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## How can I do this ?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T125843Z" creationid="aceway" creationdate="20160503T125843Z">
        <seg>## 我怎么做到这个 ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## How can I do this?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T104419Z" creationid="aceway" creationdate="20170131T104419Z">
        <seg>## 我怎么做到这个?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Inputs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T141350Z" creationid="aceway" creationdate="20170207T141350Z">
        <seg>## 输入</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Instances
A instance is defined by the following JSON:
```javascript
{
    "name": string,
    "tags": string,
    "position": vector3,
    "rotation": vector3 (can be omitted),
    "rotationQuaternion": vector4 (can be omitted),
    "scaling": vector3
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T083808Z" creationid="aceway@qq.com" creationdate="20160427T083808Z">
        <seg>## 实例
实例过如下的JSON格式定义:
```javascript
{
    "name": string,
    "tags": string,
    "position": vector3,
    "rotation": vector3 (可以忽略),
    "rotationQuaternion": vector4 (可以忽略),
    "scaling": vector3
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## LensFlareSystems
A lens flare system is defined by the following JSON:
```javascript
{
     "emitterId": string,
     "borderLimit": int,
     "flares": array of LensFlares (see below)
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T085713Z" creationid="aceway@qq.com" creationdate="20160427T085713Z">
        <seg>## 镜头光晕系统
镜头光晕系统通过如下的JSON格式定义:
```javascript
{
     "emitterId": string,
     "borderLimit": int,
     "flares": array of LensFlares (见下面)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## LensFlares
A lens flare is defined by the following JSON:
```javascript
{
     "position": float,
     "size": float,
     "color": color3,
     "textureName": string
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T085736Z" creationid="aceway@qq.com" creationdate="20160427T085736Z">
        <seg>## 镜头光晕
镜头光晕通过如下的JSON格式定义:
```javascript
{
     "position": float,
     "size": float,
     "color": color3,
     "textureName": string
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Lights
A light is defined by the following JSON:
```javascript
{
    "name": string,
    "id": string,
    "tags": string,
    "type": int (0 for point light, 1 for directional, 2 for spot and 3 for hemispheric),
    "position": vector3,
    "direction": vector3,
    "angle": float (for spot lights),
    "exponent": float (for spot lights),
    "groundColor": color3 (for hemispheric lights),
    "intensity": float,
    "range": float,
    "diffuse": color3,
    "specular": color3,
    "excludedMeshesIds": array of string,
    "includedOnlyMeshesIds": array of string,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T074705Z" creationid="aceway@qq.com" creationdate="20160427T074705Z">
        <seg>## 光源
一个光源通过如下的JSON格式定义:
```javascript
{
    "name": string,
    "id": string,
    "tags": string,
    "type": int (0表示点光，1表示方向光, 2表示聚光，3表示球面光),
    "position": vector3,
    "direction": vector3,
    "angle": float (用于点光源),
    "exponent": float (用于点光源),
    "groundColor": color3 (用于球面光光源),
    "intensity": float,
    "range": float,
    "diffuse": color3,
    "specular": color3,
    "excludedMeshesIds": array of string,
    "includedOnlyMeshesIds": array of string,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Materials
A material is defined by the following JSON:
```javascript
{
    "name": string,
    "id": string,
    "tags": string,
    "disableDepthWrite": boolean (can be omitted),
    "ambient": color3,
    "diffuse": color3,
    "specular": color3,
    "specularPower": float,
    "emissive": color3,
    "alpha": float,
    "backFaceCulling": boolean,
    "wireframe": boolean,
    "diffuseTexture": Texture (see below),
    "ambientTexture": Texture (see below),
    "opacityTexture": Texture (see below),
    "reflectionTexture": Texture (see below),
    "refractionTexture": Texture (see below),
    "indexOfRefraction": float,
    "emissiveTexture": Texture (see below),
    "specularTexture": Texture (see below),
    "bumpTexture": Texture (see below),
    "lightmapTexture": Texture (see below),
    "useLightmapAsShadowmap": boolean, 
    "checkReadyOnlyOnce": boolean
    "useReflectionFresnelFromSpecular": boolean (can be omitted),
    "useEmissiveAsIllumination": boolean (can be omitted),
    "diffuseFresnelParameters": Fresnel parameters (see below),
    "opacityFresnelParameters": Fresnel parameters (see below),
    "reflectionFresnelParameters": Fresnel parameters (see below),
    "refractionFresnelParameters": Fresnel parameters (see below),
    "emissiveFresnelParameters": Fresnel parameters (see below)
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T081808Z" creationid="aceway@qq.com" creationdate="20160427T074943Z">
        <seg>## 材质
一个材质通过如下JSON格式定义:
```javascript
{
    "name": string,
    "id": string,
    "tags": string,
    "disableDepthWrite": boolean (可以忽略),
    "ambient": color3,
    "diffuse": color3,
    "specular": color3,
    "specularPower": float,
    "emissive": color3,
    "alpha": float,
    "backFaceCulling": boolean,
    "wireframe": boolean,
    "diffuseTexture": Texture (见下面),
    "ambientTexture": Texture (见下面),
    "opacityTexture": Texture (见下面,
    "reflectionTexture": Texture (见下面),
    "refractionTexture": Texture (见下面),
    "indexOfRefraction": float,
    "emissiveTexture": Texture (见下面),
    "specularTexture": Texture (见下面),
    "bumpTexture": Texture (见下面),
    "lightmapTexture": Texture (见下面),
    "useLightmapAsShadowmap": boolean, 
    "checkReadyOnlyOnce": boolean
    "useReflectionFresnelFromSpecular": boolean (可以忽略),
    "useEmissiveAsIllumination": boolean (可以忽略),
    "diffuseFresnelParameters": 菲涅耳参数 (见下面),
    "opacityFresnelParameters": 菲涅耳参数 (见下面),
    "reflectionFresnelParameters": 菲涅耳参数 (见下面),
    "refractionFresnelParameters": 菲涅耳参数 (见下面),
    "emissiveFresnelParameters": 菲涅耳参数 (见下面)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Meshes
A mesh is defined by the following JSON:
```javascript
{
    "name": string,
    "id": string,
    "tags": string,
    "parentId": string,
    "materialId": string,
    "geometryId": string (can be omitted),
    "position": vector3,
    "rotation": vector3 (can be omitted),
    "rotationQuaternion": vector4 (can be omitted),
    "scaling": vector3,
    "pivotMatrix": matrix,
    "freezeWorldMatrix": boolean (can be omitted),
    "infiniteDistance": boolean,
    "showBoundingBox": boolean,
    "showSubMeshesBoundingBox": boolean,
    "isVisible": boolean,
    "isEnabled": boolean,
    "pickable": boolean,
    "applyFog": boolean,
    "alphaIndex": int,
    "checkCollisions": boolean,
    "billboardMode": int (0 = None, 1 = X, 2 = Y, 4 = Z, 7 = All),
    "receiveShadows": boolean,
    "physicsImpostor": int (0 = None, 1 = Box, 2 = Sphere),
    "physicsMass": float,
    "physicsFriction": float,
    "physicsRestitution": float,
    "positions": array of floats (3 per vertex),
    "normals": array of floats (3 per vertex),
    "uvs": array of floats (2 per vertex),
    "uvs2": array of floats (2 per vertex) which is the 2nd texture coordinates (can be omitted),
    "uv3s": array of floats (2 per vertex) which is the 3nd texture coordinates (can be omitted),
    "uv4s": array of floats (2 per vertex) which is the 4nd texture coordinates (can be omitted),
    "uv5s": array of floats (2 per vertex) which is the 5nd texture coordinates (can be omitted),
    "uv6s": array of floats (2 per vertex) which is the 6nd texture coordinates (can be omitted),
    "colors": array of floats (4 per vertex) which is the per vertex color (can be omitted),
    "hasVertexAlpha": boolean to indicate if colors field contains useful alpha value (can be omitted),
    "matricesIndices": array of ints (4 per vertex) which is the matrices indices for bones (can be omitted),
    "matricesWeights": array of floats (4 per vertex) which is the matrices weights for bones (can be omitted),
    "indices": array of ints (3 per face),
    "subMeshes": array of SubMeshes (see below),
    "animations": array of Animations (see below, can be omitted),
    "autoAnimate": boolean,
    "autoAnimateFrom": int,
    "autoAnimateTo": int,
    "autoAnimateLoop": boolean,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T084517Z" creationid="aceway@qq.com" creationdate="20160427T084055Z">
        <seg>## 网格
网格过如下的JSON格式定义:
```javascript
{
    "name": string,
    "id": string,
    "tags": string,
    "parentId": string,
    "materialId": string,
    "geometryId": string (可以忽略),
    "position": vector3,
    "rotation": vector3 (可以忽略),
    "rotationQuaternion": vector4 (可以忽略),
    "scaling": vector3,
    "pivotMatrix": matrix,
    "freezeWorldMatrix": boolean (可以忽略),
    "infiniteDistance": boolean,
    "showBoundingBox": boolean,
    "showSubMeshesBoundingBox": boolean,
    "isVisible": boolean,
    "isEnabled": boolean,
    "pickable": boolean,
    "applyFog": boolean,
    "alphaIndex": int,
    "checkCollisions": boolean,
    "billboardMode": int (0 = None, 1 = X, 2 = Y, 4 = Z, 7 = All),
    "receiveShadows": boolean,
    "physicsImpostor": int (0 = None, 1 = Box, 2 = Sphere),
    "physicsMass": float,
    "physicsFriction": float,
    "physicsRestitution": float,
    "positions": array of floats (每顶点3个数值),
    "normals": array of floats (每顶点3个数值),
    "uvs": array of floats (每顶点2个数值),
    "uvs2": array of floats (每顶点2个数值)  第2个纹理坐标(可以忽略),
    "uv3s": array of floats (每顶点2个数值)  第3个纹理坐标 (可以忽略),
    "uv4s": array of floats (每顶点2个数值)  第5个纹理坐标 (可以忽略),
    "uv5s": array of floats (每顶点2个数值)  第6个纹理坐标 (可以忽略),
    "uv6s": array of floats (每顶点2个数值)  第7个纹理坐标 (可以忽略),
    "colors": array of floats (每顶点4个数值) 每个顶点的颜色 (可以忽略),
    "hasVertexAlpha": 指明颜色是否包含透明信息的值(可以忽略),
    "matricesIndices": array of ints (每顶点4个数值)  骨骼数据在矩阵数组里的索引  (可以忽略),
    "matricesWeights": array of floats (每顶点4个数值)  骨骼数据在矩阵数组里的权重 (可以忽略),
    "indices": array of ints (每面3个数值,
    "subMeshes": array of SubMeshes (见下面),
    "animations": array of Animations (见下面, 可以忽略),
    "autoAnimate": boolean,
    "autoAnimateFrom": int,
    "autoAnimateTo": int,
    "autoAnimateLoop": boolean,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Minified version: *babylon.js*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T070917Z" creationid="aceway@qq.com" creationdate="20160427T070917Z">
        <seg>## 迷你版: *babylon.js*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## More About The Playground ##
Once again let's visit the saved playground scene that I sent you to, above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160404T101124Z">
        <seg>## 关于娱乐场更多 ##
让我们再次访问上面发给你的保存的娱乐展示场景网站.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Moving On ##</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160429T125532Z" creationid="aceway" creationdate="20160429T125532Z">
        <seg>## 继续前进 ##</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## MultiMaterials
A multiMaterial is defined by the following JSON:
```javascript
{
    "name": string,
    "id": string,
    "tags": string,
    "materials": array of string (which are the ids of sub-materials)
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T082307Z" creationid="aceway@qq.com" creationdate="20160427T082307Z">
        <seg>## 多纹理
多纹理通过如下JSON格式定义:
```javascript
{
    "name": string,
    "id": string,
    "tags": string,
    "materials": string数组 (都是子纹理的ID)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## My New Friends - .position, .rotation, and .scaling&amp;nbsp; ##</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T030523Z" creationid="aceway" creationdate="20160423T030523Z">
        <seg>## 新的帮手 - 位置属性(.position), 旋转属性(.rotation), 和缩放属性(.scaling)&amp;nbsp; ##</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Next step
Don’t hesitate to use sprites in your scene: they are not resource intensive, and they really can help keep high frame rates in your application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T124947Z" creationid="aceway" creationdate="20170129T124947Z">
        <seg>## 下一步
在你的场景中使用精灵吧，不要犹豫: 它们不是资源密集性的，而且它们真的有助于保持应用程序的高帧频.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Next step
Great, now you can develop a real FPS game!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T080741Z" creationid="aceway" creationdate="20170130T080741Z">
        <seg>## 下一步
非常棒, 现在你能够开发真实的FPS游戏了!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Next step
Now that you are becoming a real professional about Babylon.js, maybe it’s time to go deeper into the code to manipulate complex shaders, mesh, or textures.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T131200Z" creationid="aceway" creationdate="20170204T131200Z">
        <seg>## 下一步
现在你已经成为了一名Babylon.js专业人才了, 也许是时候深入代码来掌握复杂的着色器,网格或纹理了.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Next step
ParticleSystems are very powerful and versatile tools that can help bring realness and movement to your scenes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T103004Z" creationid="aceway" creationdate="20170131T103004Z">
        <seg>## 下一步
粒子系统时非常强有力且灵活的工具，它能够给你的场景带来真实感和运动感.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Next step
This collision method is convenient in a lot of situations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T022234Z" creationid="aceway" creationdate="20170131T012418Z">
        <seg>## 下一步
这种碰撞检测方式适用于大多数情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Next step
Well done!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T102741Z" creationid="aceway" creationdate="20170204T102741Z">
        <seg>## 下一步
干得漂亮!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Next step
With those two functions, your scenes are becoming a lot more dynamic: you can define a specific reaction to object intersecting and colliding, and begin to introduce physics notions into your scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T091813Z" creationid="aceway" creationdate="20170130T091813Z">
        <seg>## 下一步
通过这两个函数，你的场景变得更加的动态了: 你可以为相交和碰撞定义指定的响应方式， 以及开始为你的场景引入物理概念.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Next step
You have now learned how to use many cameras, and learned some advanced input options available on our two most-used cameras.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T143256Z" creationid="aceway" creationdate="20170207T143256Z">
        <seg>## 下一步
现在你已经学会了如何使用许多相机，而且学了我们两种最常用相机提供的一些高级输入选项.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Next step
You should have a beautiful scene now, but except from your 3D models, your world is pretty flat, and that’s a shame for your scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T045334Z" creationid="aceway" creationdate="20170204T045334Z">
        <seg>## 下一步
你现在应该已经有个漂亮的场景了, 只是缺乏你的三维模型, 你的虚拟世界很平坦, 那就是你场景的简陋之处.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Next step ##
----</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160429T141250Z" creationid="aceway" creationdate="20160429T141250Z">
        <seg>## 下一步 ##
----</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Next step ##
----
We saw that we needed a bit of 'positioning' to keep our basic elements from sitting atop one another in the scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T125309Z" creationid="aceway" creationdate="20160507T125309Z">
        <seg>## 下一步 ##
----
我们看到过, 我们需要一点'定位'来保持我们基础元素不覆盖场景里另一个基础元素.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## No worker version: *babylon.noworker.js*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T071649Z" creationid="aceway@qq.com" creationdate="20160427T071649Z">
        <seg>## 无worker的版本: *babylon.noworker.js*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## ParticleSystems
A particle system is defined by the following JSON:
```javascript
{
     "emitterId": string,
     "gravity": vector3,
     "direction1": vector3,
     "direction2": vector3,
     "minEmitBox": vector3,
     "maxEmitBox": vector3,
     "color1": color3,
     "color2": color3,
     "colorDead": color3,
     "deadAlpha": float,
     "emitRate": float,
     "updateSpeed": float,
     "targetStopFrame": int,
     "minEmitPower": int,
     "maxEmitPower": float,
     "minLifeTime": float,
     "maxLifeTime": float,
     "minSize": float,
     "maxSize": float,
     "minAngularSpeed": float,
     "maxAngularSpeed": float,
     "textureName": string,
     "blendMode": int,
     "capacity": int,
     "textureMask": color4,
     "linkToEmitter": bool,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T085536Z" creationid="aceway@qq.com" creationdate="20160427T085536Z">
        <seg>## 粒子系统
粒子系统通过如下的JSON格式定义:
```javascript
{
     "emitterId": string,
     "gravity": vector3,
     "direction1": vector3,
     "direction2": vector3,
     "minEmitBox": vector3,
     "maxEmitBox": vector3,
     "color1": color3,
     "color2": color3,
     "colorDead": color3,
     "deadAlpha": float,
     "emitRate": float,
     "updateSpeed": float,
     "targetStopFrame": int,
     "minEmitPower": int,
     "maxEmitPower": float,
     "minLifeTime": float,
     "maxLifeTime": float,
     "minSize": float,
     "maxSize": float,
     "minAngularSpeed": float,
     "maxAngularSpeed": float,
     "textureName": string,
     "blendMode": int,
     "capacity": int,
     "textureMask": color4,
     "linkToEmitter": bool,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Planes
A plane is defined by the following JSON:
```javascript
{
    "id": string,
    "size": float,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T082902Z" creationid="aceway@qq.com" creationdate="20160427T082902Z">
        <seg>##平面
平面通过如下的JSON格式定义:
```javascript
{
    "id": string,
    "size": float,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Playground URL formats
When you first arrive at the BabylonJS playground web site, the URL in your browser's address field... will look like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T030116Z" creationid="aceway@qq.com" creationdate="20160427T030116Z">
        <seg>## 娱乐场网址的格式
当你首次访问BabylonJS娱乐场网站时, 你浏览器地址栏里的网址... 看起来会像这样:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Quick Downloading 'The Big 4' Externals ##</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T080403Z" creationid="aceway" creationdate="20160423T080403Z">
        <seg>## 快速下载'四大'外部资源 ##</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Scene File Layout ##</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T131232Z" creationid="aceway" creationdate="20160403T131209Z">
        <seg>## 场景文件格式 ##</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## ShadowGenerators
A shadowGenerator is defined by the following JSON:
```javascript
{
    "useBlurVarianceShadowMap": boolean,
    "useVarianceShadowMap": boolean,
    "usePoissonSampling": boolean,
    "mapSize": int (between 64 and 2048, must be a power of 2),
    "bias": float,
    "forceBackFacesOnly": float,
    "lightId": string,
    "renderList": array of string (which are IDs of meshes)
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T085343Z" creationid="aceway@qq.com" creationdate="20160427T085252Z">
        <seg>## 阴影生成器
阴影生成器通过如下的JSON格式定义:
```javascript
{
    "useBlurVarianceShadowMap": boolean,
    "useVarianceShadowMap": boolean,
    "usePoissonSampling": boolean,
    "mapSize": int (在64和2048之间, 必须是2的幂),
    "bias": float,
    "forceBackFacesOnly": float,
    "lightId": string,
    "renderList": array of string (网格的ID)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Skeletons
A skeleton is defined by the following JSON:
```javascript
{
    "name": string,
    "id": string,
    "bones": array of Bones (see below)
    "needInitialSkinMatrix": boolean
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T085401Z" creationid="aceway@qq.com" creationdate="20160427T085325Z">
        <seg>## 骨架
骨架通过如下的JSON格式定义:
```javascript
{
    "name": string,
    "id": string,
    "bones": array of Bones (见下面)
    "needInitialSkinMatrix": boolean
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Sounds
A sound is defined by the following JSON:
```javascript
{
     "name": string, (name of the file to load)
     "volume": float, (if omitted will be 1)
     "autoplay": bool, (can be omitted)
     "loop": bool, (can be omitted)
     "soundTrackId": int, (can be omitted)
     "spatialSound": bool, (to enable 3D sound, can be omitted)
     "position": vector3, (if omitted will be 0,0,0)
     "refDistance": float, (can be omitted, default to 1)
     "rolloffFactor": float, (can be omitted, default to 1)
     "maxDistance": float, (can be omitted, default to 100)
     "distanceModel": string, (can be omitted, default to linear, other values: inverse or exponential)
     "panningModel": string, (can be omitted, default to HRTF, other value: equalpower)
     "isDirectional": bool, (to enable directional cone)
     "coneInnerAngle": float, (can be omitted but set it for directional sound)
     "coneOuterAngle": float, (can be omitted but set it for directional sound)
     "coneOuterGain": float, (can be omitted but set it for directional sound)
     "connectedMeshId": string, (ID of the mesh to attach to)
     "localDirectionToMesh": vector3 (can be omitted, default to 1,0,0)
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T090452Z" creationid="aceway@qq.com" creationdate="20160427T090452Z">
        <seg>## 音效
音效通过如下的JSON格式定义:
```javascript
{
     "name": string, (要加载的文件名)
     "volume": float, (如果忽略则为1)
     "autoplay": bool, (可忽略)
     "loop": bool, (可忽略)
     "soundTrackId": int, (可忽略)
     "spatialSound": bool, (启用3维音效，可忽略)
     "position": vector3, (如果忽略则为0,0,0)
     "refDistance": float, (可忽略, 默认为1)
     "rolloffFactor": float, (可忽略, 默认为1)
     "maxDistance": float, (可忽略, 默认为100)
     "distanceModel": string, (可忽略, 默认为线性的，其它值: 倒数或指数)
     "panningModel": string, (可忽略, 默认为HRTF, 其它值: 等幂)
     "isDirectional": bool, (启用方向椎体)
     "coneInnerAngle": float, (可忽略,用来设置有向音效)
     "coneOuterAngle": float, (可忽略,用来设置有向音效)
     "coneOuterGain": float, (可忽略,用来设置有向音效)
     "connectedMeshId": string, (网格附着对象的ID)
     "localDirectionToMesh": vector3 (可忽略,默认1,0,0)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Spheres
A sphere is defined by the following JSON:
```javascript
{
    "id": string,
    "segments": float,
    "diameter": float,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T082519Z" creationid="aceway@qq.com" creationdate="20160427T082519Z">
        <seg>## 球体
球体通过如下的JSON格式定义:
```javascript
{
    "id": string,
    "segments": float,
    "diameter": float,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## SubMeshes
A subMesh is defined by the following JSON:
```javascript
{
    "materialIndex": int,
    "verticesStart": int,
    "verticesCount": int,
    "indexStart": int,
    "indexCount": int
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T084720Z" creationid="aceway@qq.com" creationdate="20160427T084629Z">
        <seg>## 子网格
子网格过如下的JSON格式定义:
```javascript
{
    "materialIndex": int,
    "verticesStart": int,
    "verticesCount": int,
    "indexStart": int,
    "indexCount": int
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Synopsis
Here are the macro steps of what we're going to do:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T094405Z" creationid="aceway@qq.com" creationdate="20160427T094405Z">
        <seg>## 摘要
这个是我们将怎么做的宏观步骤:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Textures
A texture is defined by the following JSON:
```javascript
{
    "name": string (filename),
    "level": float (between 0 and 1),
    "hasAlpha": boolean,
    "getAlphaFromRGB": boolean,
    "coordinatesMode": int (0 = explicit, 1 spherical, 2 = planar, 3 = cubic, 4 = projection, 5 = skybox),
    "uOffset": float,
    "vOffset": float,
    "uScale": float,
    "vScale": float,
    "uAng": float,
    "vAng": float,
    "wAng": float,
    "wrapU": boolean,
    "wrapV": boolean,
    "coordinatesIndex": int,
    "animations": array of Animations (see below, can be omitted),
    "base64String": string (can be omitted)
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T082200Z" creationid="aceway@qq.com" creationdate="20160427T082200Z">
        <seg>## 纹理
纹理通过如下的JSON个格式定义:
```javascript
{
    "name": string (文件名),
    "level": float (在0和1间),
    "hasAlpha": boolean,
    "getAlphaFromRGB": boolean,
    "coordinatesMode": int (0 = 显式, 1 = 球, 2 = 平面, 3 = 立方, 4 = 投影, 5 = 天空盒),
    "uOffset": float,
    "vOffset": float,
    "uScale": float,
    "vScale": float,
    "uAng": float,
    "vAng": float,
    "wAng": float,
    "wrapU": boolean,
    "wrapV": boolean,
    "coordinatesIndex": int,
    "animations": array of Animations (见下面，可以忽略),
    "base64String": string (可以忽略)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## The Browser ##
Simply put, you will need to use a browser that supports WebGL and has Javascript activated.&amp;nbsp; Internet Explorer 11+, Firefox 4+, Google Chrome 9+, Opera 12+, etc.&amp;nbsp; WebGL is also supported by many browsers for mobile devices.&amp;nbsp; I will let you investigate the details of mobile WebGL, but know that Babylon.js has many features designed with mobile WebGL in mind.&amp;nbsp; Additionally, Babylon.js has complete support for full-immersion stereoscopic viewing and virtual reality head gear!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T130020Z" creationid="aceway" creationdate="20160403T130020Z">
        <seg>## 浏览器 ##
简而言之,你需要一个支持WebGL并且激活了javascript的浏览器.&amp;nbsp; IE11+, Firefox 4+, Google Chrome 9+, Opera 12+, 等都可以.&amp;nbsp; WebGL 也被许多移动设备等浏览器支持.&amp;nbsp; 请你自己调查移动设备的WEBGL详细情况, 但是你需要知晓的是 Babylon.js 有许多特性在设计时考虑了移动设备WebGL的.&amp;nbsp; 此外, Babylon.js 已经全面支持沉浸式立体视野和虚拟现实头盔!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## The Editor
![](http://urbanproductions.com/wingy/babylon/misc/playground_ed02.jpg)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160426T144913Z" creationid="aceway" creationdate="20160426T144913Z">
        <seg>## 编辑器
![](http://urbanproductions.com/wingy/babylon/misc/playground_ed02.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## The Rendering Canvas
![](http://urbanproductions.com/wingy/babylon/misc/playground_rc01.jpg)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T022538Z" creationid="aceway@qq.com" creationdate="20160427T022538Z">
        <seg>## 渲染画布
![](http://urbanproductions.com/wingy/babylon/misc/playground_rc01.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## The Ribbon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T132231Z" creationid="aceway" creationdate="20170204T132231Z">
        <seg>## 色带</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## The Top Menu
![](http://urbanproductions.com/wingy/babylon/misc/playground_tm01.jpg)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160425T141659Z" creationid="aceway" creationdate="20160425T141659Z">
        <seg>## 顶部菜单
![](http://urbanproductions.com/wingy/babylon/misc/playground_tm01.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## TorusKnots
A torusKnot is defined by the following JSON:
```javascript
{
    "id": string,
    "radius": float,
    "tube": float,
    "radialSegments": float,
    "tubularSegments": float,
    "p": float,
    "q": float,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T082931Z" creationid="aceway@qq.com" creationdate="20160427T082931Z">
        <seg>## 环形节
环形节通过如下的JSON格式定义:
```javascript
{
    "id": string,
    "radius": float,
    "tube": float,
    "radialSegments": float,
    "tubularSegments": float,
    "p": float,
    "q": float,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Toruses
A torus is defined by the following JSON:
```javascript
{
    "id": string,
    "diameter": float,
    "thickness": float,
    "tessellation": float,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T082720Z" creationid="aceway@qq.com" creationdate="20160427T082720Z">
        <seg>## 环型体
环型体通过如下的JSON定义:
```javascript
{
    "id": string,
    "diameter": float,
    "thickness": float,
    "tessellation": float,
    "canBeRegenerated": bool,
    "tags": string
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Unique Purpose Cameras</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T123026Z" creationid="aceway" creationdate="20170206T123026Z">
        <seg>## 独特用途的相机</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Unminified version: *babylon.max.js*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T070927Z" creationid="aceway@qq.com" creationdate="20160427T070537Z">
        <seg>## 非迷你版本: *babylon.max.js*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Useful Links ##
| Clickable Link&amp;nbsp; | What you will find |
| ------------- | ------------- |
| [**BabylonJS Main Website**](http://www.babylonjs.com/) |&amp;nbsp; Many great demos and useful links near the bottom |
| [**BabylonJS Forum**](http://www.html5gamedevs.com/forum/16-babylonjs) | Ask questions, help others, meet great friends |
| [**BabylonJS GitHub Site**](http://www.babylonjs.com) |&amp;nbsp; Downloads, tutorials, and many links (scroll down when there) |
| [**BabylonJS API Documentation**](http://doc.babylonjs.com) | A complete API map of all Babylon.js classes |
| [**BabylonJS Playground**](http://babylonjs-playground.azurewebsites.net) |&amp;nbsp; On-line white-boarding and basic scene testing site |
| [**BabylonJS Sandbox**](http://www.babylonjs.com/sandbox) | On-line site for testing .babylon files exported from modelers |</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T131125Z" creationid="aceway" creationdate="20160403T131125Z">
        <seg>## 有用链接 ##
| 可点击链接&amp;nbsp; | 可找到内容 |
| ------------- | ------------- |
| [**BabylonJS 主站**](http://www.babylonjs.com/) |&amp;nbsp; 许多很棒的演示而且底部有有用的链接 |
| [**BabylonJS 论坛**](http://www.html5gamedevs.com/forum/16-babylonjs) | 询问,助人,预见小伙伴 |
| [**BabylonJS GitHub 站点**](http://www.babylonjs.com) |&amp;nbsp; 下载, 教程, 和许多链接 (在那个页面的底部) |
| [**BabylonJS API 文档**](http://doc.babylonjs.com) | 所有Babylon.js类的完整 API 图册 |
| [**BabylonJS 娱乐展示**](http://babylonjs-playground.azurewebsites.net) |&amp;nbsp; 在线的,白板式 基础场景测试站点 |
| [**BabylonJS 沙箱**](http://www.babylonjs.com/sandbox) | 在线测试从建模工具导出的 .babylon 文件.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Vector3 and Color3 Values ##</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T135047Z" creationid="aceway" creationdate="20160421T135047Z">
        <seg>## Vector3 和 Color3 值 ##</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## VertexData
A vertexData is defined by the following JSON:
```javascript
{
    "id": string,
    "updatable": bool,
    "positions": array of floats (3 per vertex),
    "normals": array of floats (3 per vertex),
    "uvs": array of floats (2 per vertex),
    "uv2s": array of floats (2 per vertex) which is the 2nd texture coordinates (can be omitted),
    "uv3s": array of floats (2 per vertex) which is the 3nd texture coordinates (can be omitted),
    "uv4s": array of floats (2 per vertex) which is the 4nd texture coordinates (can be omitted),
    "uv5s": array of floats (2 per vertex) which is the 5nd texture coordinates (can be omitted),
    "uv6s": array of floats (2 per vertex) which is the 6nd texture coordinates (can be omitted),
    "colors": array of floats (3 per vertex) which is the per vertex color (can be omitted),
    "matricesIndices": array of ints (4 per vertex) which is the matrices indices for bones (can be omitted),
    "matricesWeights": array of floats (4 per vertex) which is the matrices weights for bones (can be omitted),
    "indices": array of ints (3 per face),
    "tags": string
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T083720Z" creationid="aceway@qq.com" creationdate="20160427T083720Z">
        <seg>## 顶点数据
顶点数据通过如下的JSON格式定义:
```javascript
{
    "id": string,
    "updatable": bool,
    "positions": array of floats (每顶点3个数值),
    "normals": array of floats (每顶点3个数值),
    "uvs": array of floats (每顶点2个数值),
    "uv2s": array of floats (每顶点2个数值) 第2个纹理坐标 (可以忽略),
    "uv3s": array of floats (每顶点2个数值) 第3个纹理坐标 (可以忽略),
    "uv4s": array of floats (每顶点2个数值) 第4个纹理坐标 (可以忽略),
    "uv5s": array of floats (每顶点2个数值) 第5个纹理坐标 (可以忽略),
    "uv6s": array of floats (每顶点2个数值) 第6个纹理坐标 (可以忽略),
    "colors": array of floats (每顶点3个数值)每个顶点的颜色 (可以忽略),
    "matricesIndices": array of ints (每顶点4个数值) 骨骼数据在矩阵数组里的索引 (可以忽略),
    "matricesWeights": array of floats (每顶点4个数值) 骨骼数据在矩阵数组里的权重  (可以忽略),
    "indices": array of ints (每面点3个数值),
    "tags": string
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Web worker based collision system (Since 2.1)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T045852Z" creationid="aceway" creationdate="20170130T043012Z">
        <seg>## 基于碰撞检测的Web工作线程 (2.1版本以上)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## What is it?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T151951Z" creationid="aceway" creationdate="20160423T151951Z">
        <seg>## 它是什么?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Why?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T092059Z" creationid="aceway@qq.com" creationdate="20160427T092059Z">
        <seg>## 为什么?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>## Wrapping Up ##
And that’s it!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T124141Z" creationid="aceway" creationdate="20160507T124141Z">
        <seg>## 结束语 ##
就是这样!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### And...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T032701Z" creationid="aceway@qq.com" creationdate="20160427T032701Z">
        <seg>### 最后...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Blur variance shadow map 
```javascript
shadowGenerator.useBlurVarianceShadowMap = true;
```
This is the better soften shadow filter but the slower as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T121122Z" creationid="aceway" creationdate="20170204T120338Z">
        <seg>qi### 模糊阴影映射 
```javascript
shadowGenerator.useBlurVarianceShadowMap = true;
```
这是个更好的柔化阴影过滤器但是也更慢.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Build !</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T101719Z" creationid="aceway@qq.com" creationdate="20160427T101719Z">
        <seg>### 构建 !</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Changing the Ambient color (`scene.ambientColor`)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T105849Z" creationid="aceway" creationdate="20170131T105849Z">
        <seg>### 改变环境色(`scene.ambientColor`)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Changing the Background color (`scene.clearColor`)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T105002Z" creationid="aceway" creationdate="20170131T105002Z">
        <seg>### 改变背景色(`scene.clearColor`)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Development mode</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T093017Z" creationid="aceway@qq.com" creationdate="20160427T093017Z">
        <seg>### 开发模式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Examples</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T123002Z" creationid="aceway" creationdate="20170204T123002Z">
        <seg>### 例子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Fix the Visual Studio Solution &amp; Project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T100108Z" creationid="aceway@qq.com" creationdate="20160427T100108Z">
        <seg>### 修复Visual Studio解决方案和工程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Fog</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T043506Z" creationid="aceway" creationdate="20170204T043506Z">
        <seg>### 雾</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Maintaining Your Focus
Sometimes you will run a scene and use your cursor keys and mouse in the rendering canvas, and then want to 'focus' back to the editor... to make some more code changes.&amp;nbsp; Sometimes, you will need to mouse-click somewhere in the editor area... to give the editor focus again.&amp;nbsp; Once the editor has focus, your cursor keys will, once again, move the editor's cursor.&amp;nbsp; This happens most often when a Babylon FreeCamera is the active camera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T032648Z" creationid="aceway@qq.com" creationdate="20160427T031633Z">
        <seg>### 维持焦点
有时候你运行一个场景，然后在渲染画布里使用光标键和鼠标, 最后想将焦点返回到编辑器里...以便做更多的代码修改.&amp;nbsp; 有时候, 你要在编辑器里其它区域点击鼠标... 以便重新设定编辑器焦点.&amp;nbsp; 一旦编辑器有了新焦点, 你的编辑器光标键会再次移动.&amp;nbsp; 这个常在场景里有激活的自由相机的情况发生。.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### More Basic Elements - Grounds
Up to this point, we have been talking about basic elements from our [**Playground Demo Scene 02**](http://babylonjs-playground.azurewebsites.net/?2), but a few important mesh shapes (basic elements) are not included in that demo scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T121749Z" creationid="aceway" creationdate="20160507T121749Z">
        <seg>### 更多基础元素 - 地面
对这点, 我们在 [**娱乐场演示场景 02**](http://babylonjs-playground.azurewebsites.net/?2)里谈论过该基础元素, 但有更多的重要网格造型 (基础元素)没有包含在那个演示场景里.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Move the project one level up
From Visual Studio, close the solution you just created, then go to the directory of the created project and move it one level up (c:\test\babylon.js\babylon.js\ will be moved to c:\test\babylon.js\)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T095924Z" creationid="aceway@qq.com" creationdate="20160427T095924Z">
        <seg>### 将工程移动到上层目录
在 Visual Studio里关掉钢厂创建的解决方案, 到被创建的工程目录，然后将它移到上层(c:\test\babylon.js\babylon.js\ 被移动到 c:\test\babylon.js\)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Poisson sampling
```javascript
shadowGenerator.usePoissonSampling = true;
```
If you set this one to _true_, Variance shadow maps will be disabled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T120106Z" creationid="aceway" creationdate="20170204T110632Z">
        <seg>### 泊松采样
```javascript
shadowGenerator.usePoissonSampling = true;
```
你过你把该值设置为_true_, 则差分阴影映射将被禁用.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Release mode</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T092524Z" creationid="aceway@qq.com" creationdate="20160427T092524Z">
        <seg>### 发布模式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Skybox</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T024635Z" creationid="aceway" creationdate="20170204T024635Z">
        <seg>### 天空盒</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### The BabylonJS Playground is located at... http://www.babylonjs.com/playground/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T033304Z" creationid="aceway@qq.com" creationdate="20160427T033304Z">
        <seg>### BabylonJS娱乐场位于... http://www.babylonjs.com/playground/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### The CSS Styles - Blue Section ###
&amp;nbsp;Notice the blue section of the big picture.&amp;nbsp; That is the CSS (Cascading Style Sheets) styles used to present the scene's web page,&amp;nbsp; and adjust its WebGL canvas to be centered and filled-out nicely in your browser.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T030032Z" creationid="aceway" creationdate="20160404T001438Z">
        <seg>### CSS 样式 - 蓝色部分 ###
&amp;nbsp;注意大图片中的蓝色部分.&amp;nbsp; 那是用来呈现场景页面的 CSS (布局样式表) 样式,&amp;nbsp; 它会调整 WebGL 画布居中且填满你的整个浏览器.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### The External Includes - Red Section ###</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T025949Z" creationid="aceway" creationdate="20160403T132226Z">
        <seg>### 外部包含 - 红色部分 ###</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### The HTML Part
First, create a basic HTML5 web page:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T145400Z" creationid="aceway" creationdate="20160428T145400Z">
        <seg>### HTML部分
首先, 创建一个基础的HTML5网页:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### The Internal Include - Green Section ###</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T030054Z" creationid="aceway" creationdate="20160404T002127Z">
        <seg>### 内部包含 - 绿色部分 ###</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### The Javascript External Includes Part (the framework)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T145706Z" creationid="aceway" creationdate="20160428T145706Z">
        <seg>### 包含的外部Javascript部分(框架)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### The createScene() Function - Purple Section ###
The purple section of the big picture... is the createScene() 'function'... a Javascript 'function'.&amp;nbsp; It is the most important section of a 'single HTML file' Babylon.js scene.&amp;nbsp; You are not required to use a createScene() function in your Javascript code, but please do... in these early days of your webGL learning.&amp;nbsp; I have some magic to show you... which is available if you keep most of your scene code... inside a function called createScene().&amp;nbsp; (Like the one shown in the big picture.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T031410Z" creationid="aceway" creationdate="20160404T025918Z">
        <seg>### createScene() 函数 - 紫色部分 ###
大图片里的紫色部分...是createScene() '函数'... 一个Javascript '函数'.&amp;nbsp; 它是'单HTML文件'场景里的最重要部分的.&amp;nbsp; 在你的Javascript代码里你不必使用createScene()函数, 但是在学习WebGL的早期日子里,请这样做吧.&amp;nbsp; 我有些魔法展示给你看... 如果你把大部分的场景代码放到一个叫做createScene()的函数里.&amp;nbsp; (就像大图片里展示的那样.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Variance shadow map 
```javascript
shadowGenerator.useVarianceShadowMap = true;
```
It is _true_ by default, because it is useful to decrease the aliasing of the shadow.  But if you want to reduce computation time, feel free to change it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T110709Z" creationid="aceway" creationdate="20170204T110544Z">
        <seg>### 差分阴影映射
```javascript
shadowGenerator.useVarianceShadowMap = true;
```
默认为_true_, 因为它对阴影的抗锯齿非常有用. 但是如果你想缩减计算的时间, 可以随意的改变它的值.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### Vector3 Values ###
Vector3 values take the form of...
``` javascript
BABYLON.Vector3(xValue, yValue, zValue)
```
They are often used to set/store...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T135237Z" creationid="aceway" creationdate="20160421T135237Z">
        <seg>### Vector3 值 ###
Vector3 值的形式是...
``` javascript
BABYLON.Vector3(xValue, yValue, zValue)
```
它们长被用来设置/存储...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>### customEffect (the fourth parameter in the constructor)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T081048Z" creationid="aceway" creationdate="20170131T081048Z">
        <seg>### 自定义效果(该构造函数的第四个参数customEffect)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#### Cons</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T093254Z" creationid="aceway@qq.com" creationdate="20160427T093254Z">
        <seg>#### 缺点</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#### Feel free to discuss the BabylonJS Playground, or any other BabylonJS framework topic... on our forum... located at...&amp;nbsp; http://www.html5gamedevs.com/forum/16-babylonjs/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T033424Z" creationid="aceway@qq.com" creationdate="20160427T033424Z">
        <seg>#### 请在我们的论坛上自由讨论BabylonJS娱乐场, 或者BabylonJS框架的其它话题... 论坛位于...&amp;nbsp; http://www.html5gamedevs.com/forum/16-babylonjs/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#### Pros</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T093311Z" creationid="aceway@qq.com" creationdate="20160427T093311Z">
        <seg>#### 优点</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#### Side Orientation
When a mesh is created, an optional side orientation is given to it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T114548Z" creationid="aceway" creationdate="20160507T114443Z">
        <seg>#### 朝向
当一个网格被创建时, 可以为其提供一个可选的朝向.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#### Updatable
This parameter, present in each mesh creation method... tells if the mesh can be updated after it is created.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T114234Z" creationid="aceway" creationdate="20160507T114234Z">
        <seg>#### 可更新否
这个参数, 在每个网格创建方法里出现... 告知该网格在创建后是否可以被更新.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>##Beautiful Playgrounds</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T040941Z" creationid="aceway@qq.com" creationdate="20160427T040941Z">
        <seg>##漂亮的娱乐场</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>##Examples</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T060346Z" creationid="aceway@qq.com" creationdate="20160427T060346Z">
        <seg>##例子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>##MeshBuilder CreateXXX() Methods With Options Parameter
In this tutorial, we will learn how to use the classical _CreateXXX()_ methods with the _options_ parameter instead of the full list of parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T144127Z" creationid="aceway" creationdate="20160428T144127Z">
        <seg>##MeshBuilder CreateXXX() 方法 With Options Parameter
In this 教程, we will learn how to use the classical _CreateXXX()_ 方法 with the _options_ parameter instead of the full list of 参数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>##Next step##
----
Great, your scene is looking better than ever with those materials!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T140258Z" creationid="aceway" creationdate="20160522T140258Z">
        <seg>##下一步##
----
非常棒, 你的场景具有这些材质后看起来比之前好多了!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#Interesting Playgrounds</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T035629Z" creationid="aceway@qq.com" creationdate="20160427T035629Z">
        <seg>#有趣的游乐场</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&amp;nbsp;
### Color3 Values ###
Color3 values look very much like Vector3 values.&amp;nbsp; Here is an example:
``` javascript
BABYLON.Color3(rValue, gValue, bValue)
```
The rValue is for red, the gValue is for green, and the bValue is for blue.&amp;nbsp; I bet you have already figured out that Color3 values are used for setting colors.&amp;nbsp; The rValue, gValue, and bValue, all contain float numbers in the range of 0 to 1.&amp;nbsp; Let's look at a few examples:
``` javascript
BABYLON.Color3(1, 0, 0) - red
BABYLON.Color3(0, 1, 1) - cyan
BABYLON.Color3(0, 1, 0) - green
BABYLON.Color3(1, 0, 1) - violet
BABYLON.Color3(1, 1, 0) - yellow
BABYLON.Color3(0, 0, 0) - black
BABYLON.Color3(1, 1, 1) - white
BABYLON.Color3(0.5, 0.5, 0.5) - medium gray
BABYLON.Color3(0.2, 0, 0.2) - dark purple
```
&amp;nbsp;
Not so difficult.&amp;nbsp; Let's say that you wanted to put a color on a box that you have already created.&amp;nbsp; The first thing you do is create a Javascript object called a StandardMaterial.&amp;nbsp; Then you would apply (set) that StandardMaterial as the box's .material property.&amp;nbsp; This is covered by our Materials tutorial, but let's look at how that is done, here.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T145552Z" creationid="aceway" creationdate="20160421T144445Z">
        <seg>&amp;nbsp;
### Color3值 ###
Color3值非常像Vector3值.&amp;nbsp;这儿是个例子:
``` javascript
BABYLON.Color3(rValue, gValue, bValue)
```
该rValue是用来表示红色, 该gValue用来表示绿色, 同时该bValue是用来表示蓝色.&amp;nbsp; 我猜你已经知道Color3是用在颜色上的.&amp;nbsp; 这些rValue, gValue, 和 bValue, 都是在0和1间的浮点值.&amp;nbsp; 让我们看些例子:
``` javascript
BABYLON.Color3(1, 0, 0) - 红
BABYLON.Color3(0, 1, 1) - 青
BABYLON.Color3(0, 1, 0) - 绿
BABYLON.Color3(1, 0, 1) - 紫
BABYLON.Color3(1, 1, 0) - 黄
BABYLON.Color3(0, 0, 0) - 黑
BABYLON.Color3(1, 1, 1) - 白
BABYLON.Color3(0.5, 0.5, 0.5) - 中灰
BABYLON.Color3(0.2, 0, 0.2) - 暗紫
```
&amp;nbsp;
没看起来这么难.&amp;nbsp; 让我们假设你要把一个颜色用到你之前已经创建的一个盒子上.&amp;nbsp; 你要做的第一件事情是创建一个叫做标准材质的Javascript对象.&amp;nbsp; 然后将该标准材质应用(设置)到盒子的材质(.material)属性上.&amp;nbsp; 这将在材质教程里讲, 但现在我们看这是如何做到的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>'Includes' is not necessarily the best term to describe the red section of the big picture, but I will be using that term often in this tutorial.&amp;nbsp; Three external Javascript files are being included into this scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T025957Z" creationid="aceway" creationdate="20160403T132340Z">
        <seg>'包含' 不一定是对 图中红色部分的最好的描述方式, 但是在这个教程中我会常常使用这中方式.&amp;nbsp; 三个外部的Javascript文件被包含到这个场景里.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(.emissiveTexture, .ambientTexture, .specularTexture)  I will remind you.  Now let's continue talking about the other StandardMaterial properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T145324Z" creationid="aceway" creationdate="20160521T145220Z">
        <seg>(.emissiveTexture, .ambientTexture, .specularTexture)  我将会提醒你的.  现在让我们继续谈论关于其它的标准材质属性.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Again, be sure to bookmark this URL so you can easily return to it later)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T031423Z" creationid="aceway@qq.com" creationdate="20160427T031423Z">
        <seg>(再一次提醒, 务必用书签保存这个网址，以便之后你能很容易的回来找它)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Be sure to bookmark it, using your browser's bookmark system)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T031011Z" creationid="aceway@qq.com" creationdate="20160427T031011Z">
        <seg>(记得用浏览器的书签保存好)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Be warned: A zeroed-out ArcRotateCamera aims in a strange way until _setPosition()_ is called).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T043935Z" creationid="aceway@qq.com" creationdate="20170206T043935Z">
        <seg>(注意: 一个归零的弧形旋转相机的对准目标是怪异的，除非调用_setPosition()_给它设置位置).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Feel free to edit the code of the demo scenes and click Run or Save.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T030335Z" creationid="aceway@qq.com" creationdate="20160427T030335Z">
        <seg>(可以自行编辑演示场景的代码然后点击运行或保存.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Please see the section on ambientColors in our [Unleash the Standard Material](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/01/babylon-js-unleash-the-standardmaterial-for-your-babylon-js-game.aspx) tutorial, for more information.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T024622Z" creationid="aceway" creationdate="20170204T024622Z">
        <seg>(请在我们的[运用标准材质](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/01/babylon-js-unleash-the-standardmaterial-for-your-babylon-js-game.aspx)教程里查看环境色一节,以获取更多信息)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Remove your test material, too.)  You can only see the backs of planes, or only see the insides (internal faces) of the box and sphere.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T120538Z" creationid="aceway" creationdate="20160507T120538Z">
        <seg>(也移除你试验的材质.)  你仅能看到平面的背面, 或者仅看到盒子和球体的里面 (内部的面).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Thanks AlexB!) This camera is specifically designed to follow any scene item with a ._position_... as it moves.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T135917Z" creationid="aceway" creationdate="20170206T135917Z">
        <seg>(感谢AlexB!) 它特别设计的， 以便通过一个._position_属性设置来使相机随场景中的任何移动物品... .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(if the mesh must be modified later)  and the optional side orientation (see below).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T103801Z" creationid="aceway" creationdate="20160507T103801Z">
        <seg>(如果网格之后要被修改)  和可选的朝向 (参见下面).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(if the mesh must be modified later) and the optional side orientation (see below).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T131158Z" creationid="aceway" creationdate="20160503T131158Z">
        <seg>(如果该网格后面必须被更新) 和可选的面朝向(参见下面).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(in the playground demo, we used /textures/flare.png)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T031305Z" creationid="aceway" creationdate="20170131T031305Z">
        <seg>(在娱乐场的演示，我们使用 /textures/flare.png)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(precision.w : in width; precision.h: in height), scene, updatable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T123553Z" creationid="aceway" creationdate="20160507T123553Z">
        <seg>(precision.w : 宽度上的精度; precision.h: 高度上的精度), 场景, 可更新否.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(subdivisions.w : in width; subdivisions.h: in height), precision = the number of subdivisions inside a tile.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T123518Z" creationid="aceway" creationdate="20160507T123518Z">
        <seg>(subdivisions.w : 宽度上的细分数量; subdivisions.h: 高度上的细分数量), 精度 = 一个瓦片内部的细分数量.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*  a Babylon Scene object
*  a camera that has been attached
*  a light that has been aimed
*  a sphere that has been placed at position 0,1,0 (we moved it upward +y)
*  a ground plane that has been placed at position 0,0,0 (default position)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T041036Z" creationid="aceway@qq.com" creationdate="20160429T040733Z">
        <seg>*  一个Babylon场景对象
*  附加一个相机
*  一个设置好目标的光源
*  一个放置在0,1,0处的球体 (我们将它y轴上移了)
*  一个放置在0,0,0处的地面(默认地方)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* ** Creation of a Tube**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T110441Z" creationid="aceway" creationdate="20160507T110441Z">
        <seg>* ** 创业一个管子**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Ambient**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T150756Z" creationid="aceway" creationdate="20160521T150053Z">
        <seg>* **环境光**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **AnaglyphCamera** - The AnaglyphCamera is for use with red and cyan 3D glasses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T132118Z" creationid="aceway" creationdate="20170207T131030Z">
        <seg>* **立体相机(AnaglyphCamera)** - 它是为使用红色与青色的3D眼镜准备的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **ArcRotateCamera** - This is a type of camera that rotates around a given target pivot.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T133506Z" creationid="aceway" creationdate="20170205T133506Z">
        <seg>* **弧形旋转相机** - 这种相机围绕目标点旋转.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Back-Face Culling**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T134309Z" creationid="aceway" creationdate="20160522T134309Z">
        <seg>* **背面剔除**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Create of a Tiled Ground**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T123008Z" creationid="aceway" creationdate="20160507T123008Z">
        <seg>* **创建一个瓦片地图**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Creation of DashedLines Mesh**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T142341Z" creationid="aceway" creationdate="20160503T142341Z">
        <seg>* **绘制点划线网格**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Creation of a Box**
```javascript
var box = BABYLON.Mesh.CreateBox("box", 6.0, scene, false, BABYLON.Mesh.DEFAULTSIDE);
```
Parameters are: name, size of the box, the scene to attach the mesh, updatable?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T131102Z" creationid="aceway" creationdate="20160503T131102Z">
        <seg>* **创建一个盒子**
```javascript
var box = BABYLON.Mesh.CreateBox("box", 6.0, 场景, false, BABYLON.Mesh.DEFAULTSIDE);
```
参数为: 名字,盒子大小, 它们将放到场景, 是否可更新?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Creation of a Cylinder**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T135916Z" creationid="aceway" creationdate="20160503T135916Z">
        <seg>* **创建一个圆柱体**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Creation of a Ground From HeightMap**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T122306Z" creationid="aceway" creationdate="20160507T122306Z">
        <seg>* **使用高度图创建地面**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Creation of a Ground**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T122009Z" creationid="aceway" creationdate="20160507T122009Z">
        <seg>* **创建一个地面**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Creation of a Knot**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T140735Z" creationid="aceway" creationdate="20160503T140735Z">
        <seg>* **创建一个结**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Creation of a Lines Mesh**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T141418Z" creationid="aceway" creationdate="20160503T141317Z">
        <seg>* **创建线型网格**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Creation of a Plane**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T131758Z" creationid="aceway" creationdate="20160503T131758Z">
        <seg>* **创建一个平面**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Creation of a Ribbon**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T103038Z" creationid="aceway" creationdate="20160507T102001Z">
        <seg>* **创建一条板带**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Creation of a Sphere**
```javascript
var sphere = BABYLON.Mesh.CreateSphere("sphere", 10.0, 10.0, scene, false,  BABYLON.Mesh.DEFAULTSIDE);
```
Parameters are: name, number of segments (highly detailed or not), size, scene to attach the mesh, updatable?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T131522Z" creationid="aceway" creationdate="20160503T131320Z">
        <seg>* **创建一个球体**
```javascript
var sphere = BABYLON.Mesh.CreateSphere("sphere", 10.0, 10.0, 场景, false,  BABYLON.Mesh.DEFAULTSIDE);
```
参数为: 名字, 细分段数 (高度细节或不需), 大小, 将被放到的场景, 是否可更新?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Creation of a Torus**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T140318Z" creationid="aceway" creationdate="20160503T140318Z">
        <seg>* **创建一个环面体**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **DeviceOrientationCamera** - The DeviceOrientationCamera is a camera that is specifically designed to react-to device orientation events.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T133842Z" creationid="aceway" creationdate="20170206T133842Z">
        <seg>* **设备定向相机(DeviceOrientationCamera)** - 它是专程为响应方向事件的设备设计的相机.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Diffuse**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T124847Z" creationid="aceway" creationdate="20160508T124847Z">
        <seg>* **散射**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Emissive**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T150826Z" creationid="aceway" creationdate="20160521T145336Z">
        <seg>* **放射光**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Explanations of a height map**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T050412Z" creationid="aceway" creationdate="20170204T050155Z">
        <seg>* **一张高度图的阐释**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **FollowCamera** - Forum user AlexB was kind enough to contribute the handy FollowCamera to Babylon.js.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T135632Z" creationid="aceway" creationdate="20170206T135632Z">
        <seg>* **跟随相机(FollowCamera)** - 论域用户AlexB好心的将便捷的跟随相机贡献给了Babylon.js.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **FreeCamera** - This is a 'first person shooter' (FPS) type of camera where you control the camera with the mouse and the cursors keys.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T120653Z" creationid="aceway" creationdate="20170205T120653Z">
        <seg>* **自由相机** - 它是一个 '第一人称射击' (FPS) 类型的相机，你通过鼠标和光标键控制相机.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **GamepadCamera** - Local superhero David "davrous" Rousset, who invented our cool VirtualJoysticksCamera, is also the inventor of our cool GamepadCamera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T132443Z" creationid="aceway" creationdate="20170206T132331Z">
        <seg>* **手持相机(GamepadCamera)** - 它也是很酷的虚拟操纵杆相机(VirtualJoysticksCamera)发明者 - 我们的本地英雄David "davrous" Rousset - 发明的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Intersect mesh**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T084622Z" creationid="aceway" creationdate="20170130T084622Z">
        <seg>* **相交网格**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Intersect point**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T090520Z" creationid="aceway" creationdate="20170130T090520Z">
        <seg>* **相交点**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Introduction**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T045757Z" creationid="aceway" creationdate="20170204T045757Z">
        <seg>* **介绍**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Specular**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T150747Z" creationid="aceway" creationdate="20160521T150747Z">
        <seg>* **镜面光**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Tips**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T102048Z" creationid="aceway" creationdate="20170204T102048Z">
        <seg>* **提示**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **TouchCamera** - The TouchCamera is a camera that works closely with hand.js, and opens Babylon.js to the modern technology of DOM Gesture Events.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T125118Z" creationid="aceway" creationdate="20170206T125118Z">
        <seg>* **触控相机** - 它是和hand.js紧密接合使用的相机, 而且是基于DOM技术的开放式手势操作事件.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Transparency** (alpha channel)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T124034Z" creationid="aceway" creationdate="20160508T124034Z">
        <seg>* **透明度** (alpha通过)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Universal Camera** - Introduced with version 2.3 of Babylon.js, this camera, as its name says... provides a universal way to handle inputs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T140034Z" creationid="aceway" creationdate="20170207T140034Z">
        <seg>* **万能相机** - Babylon.js2.3版本中引入的, 如其名所表述的，这种相机提供一种通用的方法来处理输入.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **VRDeviceOrientationFreeCamera** - The [VRDeviceOrientationFreeCamera](http://doc.babylonjs.com/classes/VRDeviceOrientationFreeCamera) is new, but we have SOME documentation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T134743Z" creationid="aceway" creationdate="20170207T134552Z">
        <seg>* **虚拟现实设备定向相机(VRDeviceOrientationFreeCamera)** -  [这个玩意](http://doc.babylonjs.com/classes/VRDeviceOrientationFreeCamera)是新鲜东西, 但是我们也游戏文档.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **Vector3**: An array of 3 floats ([x, y, z]).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T072337Z" creationid="aceway@qq.com" creationdate="20160427T072337Z">
        <seg>* **Vector3**: 一个含有3个浮点数([x, y, z])的数组.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **VirtualJoysticksCamera** - The VirtualJoysticksCamera is a camera that is specifically designed to react-to Virtual Joystick events.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T052205Z" creationid="aceway@qq.com" creationdate="20170207T052205Z">
        <seg>* **虚拟操纵杆相机(VirtualJoysticksCamera)** - 它是专门为响应虚拟操纵杆事件的设备设计的相机..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **WebVRFreeCamera** - The [WebVRFreeCamera](http://doc.babylonjs.com/classes/WebVRFreeCamera) quite new as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T135609Z" creationid="aceway" creationdate="20170207T135609Z">
        <seg>* **页面虚拟现实自由相机(WebVRFreeCamera)** - [这玩意儿](http://doc.babylonjs.com/classes/WebVRFreeCamera) 也非常新潮.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **WireFrame**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T135420Z" creationid="aceway" creationdate="20160522T135420Z">
        <seg>* **线框**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **closeArray** : _default False_  boolean, if true an extra set of triangles is constructed between the last path and the first path of pathArray.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T061133Z" creationid="aceway" creationdate="20170205T061133Z">
        <seg>* **closeArray** : _默认为否_  布尔值, 如果为真则在路径数组里的最后一条路径和第一条路径间额外创建一系列三角形.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* **closePath** : _default False_ boolean, if true the last point of each path of _pathArray_ is joined to the first point of this same path.  
example : http://www.babylonjs-playground.com/#1TDTHJ  
Here is some kind of unclosed tubular ribbon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T102708Z" creationid="aceway" creationdate="20170205T102708Z">
        <seg>* **closePath** : 布尔值,_默认为否_ , 如果为真则_路径数组里的_每条路径的首尾点将相连.  
示例: http://www.babylonjs-playground.com/#1TDTHJ  
这儿是些非封闭的管状色带.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* A particular setup of the engine has to be made to make sure it works.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T093755Z" creationid="aceway@qq.com" creationdate="20160427T093755Z">
        <seg>* 需要为引擎做特别的配置才能使它正常工作.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* AngularSpeed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T075526Z" creationid="aceway" creationdate="20170131T075526Z">
        <seg>* 角速度.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* BABYLON.Engine.CodeRepository: By default, this value points to "/src/"
* BABYLON.Engine.ShadersRepository: By default, this value points to "/src/Shaders/"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T070151Z" creationid="aceway@qq.com" creationdate="20160427T070151Z">
        <seg>* BABYLON.Engine.CodeRepository: 默认情况下，这个值指向 "/src/"
* BABYLON.Engine.ShadersRepository: 默认情况下，这个值指向 "/src/Shaders/"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* BABYLON.Mesh.DEFAULT which is the default value and equals FRONTSIDE currently.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T114952Z" creationid="aceway" creationdate="20160507T114952Z">
        <seg>* BABYLON.Mesh.DEFAULT 这是默认值, 当前同 FRONTSIDE.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Clone the Babylon.js repository localy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T094431Z" creationid="aceway@qq.com" creationdate="20160427T094431Z">
        <seg>* 把Babylon.js仓库复制到本地</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Create a Web Application project/solution, move it to the root of the Babylon.js repo and fix it</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T094545Z" creationid="aceway@qq.com" creationdate="20160427T094545Z">
        <seg>* 创建一个WEB应用程序工程/解决方案, 并把它移动到Babylon.js仓库的根目录下，然后调好</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Create a small TypeScript Sandbox</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T094644Z" creationid="aceway@qq.com" creationdate="20160427T094644Z">
        <seg>* 创建一个小的TypeScript安全沙盒</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Direction.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T075330Z" creationid="aceway" creationdate="20170131T075330Z">
        <seg>* 方向.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Dispose.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T080530Z" creationid="aceway" creationdate="20170131T080259Z">
        <seg>* 后期处理.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Duration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T080004Z" creationid="aceway" creationdate="20170131T080004Z">
        <seg>* 持续时间.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Emit rate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T074115Z" creationid="aceway" creationdate="20170131T073902Z">
        <seg>* 发射速率.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Gravity.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T075001Z" creationid="aceway" creationdate="20170131T075001Z">
        <seg>* 重力.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Include the Babylon.js source code in the web project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T094620Z" creationid="aceway@qq.com" creationdate="20160427T094620Z">
        <seg>* 在该WEB工程里包含进Babylon.js源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* LifeTime of particles:
```javascript
// Life time of each particle (random between...)
particleSystem.minLifeTime = 0.3;
particleSystem.maxLifeTime = 1.5;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T073846Z" creationid="aceway" creationdate="20170131T073846Z">
        <seg>* 粒子的时长:
```javascript
// 每个粒子的时长(在两值间随机...)
particleSystem.minLifeTime = 0.3;
particleSystem.maxLifeTime = 1.5;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Now you can give some colors to your particles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T073137Z" creationid="aceway" creationdate="20170131T073137Z">
        <seg>* 现在你可以给粒子赋予一些颜色.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Reflection probe [v2.3]
* Material library (Water, fire, normal) [v2.3]
* Logarithmic depth buffer
* Global illumination light
* Morph targets
* Sprites collisions
* Continuous update of octrees using webworkers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T104619Z" creationid="aceway@qq.com" creationdate="20160427T104619Z">
        <seg> * 反射式探头
 * 球形照明光光源
 * 3dsmax中生成增量格式
 * 变形目标
 * 精灵碰撞
 * 使用webworkers的八叉树连续更新</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Size of particles:
```javascript
// Size of each particle (random between...)
particleSystem.minSize = 0.1;
particleSystem.maxSize = 0.5;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T073659Z" creationid="aceway" creationdate="20170131T073659Z">
        <seg>* 粒子的大小:
```javascript
// 每个粒子的大小 (在两值间随机...)
particleSystem.minSize = 0.1;
particleSystem.maxSize = 0.5;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Speed/Strength.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T075644Z" creationid="aceway" creationdate="20170131T075644Z">
        <seg>* 速度/强度.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* The 2D image URL (most of the time, you will want use an image format which contain alpha channel, like .PNG).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170122T112444Z" creationid="aceway" creationdate="20170122T112444Z">
        <seg>* 二维图片的地址 (大多数时候，你会使用带透明通道的图片，比如.PNG格式的).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* The actual scene, to which we will add this manager.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170123T011304Z" creationid="aceway@qq.com" creationdate="20170123T011304Z">
        <seg>* 实际的场景，我们往其中添加本管理器.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* The capacity of this manager : the maximum number of instances in this manager (in our example, we could create 2000 instances of trees).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170122T112629Z" creationid="aceway" creationdate="20170122T112629Z">
        <seg>* 管理器的容量: 这个管理器里可以管理的最大实例数(在我们的例子里, 我们可以创建树的两千个实例)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* The cell size, corresponding to the size of your image, like we’ll see below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170123T011220Z" creationid="aceway@qq.com" creationdate="20170123T011220Z">
        <seg>* 单元尺寸，取决于你的图片尺寸，就像我们将在下面看到.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* The compilation is fast (it only compiles the .ts files to .js, there's no merging/minification)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T093400Z" creationid="aceway@qq.com" creationdate="20160427T093400Z">
        <seg>* 编译快速(它仅仅编译.ts文件成.js文件, 没有合并/缩小)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* The selected mode for particles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T074555Z" creationid="aceway" creationdate="20170131T074555Z">
        <seg>* 粒子的选中模式.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* The whole library source files must be accessible and served by the Web Server.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T093842Z" creationid="aceway@qq.com" creationdate="20160427T093842Z">
        <seg>* 整个库文件必须都可访问，且通过WEB服务器提供服务.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* Use previous values and increment it: ```BABYLON.Animation.ANIMATIONLOOPMODE_RELATIVE```
* Restart from initial value: ```BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE```
* Keep their final value: ```BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T054823Z" creationid="aceway@qq.com" creationdate="20160331T054823Z">
        <seg>* 使用之前的值然后递增： ```BABYLON.Animation.ANIMATIONLOOPMODE_RELATIVE```
* 从初始值重启 ```BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE```
* 保持最后的值: ```BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* You can debug the library in TypeScript, set breakpoints in the .ts files, etc.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T093451Z" creationid="aceway@qq.com" creationdate="20160427T093451Z">
        <seg>* 你可以在TypeScript里调试库, 在.ts文件里设置断点, 等等.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* You must reference the approx 150 .js files of Babylon.js instead of the main file (i.e. Babylon.js)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T093618Z" creationid="aceway@qq.com" creationdate="20160427T093618Z">
        <seg>* 你必须引用BabylonJS的大约150个 .js 文件而不是一个主文件(比如Babylon.js)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* _Minimum height_ : The lowest level of the mesh
* _Maximum height_ : the highest level of the mesh
* _Scene_: the actual scene
* _Updatable_: indicates if this mesh can be updated dynamically in the future (Boolean)
* successCallback : will be called after the height map was created and the vertex data is created.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T101201Z" creationid="aceway" creationdate="20170204T101028Z">
        <seg>* _最小高度_ : 网格的最低级别
* _最大高度_ : 网格的最高级别
* _场景_: 实际场景
* _是否可更新_: 指明该网格后继是否可被动态更新(布尔值)
* 成功后的回调函数: 当高度图被创建和顶点数据被创建后 将会调用该回调函数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* `scene.ambientColor` - changes the color used in several effects, including ambient lighting.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T104744Z" creationid="aceway" creationdate="20170131T104744Z">
        <seg> `scene.ambientColor` - 通过几种效果改变颜色，包括环境光源.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* `scene.clearColor` - changes the 'background' color.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T104619Z" creationid="aceway" creationdate="20170131T104619Z">
        <seg>* `scene.clearColor` - 改变'背景'色.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* cap : BABYLON.Mesh.NO_CAP, BABYLON.Mesh.CAP_START, BABYLON.Mesh.CAP_END, BABYLON.Mesh.CAP_ALL,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T111325Z" creationid="aceway" creationdate="20160507T111325Z">
        <seg>* 头罩: BABYLON.Mesh.NO_CAP, BABYLON.Mesh.CAP_START, BABYLON.Mesh.CAP_END, BABYLON.Mesh.CAP_ALL,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* closeArray : boolean, if true an extra set of triangles is constructed between the last path and the first path of _pathArray_,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T104707Z" creationid="aceway" creationdate="20160507T104639Z">
        <seg>* 闭合数组: 布尔值, 如果为真, 则会由 _路径数组_ 里的第一条路径和最后一条路径产生一组额外的三角形,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* closePath : boolean, if true the last point of each path of _pathArray_ is joined to the first point of this path,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T104832Z" creationid="aceway" creationdate="20160507T104659Z">
        <seg>* 闭合路径: 布尔值, 如果为真, 则 _路径数组_ 里的每条路径的最后一个点和其第一个点相连接,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* name : a string, the name you want to give to your shape,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T103847Z" creationid="aceway" creationdate="20160507T103847Z">
        <seg>* 名称: 一个字符串, 你想要给你的造型物定义的名称,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* name : string, the name of the tube mesh,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T110942Z" creationid="aceway" creationdate="20160507T110942Z">
        <seg>* 名称: 字符串, 管子网格的名字符,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* offset : integer (default half the _path_ size) mandatory only if the _pathArray_ contents only one path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T105323Z" creationid="aceway" creationdate="20160507T104849Z">
        <seg>* 偏移量 : 正数 (默认值是 _路径_ 大小的一半), 仅当 _路径数组_ 只有一条路径时才必须指定.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* path : an array of successive Vector3, at least two Vector3,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T111015Z" creationid="aceway" creationdate="20160507T111015Z">
        <seg>* 路径: 连续的三元向量数组,  至少两个三元向量,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* pathArray : an array populated with paths.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T103940Z" creationid="aceway" creationdate="20160507T103940Z">
        <seg>* 路径数组: 填充路径的数组.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* radius : nuumber, the tube radius, used when _radiusFunction_ parameter set to _null_,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T111108Z" creationid="aceway" creationdate="20160507T111108Z">
        <seg>* 半径: 数值, 管子的半径, 当 _半径函数_ 参数设置为 _null_时使用,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* radiusFunction : _optional_, a javascript function returns a radius value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T111252Z" creationid="aceway" creationdate="20160507T111252Z">
        <seg>* 半径函数: _可选的_, 一个返回半径值的 javascript 函数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* scene : the current scene object,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T105655Z" creationid="aceway" creationdate="20160507T105655Z">
        <seg>* 场景 : 当前场景对象,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* shadowGenerator.blurScale: Define the scale used to downscale the shadow map before applying the blur postprocess.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T122939Z" creationid="aceway" creationdate="20170204T122939Z">
        <seg>* shadowGenerator.blurScale: 在应用模糊化的后期处理之前定义用于降级的级数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* sideOrientation : the wanted side orientation (front, back or double side).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T111540Z" creationid="aceway" creationdate="20160507T111540Z">
        <seg>* 朝向: 期望有用的朝向 (前向, 后像 或 双向).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* sideOrientation : the wanted side-orientation (BABYLON.Mesh.FRONTSIDE / BACKSIDE / DOUBLESIDE / DEFAULT).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T105838Z" creationid="aceway" creationdate="20160507T105838Z">
        <seg>* 朝向: 期望的面朝向(BABYLON.Mesh.FRONTSIDE / BACKSIDE / DOUBLESIDE / DEFAULT).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* tesselation : the number of radial segments,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T111209Z" creationid="aceway" creationdate="20160507T111209Z">
        <seg>* 曲面细分: 径向的段数,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* updatable : boolean, if the ribbon should allow updating later,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T105758Z" creationid="aceway" creationdate="20160507T105702Z">
        <seg>* 可更新否: 布尔值, 如果允许之后更新缎带则设置为true,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>* updatable : boolean, if the tube should allow updating later,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T111408Z" creationid="aceway" creationdate="20160507T111408Z">
        <seg>* 可更新否: 布尔值, 该管子后面是否可以被更新,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*(We assume the backFaceCulling is enabled by default)*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T115057Z" creationid="aceway" creationdate="20160507T115057Z">
        <seg>*(我们假设默认 backFaceCulling 被启用了)*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*(You can disable _backFaceCulling_ with this _sideOrientation_ value)*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T120300Z" creationid="aceway" creationdate="20160507T120300Z">
        <seg>*(你可以用这个值来禁用 _backFaceCulling_ )*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*(you can disable _backFaceCulling_ with this _sideOrientation_ value)*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T120756Z" creationid="aceway" creationdate="20160507T120756Z">
        <seg>*(你可以用_朝向_值来禁用 _backFaceCulling_ )*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*(you shouldn't disable _backFaceCulling_ with _BABYLON.Mesh.DOUBLESIDE_ value)*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T121340Z" creationid="aceway" creationdate="20160507T121340Z">
        <seg>*(你不能用 _BABYLON.Mesh.DOUBLESIDE_ 值来禁用 _backFaceCulling_)*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*** Section on OpacityTexture needed here, coming soon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T134052Z" creationid="aceway" creationdate="20160522T134052Z">
        <seg>*** 此处需要一节讲述 OpacityTexture , 很快就会有的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**1 - Define and apply gravity**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T131024Z" creationid="aceway" creationdate="20170129T131024Z">
        <seg>**1 - 定义并应用重力**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**2 - Define an ellipsoid**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T035020Z" creationid="aceway" creationdate="20170130T034239Z">
        <seg>**2 - 定义一个椭球体**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**3 - Apply collision**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T035827Z" creationid="aceway" creationdate="20170130T035827Z">
        <seg>**3 - 应用碰撞**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**4 - Object vs. object collision**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T040640Z" creationid="aceway" creationdate="20170130T040640Z">
        <seg>**4 - 物体间的碰撞**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Also note that you won't be able to debug the TypeScript code of Babylon.js, the debugger will always step into the main JavaScript file (i.e. Babylon.js).**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T093010Z" creationid="aceway@qq.com" creationdate="20160427T093010Z">
        <seg>**也请注意，你不能调试Babylon.js的TypeScript代码, 调试器总是会进入到主JavaScript文件(比如Babylon.js).**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Babylon.js** comes with different versions that you can find in the /dist folder of the [repository](https://github.com/BabylonJS/Babylon.js/tree/master/dist):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T070439Z" creationid="aceway@qq.com" creationdate="20160427T070439Z">
        <seg>**Babylon.js** 随同不同的版本一起提供，你可以在[仓库](https://github.com/BabylonJS/Babylon.js/tree/master/dist)的 /dist 文件夹下找到不同版本:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Clear** - The Clear button is also easy to understand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160425T150002Z" creationid="aceway" creationdate="20160425T150002Z">
        <seg>**清除** - 清除Clear按钮也很容易理解.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Font size** - The Font size button almost needs no explaining.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160426T142815Z" creationid="aceway" creationdate="20160426T142815Z">
        <seg>**字体大小** - 该字体大小按钮几乎不需要解释.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Fullscreen** - The Fullscreen button also needs very little explaining.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160426T144600Z" creationid="aceway" creationdate="20160426T144600Z">
        <seg>**全屏** - 全屏按钮也只需非常少的解释.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Get .zip** - The Get .zip button is a handy playground feature.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160425T145043Z" creationid="aceway" creationdate="20160425T143608Z">
        <seg>**获取压缩.zip** - 获取.zip按钮娱乐场的一个方便特征.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Javascript Objects**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T143641Z" creationid="aceway" creationdate="20160418T143641Z">
        <seg>**Javascript 语言里的对象**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Methods**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T150747Z" creationid="aceway" creationdate="20160418T150747Z">
        <seg>**方法**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**More About Textures:** Be sure to use the correct path to your image (relative or absolute path).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T125557Z" creationid="aceway" creationdate="20160508T125557Z">
        <seg>**更多关于纹理:** 请确保你图片的路径正确 (相对或绝对路径).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**New** - The New button is a unique and handy feature.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160425T145027Z" creationid="aceway" creationdate="20160425T145027Z">
        <seg>**新建** - 新建按钮是个独特且方便的特征.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Next step**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T152605Z" creationid="aceway" creationdate="20160402T152605Z">
        <seg>**下一步**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Objects**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160410T145135Z" creationid="aceway" creationdate="20160410T145135Z">
        <seg>**对象**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**POSITION** - Also called translation, every mesh is POSITIONED in a scene using X, Y, and Z settings.&amp;nbsp; You can think of the .position property... as the mesh's LOCATION.&amp;nbsp; The link below... is a saved playground scene that illustrates using a mesh's .position property.&amp;nbsp; Try to open it in a new window or new tab, so you can jump back and forth between this tutorial... and the playground scene:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T150859Z" creationid="aceway" creationdate="20160423T031515Z">
        <seg>**定位** - 也被叫作平移, 每个网格对象都通过设定其X, Y, 和Z来被定位到场景里.&amp;nbsp; 你可以把位置属性(.position)认为称网格对象的定位.&amp;nbsp; 下面的链接... 是一个保存的娱乐场景,它阐述了网格对象的位置属性的使用.&amp;nbsp; 请试着在新窗口或标签页中打开, 那样你就可以前后跳转,以在本教程和娱乐展示场景间切换:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Parameter 1** - Name of this animation, nothing more.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T054041Z" creationid="aceway@qq.com" creationdate="20160331T014235Z">
        <seg>**参数1** - 动画的名称，仅此而已。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Parameter 2** - The property concerned.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T054046Z" creationid="aceway@qq.com" creationdate="20160331T014303Z">
        <seg>**参数 2** - 关心的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Parameter 3** - Frames per second requested: highest FPS possible in this animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T054101Z" creationid="aceway@qq.com" creationdate="20160331T014526Z">
        <seg>**参数 3** - 请求的每秒帧数：这个动画里最大 的FPS。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Parameter 4** - Type of change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T054105Z" creationid="aceway@qq.com" creationdate="20160331T014543Z">
        <seg>**参数 4** - 修改的类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Parameter 5** - Finally, you have to decide and enter the type of behavior this animation will take at its upper limit (e.g. will it continue on, will it begin again, will it stop at the last key value, etc.):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T083821Z" creationid="aceway@qq.com" creationdate="20160331T020033Z">
        <seg>**参数 5** - 最后,  你需要决定并输入这个动画的行为类型，这些会决定动画的受限(比如:当到最后一帧时是否继续，是否重新开始，或者停止)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Parameters for scene.beginAnimation:**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T085729Z" creationid="aceway@qq.com" creationdate="20160331T085729Z">
        <seg>**提供给scene.beginAnimation的参数：**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Properties**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T145907Z" creationid="aceway" creationdate="20160418T145907Z">
        <seg>**属性**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**ROTATION** - Every mesh is ROTATED in a scene... by setting the amount of spin around the shape's X, Y, and Z axes.&amp;nbsp; Picture a box with a rod stuck through every side and coming out the opposite side.&amp;nbsp; There are 6 sides to a box, so there would be 3 rods, an X rod, a Y rod, and a Z rod.&amp;nbsp; Rotation is the amount (and direction) of spin...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T062403Z" creationid="aceway" creationdate="20160423T034044Z">
        <seg>**旋转** - 场景里的每个网格的旋转... 都是通过设置造型的X, Y, 和 Z 轴的自旋量来实现的.&amp;nbsp; 想象一个画面:一个盒子,每个面都有个棒从这个面的边穿进去另一边穿出来.&amp;nbsp; 一个盒子有6个面, 所以需要3个棒, 一个为X轴, 一个为Y轴, 同时一个为Z轴.&amp;nbsp; 旋转是自旋量(包括方向)的累积...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Run** - The Run button is easy to understand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160425T141747Z" creationid="aceway" creationdate="20160425T141747Z">
        <seg>**运行** - 运行按钮很容易理解.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**SCALING** - Scaling... is stretching or shrinking... along any of the 3 scene axes.&amp;nbsp; Let's jump right into a saved playground scene that demonstrates scaling:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160423T074854Z">
        <seg>**缩放** - 缩放... 是指拉伸或缩小... 沿着场景轴的三个方向中的任意方向.&amp;nbsp; 我们直接跳转到娱乐场中演示缩放的场景:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Save** - The Save button will cause your scene to be permanently stored in the playground's database, and it will issue a unique URL, which we will talk more about, below.&amp;nbsp; Don't worry about accidentally overwriting any of the pre-installed demo scenes in the playground.&amp;nbsp; That is not allowed to happen.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160425T142332Z" creationid="aceway" creationdate="20160425T142332Z">
        <seg>**保存** - 保存按钮将使你的场景永久的保存到娱乐场的数据库里, 然后发出一个唯一的网址, 我们下面会更多的谈论它.&amp;nbsp; 别担心意外覆盖任何娱乐场里预装的场景.&amp;nbsp; 那个不会发生的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Scene Selector** - This pull-down selector button (shown as 'Custom' in the picture above)... is used to select any of the pre-installed playground demo scenes.&amp;nbsp; 'Custom' is not the name of any of those demo scenes.&amp;nbsp; The reason that it says 'Custom' is because the scene in the editor at the time that the picture was taken... was a 'custom' scene.&amp;nbsp; It was a modified Basic Scene demo that I created for use in the picture.&amp;nbsp; Often, when you first arrive at the playground site, this button will be labeled 'Basic Scene'.&amp;nbsp; No matter what label is currently on the button, the button is called the **Scene Selector** button.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160426T144509Z" creationid="aceway" creationdate="20160426T144509Z">
        <seg>**场景选择器** - 这个下拉选择器按钮 (上图里显示为'定制')...使用来从预装的娱乐场演示场景里自由选择的.&amp;nbsp; '定制'并不是任何一个演示场景的名称.&amp;nbsp; 它被称为'定制'是因为那个图片中编辑器里的场景是一个'定制'的场景.&amp;nbsp; 它是个修改了点基础场景演示(为上图而创建的).&amp;nbsp; 通常, 当你第一次打开娱乐场 站点时, 那个按钮会被标为'基础场景'.&amp;nbsp; 无论那个按钮上标注的是什么, 它都被叫做**场景选择器** 按钮.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Values**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160421T102443Z" creationid="aceway@qq.com" creationdate="20160421T102443Z">
        <seg>**值**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**oops** - One of the most important features in any programmer's editor... is UNDO and REDO, and our playground editor fully supports both of these features.&amp;nbsp; I am not familiar with the undo and redo keypresses for all OS systems, but for Windows... undo is Control-z and redo is Shift-Control-z.&amp;nbsp; You can do multiple undo and redo, as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T022502Z" creationid="aceway@qq.com" creationdate="20160427T022502Z">
        <seg>**吐槽** - 任何编辑器的重要特征之一是 撤销和重做, 我们的娱乐场编辑器完全支持这两个特征.&amp;nbsp; 我并不熟悉所有操作系统里的撤销和重做的操作键，, 但知道Windows系统里撤销键是Conntrol-z 而且 重做键是 Shift-Control-z.&amp;nbsp; 你也可以多次地执行撤销和重做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*Blur Variance Shadow Map*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T123329Z" creationid="aceway" creationdate="20170204T123329Z">
        <seg>*差分阴影映射*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*No filter*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T123156Z" creationid="aceway" creationdate="20170204T123156Z">
        <seg>*没有过滤器*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*Poisson sampling*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T123217Z" creationid="aceway" creationdate="20170204T123217Z">
        <seg>*泊松采样*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*Variance Shadow Map*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T123313Z" creationid="aceway" creationdate="20170204T123313Z">
        <seg>*差分阴影映射*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- Drawing on a texture using a DynamicTexture,
- Modifying a face that was hit (delete, move vertices, change color...),
- Changing a submesh material,
- etc.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T022124Z" creationid="aceway" creationdate="20170131T012219Z">
        <seg>+- 绘制动态纹理,
- 改变选中面 (删除，移动顶点，修改颜色...),
- 改变子网格的材质,
- 等等</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- Private variables are named starting with _ : ```_myVariable```
- Camel casing is used for non static properties/functions/variables: ```var myUberUsefulVariable```
- Pascal casing must be used for "static" functions: ```BABYLON.Vector3.Project```
- Braces ({}) must be used for every loop even when there is only one line:
```
if (condition) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T064821Z" creationid="aceway@qq.com" creationdate="20160427T064821Z">
        <seg>- 私有变量的命名以 _开头 : ```_myVariable```
- 驼峰规则(单词间首字母大写)用在非静态的属性/函数/变量: ```var myUberUsefulVariable```
- Pascal规则(单词间点号隔开)必须用在静态函数: ```BABYLON.Vector3.Project```
- 每个循环即使只有一行内容的也必须使用大括号({})包围:
```
if (条件) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- The animation is starting right after the method call.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T111136Z" creationid="aceway" creationdate="20160402T111136Z">
        <seg>- 这些动画在该函数调用后立即播放.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- Update gulp's [config.json](https://github.com/BabylonJS/Babylon.js/blob/master/Tools/Gulp/config.json)
- Update [documentation](http://doc.babylonjs.com/generals/Creating_the_Mini-fied_Version)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T065155Z" creationid="aceway@qq.com" creationdate="20160427T065155Z">
        <seg>- 更新gulp的配置[config.json](https://github.com/BabylonJS/Babylon.js/blob/master/Tools/Gulp/config.json)
- 更新[文档](http://doc.babylonjs.com/generals/Creating_the_Mini-fied_Version)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- `BABYLON.Scene.FOGMODE_EXP2` - same that above but faster.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T044129Z" creationid="aceway" creationdate="20170204T044129Z">
        <seg>- `BABYLON.Scene.FOGMODE_EXP2` - 和上面那个一样但是更快.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- `BABYLON.Scene.FOGMODE_EXP` - the fog density is following an exponential function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T044044Z" creationid="aceway" creationdate="20170204T044044Z">
        <seg>- `BABYLON.Scene.FOGMODE_EXP` - 雾的密度是根据一个指数函数定义.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- `BABYLON.Scene.FOGMODE_LINEAR` - the fog density is following a linear function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T044152Z" creationid="aceway" creationdate="20170204T044152Z">
        <seg>- `BABYLON.Scene.FOGMODE_LINEAR` - 雾的密度是根据一个线性函数定义.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- ```BABYLON.EasingFunction.EASINGMODE_EASEINOUT``` : Interpolation uses EaseIn for the first half of the animation and EaseOut for the second half.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T160304Z" creationid="aceway" creationdate="20160402T144354Z">
        <seg>- ```BABYLON.EasingFunction.EASINGMODE_EASEINOUT``` : 头半部份用EASEIN的方式,后半部份用EASEOUT的方式来控制插入. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- ```BABYLON.EasingFunction.EASINGMODE_EASEOUT``` : Interpolation follows 100% interpolation minus the output of the formula associated with the easing function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T144214Z" creationid="aceway" creationdate="20160402T143618Z">
        <seg>- ```BABYLON.EasingFunction.EASINGMODE_EASEOUT``` : 按照内插法 减去 简化函数的公式输出 来控制插入 .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- `bu` and `bv` properties: these are the barycentric coordinates of the picked point in the face.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T095728Z" creationid="aceway" creationdate="20170130T095728Z">
        <seg>- `bu` 和 `bv` 属性: 这些是拾取面的重心坐标.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- `faceId`: this is the position of the picked face's indices in the indices array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T095509Z" creationid="aceway" creationdate="20170130T095509Z">
        <seg>- `faceId`: 这是拾取面的索引位置--在索引数组里的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- `getTextureCoordinates()`: computes the texture coordinates of the picked point; these will be returned as a `Vector2` in texture space, which means its coordinates will be between 0 and 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T021815Z" creationid="aceway" creationdate="20170131T021815Z">
        <seg>- `getTextureCoordinates()`: 计算拾取点的纹理坐标, 返回纹理空间的2维向量，也就是坐标值在0至1间的坐标.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- `submeshId`: the ID of the picked submesh inside the picked mesh</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T095617Z" creationid="aceway" creationdate="20170130T095617Z">
        <seg>- `submeshId`: 拾取网格里的子网格ID</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- the value of a .position property on mesh, light, or camera objects
- the value of a .rotation property on a mesh object
- the value of a .scaling property on a mesh object
- the value of a .direction property on a light object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T135516Z" creationid="aceway" creationdate="20160421T135516Z">
        <seg>- 网格,灯光活着相机对象的位置(.position)属性的值
- 网格对象的旋转(.rotation)属性的值
- 网格对象的缩放(.scaling)属性的值
- 灯光对象的方向(.direction)属性的值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>---
ID_PAGE: 22621
PG_TITLE: A Babylon.js Primer
---
Welcome to the...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T031442Z" creationid="aceway" creationdate="20160403T031442Z">
        <seg>---
ID_PAGE: 22621
PG_TITLE: A Babylon.js 初级教程
---
欢迎到此...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>---
ID_PAGE: 22631
PG_TITLE: The Playground Tutorial
---
Introducing...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T090843Z" creationid="aceway" creationdate="20160423T090507Z">
        <seg>---
ID_PAGE: 22631
PG_TITLE: 娱乐场教程
---
介绍...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>---
ID_PAGE: 22641
PG_TITLE: Creating the Mini-fied Version
---
To create the minified version of Babylon.js you just have to 
use [gulp](https://github.com/BabylonJS/Babylon.js/tree/master/Tools/Gulp)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T065417Z" creationid="aceway@qq.com" creationdate="20160427T065417Z">
        <seg>---
ID_PAGE: 22641
PG_TITLE: 创建迷你版
---
创建一个迷你版的Babylon.js你必须使用[gulp](https://github.com/BabylonJS/Babylon.js/tree/master/Tools/Gulp)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>---
ID_PAGE: 22661
PG_TITLE: File Format Map (.babylon)
---
**Babylon.js** uses a JSON file format for describing scenes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T072156Z" creationid="aceway@qq.com" creationdate="20160427T072156Z">
        <seg>---
ID_PAGE: 22661
PG_TITLE: 文件格式(.babylon)
---
**Babylon.js** 使用JSON文件格式来描述场景.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>---
ID_PAGE: 22671
PG_TITLE: Approved Naming Conventions
---
If you want to contribute to babylon.js (What an *excellent* idea!), you should attempt to align your code with the following naming conventions:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T064245Z" creationid="aceway@qq.com" creationdate="20160427T064245Z">
        <seg>---
ID_PAGE: 22671
PG_TITLE: 已经审批的命名约定
---
如果你想为babylon.js做贡献 (多么*杰出* 的想法!), 你应当按照下面的命名约定调整你的代码:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>---
ID_PAGE: 22681
PG_TITLE: Roadmap
---
## Roadmap</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T104029Z" creationid="aceway@qq.com" creationdate="20160427T103452Z">
        <seg>---
ID_PAGE: 22681
PG_TITLE: 路线图
---
## 路线图</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>---
ID_PAGE: 24847
PG_TITLE: Parametric Shapes
---
## Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T132354Z" creationid="aceway" creationdate="20170204T131653Z">
        <seg>---
ID_PAGE: 24847
PG_TITLE: 参数化造型
---
## 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>---
ID_PAGE: 25088
PG_TITLE: Ribbon Tutorial
---
Here you'll find almost everything to understand how the Ribbon object works and how to play with it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T143706Z" creationid="aceway" creationdate="20160428T143706Z">
        <seg>---
ID_PAGE: 25088
PG_TITLE: Ribbon 教程
---
Here you'll find almost everything to understand how the Ribbon 对象 works and how to play with it.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>---
ID_PAGE: 25101
PG_TITLE: Supporting fog with ShaderMaterial
---
In order to support fog in your custom shaders, you will have to add some lines of code in your vertex and pixel shaders.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T143713Z" creationid="aceway" creationdate="20160428T143713Z">
        <seg>---
ID_PAGE: 25101
PG_TITLE: Supporting fog with ShaderMaterial
---
In order to support fog in your custom shaders, you will have to add some lines of 代码 in your vertex and pixel shaders.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>---
ID_PAGE: 25110
PG_TITLE: Position, Rotate, Translate and Spaces
---
The simple creature in Fig 1 is our pilot (a mesh) through the world of positions, rotations, translations and spaces in Babylon.js.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T144306Z" creationid="aceway" creationdate="20160428T144306Z">
        <seg>---
ID_PAGE: 25110
PG_TITLE: 定位, Rotate, Translate and Spaces
---
The simple creature in Fig 1 is our pilot (a 网格) through the world of positions, rotations, translations and spaces in Babylon.js.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>---
Setup Visual Studio to contribute to Babylon.js
---</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T092050Z" creationid="aceway@qq.com" creationdate="20160427T092050Z">
        <seg>---
配置Visual Studio以便为Babylon.js做贡献
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>-&gt; If you choose the `EXP`, or `EXP2` mode, then you can define the density option (default is `0.1`):
```javascript
scene.fogDensity = 0.01;
```
-&gt; Otherwise, if you choose `LINEAR` mode, then you can define where fog starts and where fog ends:
```javascript
scene.fogStart = 20.0;
scene.fogEnd = 60.0;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T044645Z" creationid="aceway" creationdate="20170204T044315Z">
        <seg>-&gt; 如果你选择`EXP`, 或 `EXP2` 模式, 那么你就可以定义密度选项(默认是`0.1`):
```javascript
scene.fogDensity = 0.01;
```
-&gt; 否则, 你选择`LINEAR`模式, 那么你就可以定义雾起止的地方:
```javascript
scene.fogStart = 20.0;
scene.fogEnd = 60.0;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Adding animation to my torus animations collection
torus.animations.push(animationTorus);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T145313Z" creationid="aceway" creationdate="20160402T145313Z">
        <seg>// 将动画添加到我的 椭圆环体动画集中
torus.animations.push(animationTorus);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Adding the easing function to the animation
animationTorus.setEasingFunction(easingFunction);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T145237Z" creationid="aceway" creationdate="20160402T145237Z">
        <seg>// 将简化函数添加到动画中
animationTorus.setEasingFunction(easingFunction);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// And here is how it is colored green...
myLines.color = new BABYLON.Color3(0,1,0);
```
The creation of the lines object was a bit strange, but it sure was easy to make it green, using a Color3 value.&amp;nbsp; You will learn more about the lines mesh....</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T025827Z" creationid="aceway" creationdate="20160423T025827Z">
        <seg>// 然后是如何对它着色...
myLines.color = new BABYLON.Color3(0,1,0);
```
线对象的创建优点怪怪的, 但是使它为绿色确很简单, 使用一个Color3值.&amp;nbsp; 关于线网格你将会学到更多....</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Animation keys
var keysTorus = [];
keysTorus.push({ frame: 0, value: torus.position });
keysTorus.push({ frame: 120, value: nextPos });
animationTorus.setKeys(keysTorus);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T145024Z" creationid="aceway" creationdate="20160402T145024Z">
        <seg>// 动画片段的键值
var keysTorus = [];
keysTorus.push({ frame: 0, value: torus.position });
keysTorus.push({ frame: 120, value: nextPos });
animationTorus.setKeys(keysTorus);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Change the scene background color to green.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T035401Z" creationid="aceway@qq.com" creationdate="20160429T035401Z">
        <seg>// 改变场景的背景色为绿色.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Creates a BABYLON.DirectionalLight type of object
var light = new BABYLON.DirectionalLight("Dir0", new BABYLON.Vector3(0, -1, 0), scene);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T144605Z" creationid="aceway" creationdate="20160418T144435Z">
        <seg>// 创建一个 BABYLON.DirectionalLight 方向光对象类型
var light = new BABYLON.DirectionalLight("Dir0", new BABYLON.Vector3(0, -1, 0), scene);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Creates a BABYLON.FreeCamera type of object
var camera = new BABYLON.FreeCamera("freecam", new BABYLON.Vector3(0, 0, 5), scene);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T144653Z" creationid="aceway" creationdate="20160418T144413Z">
        <seg>// 创建一个 BABYLON.FreeCamera 自由相机对象类型
var camera = new BABYLON.FreeCamera("freecam", new BABYLON.Vector3(0, 0, 5), scene);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Creates a BABYLON.Mesh type of object
var mybox = BABYLON.Mesh.CreateBox("box", 6.0, scene);
```
You get the idea.&amp;nbsp; Javascript objects, are used often in Babylon.js scenes.&amp;nbsp; Sometimes you will create them, and other times you will get a 'reference' or 'handle' to an object that was created earlier.&amp;nbsp; Getting a reference/handle to a Javascript object, essentially means opening a communication line to an already-built object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T145248Z" creationid="aceway" creationdate="20160418T144538Z">
        <seg>// 创建一个 BABYLON.Mesh 网格对象类型
var mybox = BABYLON.Mesh.CreateBox("box", 6.0, scene);
```
你该清楚了.&amp;nbsp; Javascript 对象, 常常用在 Babylon.js 场景里.&amp;nbsp; 又是你创建它们, 另外一些时候你获得一个早些时候创建的对象的'引用' 或 '句柄' .&amp;nbsp; 持有一个Javascript对象的引用或句柄, 实质上意味着和已有的对象建立了通信线.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Creates a BABYLON.Scene type of object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T144323Z" creationid="aceway" creationdate="20160418T144323Z">
        <seg>// 创建一个 BABYLON.Scene 场景对象类型.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Creating an easing function
var easingFunction = new BABYLON.CircleEase();</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T145044Z" creationid="aceway" creationdate="20160402T145044Z">
        <seg>// 创建一个简化函数
var easingFunction = new BABYLON.CircleEase();</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Dim the light a small amount</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T035759Z" creationid="aceway@qq.com" creationdate="20160429T035759Z">
        <seg>// 将光源光线置为昏暗</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// For each easing function, you can choose beetween EASEIN (default), EASEOUT, EASEINOUT
easingFunction.setEasingMode(BABYLON.EasingFunction.EASINGMODE_EASEINOUT);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T145214Z" creationid="aceway" creationdate="20160402T145214Z">
        <seg>// 对于每个简化函数, 你可以从 EASEIN (default), EASEOUT, EASEINOUT 中选择一个模式
easingFunction.setEasingMode(BABYLON.EasingFunction.EASINGMODE_EASEINOUT);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Get the canvas element from our HTML above</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T034521Z" creationid="aceway@qq.com" creationdate="20160429T034521Z">
        <seg>// 从上面的HTML里获取我们的画布元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Gradient is the percent of value change</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T150402Z" creationid="aceway" creationdate="20160402T150402Z">
        <seg>// Gradient 是改变值的百分比</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Here is the core method you should change to make your own Easing Function</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T150340Z" creationid="aceway" creationdate="20160402T150340Z">
        <seg>// 这是你创建自己的简化函数时应该修改的核心方法.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Leave this function</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T040154Z" creationid="aceway@qq.com" creationdate="20160429T040154Z">
        <seg>// 离开该函数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Let's try our built-in 'ground' shape.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T040057Z" creationid="aceway@qq.com" creationdate="20160429T040057Z">
        <seg>// 让我们尝试Babylonjs内置的'地面'状造型.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Let's try our built-in 'sphere' shape.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T035917Z" creationid="aceway@qq.com" creationdate="20160429T035917Z">
        <seg>// 让我们尝试Babylonjs内置的'球'状造型.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Load the BABYLON 3D engine</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T034537Z" creationid="aceway@qq.com" creationdate="20160429T034537Z">
        <seg>// 加载BABYLON 3D引擎</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Move the sphere upward 1/2 its height</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T040023Z" creationid="aceway@qq.com" creationdate="20160429T040023Z">
        <seg>// 将移动球向上 1/2 其高度</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Now create a basic Babylon Scene object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T035325Z" creationid="aceway@qq.com" creationdate="20160429T035325Z">
        <seg>// 现在创建一个Babylon场景对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Now, call the createScene function that you just finished creating</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T065016Z" creationid="aceway@qq.com" creationdate="20160429T065016Z">
        <seg>// 现在, 调用刚创建完的createScene函数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Register a render loop to repeatedly render the scene</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T065147Z" creationid="aceway@qq.com" creationdate="20160429T065147Z">
        <seg>// 注册一个渲染循环已重复的渲染场景</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Some other mesh
myMesh.renderingGroupId = 1;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T043413Z" creationid="aceway" creationdate="20170204T043413Z">
        <seg>// 一些其它网格对象的
myMesh.renderingGroupId = 1;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// This attaches the camera to the canvas</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T035523Z" creationid="aceway@qq.com" creationdate="20160429T035523Z">
        <seg>// 将相机附加到画布上</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// This begins the creation of a function that we will 'call' just after it's built</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T035300Z" creationid="aceway@qq.com" creationdate="20160429T035300Z">
        <seg>// 这是创建函数的开头，该函数在被构建后立即调用t</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// This creates a light, aiming 0,1,0 - to the sky.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T035627Z" creationid="aceway@qq.com" creationdate="20160429T035627Z">
        <seg>// 创建一个光源，在0,1,0点朝向天空.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// This creates and positions a free camera</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T035433Z" creationid="aceway@qq.com" creationdate="20160429T035433Z">
        <seg>// 创建并放置一个自由相机</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// This targets the camera to scene origin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T035505Z" creationid="aceway@qq.com" creationdate="20160429T035505Z">
        <seg>// 将相机朝向对准场景原点</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Watch for browser/canvas resize events</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T065430Z" creationid="aceway@qq.com" creationdate="20160429T065430Z">
        <seg>// 监测浏览器/画布大小改变事件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// We try to pick an object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T093720Z" creationid="aceway" creationdate="20170130T093720Z">
        <seg>// 我们尝试拾取一个物体</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// the torus destination position
var nextPos = torus.position.add(new BABYLON.Vector3(-80, 0, 0));</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T144959Z" creationid="aceway" creationdate="20160402T144959Z">
        <seg>// 椭圆环体的目标位置
var nextPos = torus.position.add(new BABYLON.Vector3(-80, 0, 0));</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//At the animation key 0, the value of scaling is "1"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T154509Z" creationid="aceway@qq.com" creationdate="20160331T085257Z">
        <seg>//在动画0键，放大倍数是 1。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//At the animation key 100, the value of scaling is "1"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T085404Z" creationid="aceway@qq.com" creationdate="20160331T085404Z">
        <seg>//在动画的第100键，放大倍数是1。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//At the animation key 20, the value of scaling is "0.2"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T085336Z" creationid="aceway@qq.com" creationdate="20160331T085336Z">
        <seg>//在动画的第20键，放大倍数是0.2。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//Create a box</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T014056Z" creationid="aceway@qq.com" creationdate="20160331T014056Z">
        <seg>//创建盒子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//Finally, launch animations on torus, from key 0 to key 120 with loop activated
scene.beginAnimation(torus, 0, 120, true);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T160431Z" creationid="aceway" creationdate="20160402T145450Z">
        <seg>//最后, 以不断重复从0到120键值的方式加载动画
scene.beginAnimation(torus, 0, 120, true);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//Here... your basic scene as before: [scene, light, camera]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T014049Z" creationid="aceway@qq.com" creationdate="20160331T014049Z">
        <seg>//这儿... 作为开头的基础场景元素[scene,light,camera]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//Your code here
});
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T151229Z" creationid="aceway" creationdate="20160402T151218Z">
        <seg>//你的代码放在这里
});
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>//Zoom
        if (camera.radius &gt; 150)
            camera.radius = 150;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T102511Z" creationid="aceway" creationdate="20170204T102511Z">
        <seg>//缩放
        if (camera.radius &gt; 150)
            camera.radius = 150;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>0 = Trigger, 1 = Action, 2 = Flow Control)
    "name": string, (name of the action, trigger or flow control)
    "detached": boolean, (if the node is detached or not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T090744Z" creationid="aceway@qq.com" creationdate="20160427T090744Z">
        <seg>0 = 触发式, 1 = 动作, 2 = 流控制)
    "name": string, (触发式或流程的动作名)
    "detached": boolean, (节点是否挂载上.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1- **Sprite manager**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170122T110934Z" creationid="aceway" creationdate="20170122T110934Z">
        <seg>1- **精灵管理器**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2- **Create an instance**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170123T011704Z" creationid="aceway@qq.com" creationdate="20170123T011704Z">
        <seg>2- **创建一个实例**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3- **Sprite animation**</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T121549Z" creationid="aceway" creationdate="20170129T121549Z">
        <seg>3- **精灵动画**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>;-) All demos on babylonjs.com are based upon that feature.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T141213Z" creationid="aceway" creationdate="20170207T141213Z">
        <seg>;-) 在babylonjs.com网站上所有的演示都是基于该功能的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;/html&gt;
```
### The CSS Style Part</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T145449Z" creationid="aceway" creationdate="20160428T145449Z">
        <seg>&lt;/html&gt;
```
### CSS样式部分</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;title&gt;Babylon - Basic scene&lt;/title&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T145423Z" creationid="aceway" creationdate="20160428T145423Z">
        <seg>&lt;title&gt;Babylon - 基础场景&lt;/title&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; By default Babylon.js will give you a vUV and a vColor varying parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T100306Z" creationid="aceway" creationdate="20170131T100256Z">
        <seg>&gt; Babylon.js默认为你提供了一个纹理向量(vUV)变参和一个颜色向量(vColor)变参.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Camera.**&amp;nbsp; The three most commonly used TYPES of cameras... are ArcRotateCamera, FreeCamera, and TouchCamera.&amp;nbsp; There are many types of camera available in Babylon.js, but these three are the most common.&amp;nbsp; ANY number of cameras can be coded into a scene, but only one of those cameras... is the 'active camera'.&amp;nbsp; We have a tutorial in our Playpen Series... dedicated to talking about cameras.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160410T140701Z" creationid="aceway" creationdate="20160410T140701Z">
        <seg>相机.**&amp;nbsp; 众多相机类型里3种常用的是, ArcRotateCamera(弧形旋转相机), FreeCamera(自由相机), 和 TouchCamera(触控相机).&amp;nbsp; 在Babylon.js里有许多种可用的相机, 但是这3种是最常见的.&amp;nbsp; 一个场景里可以编码任意多个相机, 但是只有其中一个能是'激活的相机'.&amp;nbsp; 在操练系列教程里我们有一个例子, 专门谈论各种相机.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Light.**&amp;nbsp; &amp;nbsp;There are 4 basic types of lights available in Babylon.js.&amp;nbsp; They are PointLight, SpotLight, DirectionalLight, and HemisphericLight.&amp;nbsp; ANY number of lights can be coded into a scene,&amp;nbsp; but only the first 4 lights in the scene's lights list... will be used by the scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T145157Z" creationid="aceway" creationdate="20160410T141237Z">
        <seg>光源.**&amp;nbsp; &amp;nbsp;在Babylon.js里有4种基础类型的光源.&amp;nbsp; 它们是 PointLight(点光光源), SpotLight(聚光光源), DirectionalLight(平行光光源), 和 HemisphericLight(半球光源).&amp;nbsp; 一个场景里编码任意数量的光源,&amp;nbsp; 但是在场景光源列表里只有前4个光源被场景使用.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Shape.**&amp;nbsp; A shape is also called a **mesh**.&amp;nbsp; Every scene needs something to be viewed, right?&amp;nbsp; Cameras are invisible, and so are lights.&amp;nbsp; Every scene needs a mesh, or many.&amp;nbsp; There is no limit to the number of mesh in your scene.&amp;nbsp; A mesh can be one of the many shapes that are built-in to Babylon.js, or it can be a shape that you plotted yourself using Babylon's VertexData system, or it can be a mesh that has been 'imported' into the scene... from a modeling package such as Blender or 3D Studio Max.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160410T143707Z" creationid="aceway" creationdate="20160410T143707Z">
        <seg>有型物.**&amp;nbsp; 有型物也叫做 **网格对象**.&amp;nbsp; 每个场景里都需要可视物,对吧?&amp;nbsp; 相机是不可见的, 光源也不可见.&amp;nbsp; 每个场景都需要个有型物, 或者许多个.&amp;nbsp; 没有限制在你的场景里可有的网格对象个数.&amp;nbsp; 一个网格对象可以是Babylon.js的许多内置有型物之一, 或者是你自己通过Babylon.js的顶点数据系统绘制的有型物, 或者是从外部建模软件,例如 Blender 或 3D Studio Maxl里'导入'到场景里的一个网格对象.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A bit below that, you will see:
```javascript
var effect = engine.createEffectForParticles("myParticle", ["time"]);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T094423Z" creationid="aceway" creationdate="20170131T094423Z">
        <seg>下面一点, 你会看到:
```javascript
var effect = engine.createEffectForParticles("myParticle", ["time"]);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A height map is simply a greyscale image like the one we are going to use:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T050546Z" creationid="aceway" creationdate="20170204T050546Z">
        <seg>一张高度图是个简化的绘图图像, 正如我们将使用的</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A picture of [the playground's ParticleSystem demo](http://babylonjs-playground.azurewebsites.net/?12)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T025021Z" creationid="aceway" creationdate="20170131T025021Z">
        <seg>一副[娱乐场的粒子系统演示](http://babylonjs-playground.azurewebsites.net/?12)的图景</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A property is defined by the following JSON.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T091156Z" creationid="aceway@qq.com" creationdate="20160427T091156Z">
        <seg>属性通过如下JSON格式定义.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A property value is always a string
```javascript
{
    "name": string, (name of the property)
    "value": string, (value of the property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T091227Z" creationid="aceway@qq.com" creationdate="20160427T091227Z">
        <seg>属性值总是字符串
```javascript
{
    "name": string, (属性名)
    "value": string, (属性值.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simpler version might look like this:
```javascript
myCamera.attachControl(canvas);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T142026Z" creationid="aceway" creationdate="20170207T142026Z">
        <seg>一个简化的版本看起来像这样的:
```javascript
myCamera.attachControl(canvas);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A specific article about that can be found [here](page.php?p=25100).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T124405Z" creationid="aceway" creationdate="20160508T124405Z">
        <seg>关于透明度 [这儿](page.php?p=25100)能找到篇专门的文章.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>AROUND each of these invisible rods.&amp;nbsp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T062512Z" creationid="aceway" creationdate="20160423T062512Z">
        <seg>围绕每个这些无形的棒.&amp;nbsp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T064925Z" creationid="aceway@qq.com" creationdate="20160429T064925Z">
        <seg>添加这个:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After that comes oimo.js - a different physics 'engine' that performs a similar function to cannon.js, but is generally faster although it lacks some of the more advanced features present in cannon.js.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T133432Z" creationid="aceway" creationdate="20160403T133432Z">
        <seg>之后的是 oimo.js - 一个不同的物理 '引擎',  其表现的功能有点像 cannon.js, 但是它更快速高效, 尽管它缺少 cannon.js中出现的许多高级特性.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After that, a comma, and then the next vector3 location... indicating where the line is drawing-to next.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T142113Z" creationid="aceway" creationdate="20160503T142113Z">
        <seg>那之后, 一个逗号, 然后下一个三元向量为画线的线一个定位点.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After the CSS, (but still inside the ```&lt;head&gt;``` part), please add:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T145822Z" creationid="aceway" creationdate="20160428T145822Z">
        <seg>在CSS后面, (同时也是在```&lt;head&gt;```内部), 请添加:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After this, you will add your scene creation code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T034606Z" creationid="aceway@qq.com" creationdate="20160429T034606Z">
        <seg>之后, 你将添加创建场景的代码.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After you have spent some time using the Babylon.js Playground, you will see how createScene() is portable, and can be easily copied and pasted TO and FROM the playground editor window.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160429T130450Z" creationid="aceway" creationdate="20160429T130450Z">
        <seg>当你使用Babylon.js娱乐场一段时间后, 你会明白createScene()是多么的方便, 能够简单的往/从编辑器窗口粘贴和复制进出内容.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After you paste-in code to the editor, or after you make changes to the code in the editor, you press **Run**.&amp;nbsp; This commands the playground to try to render your scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160425T142010Z" creationid="aceway" creationdate="20160425T142010Z">
        <seg>在你往编辑器里粘贴代码后, 或在你修改编辑器里的代码后, 按下**运行**.&amp;nbsp; 这个命令使娱乐场渲染你的场景.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, see the **More About Textures** section far above.  Change occurrences of 'diffuse' to 'specular', of course.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T133814Z" creationid="aceway" creationdate="20160522T133814Z">
        <seg>再次一的, 参见上面 **更多关于纹理** 一节.  当然, 修改出现的 'diffuse' 为 'specular'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, take some time to watch the scene.&amp;nbsp; And once more, the yellow text shows the one-line Vector3 way of setting a mesh's .scaling, or you can use one or more of the discrete ways of setting scaling... shown in the green text.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T075443Z" creationid="aceway" creationdate="20160423T075443Z">
        <seg>再次的,请花些时间观察下该场景.&amp;nbsp; 而且又一次的, 黄颜色的文本显示了通过一行代码里用Vector3量设置网格的缩放(.scaling)属性的方式, 或者你也可以使用一种或多种方式零散设置缩放... 绿色文本显示了那些方法.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, we we want it to be easy and enjoyable for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T134657Z" creationid="aceway" creationdate="20170206T134657Z">
        <seg>再次的, 我们希望它对你们来说简单而充满乐趣.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, you can see things from this tutorial... come to life... by browsing to [the Babylon.js Playground scene 4](http://www.babylonjs.com/playground/?4).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T135844Z" creationid="aceway" creationdate="20160522T135844Z">
        <seg>再次的, 在本教材里, 通过浏览[Babylon.js娱乐场场景 4](http://www.babylonjs.com/playground/?4), 你能越来越清晰生动地看事物了.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>AlexB's cool FollowCamera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T051742Z" creationid="aceway@qq.com" creationdate="20170207T051742Z">
        <seg>AlexB的酷酷的跟随相机.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of these texture settings apply to the other StandardMaterial properties as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T145229Z" creationid="aceway" creationdate="20160508T134028Z">
        <seg>所有这些纹理设定对其它的标准材质属性也可同样使用.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All the Javascript inserting is done.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T065545Z" creationid="aceway@qq.com" creationdate="20160429T065545Z">
        <seg>所有的Javascript代码已经写入完.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All those easing functions are implemented in BABYLON allowing you to apply custom mathematical formulas to your animations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T160125Z" creationid="aceway" creationdate="20160402T125926Z">
        <seg>所有这些BABYLON实现的简化函数,都允许使用自定义的数学公式应用在动画上.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alpha compositing and transparency in general can be a bit complex.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T124159Z" creationid="aceway" creationdate="20160508T124159Z">
        <seg>Alpha合成和透明度一般会有点复杂.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also keep in mind that multiple particle systems can use the same emitter object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T031129Z" creationid="aceway" creationdate="20170131T031129Z">
        <seg>也请记住，多个粒子系统能够共用同一个发射器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also notice that the ShadersStore is a namespace upon this special [Effect Object](http://doc.babylonjs.com/classes/Effect).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T095114Z" creationid="aceway" creationdate="20170131T095114Z">
        <seg>还要注意，ShadersStore是基于该特殊[效果对象](http://doc.babylonjs.com/classes/Effect)的命名空间.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although this playground is blending the same animation into itself, more often, a different animation will be blended-into the original, such as when a walking character changes to running.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T125321Z" creationid="aceway" creationdate="20160402T125321Z">
        <seg>尽管这个娱乐展示的是 渲染自身重复的动画, 但更常见的情况是, 渲染不同的动画 - 进入不同的状态,比如当一个走动中的角色切换到跑动.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although we have another tutorial that covers basic scenes, I would like you to now EXAMINE a basic Babylon.js scene file.&amp;nbsp; So here we go:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T131537Z" creationid="aceway" creationdate="20160403T131537Z">
        <seg>尽管我们有另一个教程盖含基础场景, 我仍然希望你现在检查下一个基本的 Babylon.js 场景文件的内容.&amp;nbsp; 所以我们现在就开始:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Animation is defined by various properties and a collection of keys.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T053953Z" creationid="aceway" creationdate="20160330T154019Z">
        <seg>一个动画是由许多属性和一系列的键值定义的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An action can contain children actions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T090548Z" creationid="aceway@qq.com" creationdate="20160427T090548Z">
        <seg>动作可以包含多个子的动作.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An easy way to get started using basic elements... is by visiting [**Playground Demo Scene 02**](http://babylonjs-playground.azurewebsites.net/?2).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T130001Z" creationid="aceway" creationdate="20160503T130001Z">
        <seg>一个简单的方法是通过访问[**娱乐场演示场景 02**](http://babylonjs-playground.azurewebsites.net/?2)来开始使用基础元素.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An event is a function that will be called at a given frame.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T152230Z" creationid="aceway" creationdate="20160402T152230Z">
        <seg>一个事件 是在某指定帧会被调用的函数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An important part is to define the texture of each particle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T030743Z" creationid="aceway" creationdate="20170131T030743Z">
        <seg>一个重要的部分是定义每个粒子的纹理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And apply this material to the object of your choice, e.g.:
```javascript
sphere1.material = materialSphere1;
```
Or, create and apply all in one step:
```javascript
sphere1.material = new BABYLON.StandardMaterial("texture1", scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T123407Z" creationid="aceway" creationdate="20160508T123236Z">
        <seg>然后把这个材质应用到一个你选折的对象上, 比如:
```javascript
sphere1.material = materialSphere1;
```
或者, 创建并应用材质一步搞定:
```javascript
sphere1.material = new BABYLON.StandardMaterial("texture1", scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And declare which meshes could be in collision with our camera:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T040154Z" creationid="aceway" creationdate="20170130T040154Z">
        <seg>然后声明哪些网格会和我们的相机发生碰撞:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And finally, you will have to define where the shadows will be displayed... by setting a mesh parameter to true:
```javascript
ground.receiveShadows = true;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T105053Z" creationid="aceway" creationdate="20170204T105053Z">
        <seg>最后,你需要定义下阴影在哪儿呈现... 通过将网格的一个参数设置成来完成:
```javascript
ground.receiveShadows = true;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And if you give it a material, the light then reflects from both sides, too.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T121011Z" creationid="aceway" creationdate="20160507T121011Z">
        <seg>而且如果你提供了材质, 光也会在两边都反射.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And if your texture has some alpha, you will need to specify it:
```javascript
materialSphere1.diffuseTexture.hasAlpha = true;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T132850Z" creationid="aceway" creationdate="20160508T132822Z">
        <seg>而且如果你的材质有alpha特性, 你需要指明它:
```javascript
materialSphere1.diffuseTexture.hasAlpha = true;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And last, an optional but handy canvas/window resize event handler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T065357Z" creationid="aceway@qq.com" creationdate="20160429T065357Z">
        <seg>最后, 可选但是便捷的，对画布/窗口大小改变事件的处理程序.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And lastly, if you want to load a specific pre-installed demo scene, such as the #12 Particles demo, you can use a URL that looks like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T031603Z" creationid="aceway@qq.com" creationdate="20160427T031603Z">
        <seg>而且最后, 如果你想加载一个特殊的预装的演示场景, 比如第12个演示的, 你可以像这样的访问网址:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And naturally stop it:
```javascript
particleSystem.stop();
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T080648Z" creationid="aceway" creationdate="20170131T080648Z">
        <seg>而且自然的停止它:
```javascript
particleSystem.stop();
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And now we have a beautiful 3D view of the earth!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T101557Z" creationid="aceway" creationdate="20170204T101557Z">
        <seg>现在我们有个漂亮的三维的地球视图了!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And once again, our friend and technology guru David Catuhe has created [**a wonderfully-detailed blog entry**](http://blogs.msdn.com/b/eternalcoding/archive/2013/10/07/understanding-deviceorientation-events-by-creating-a-small-3d-game-with-babylon-js.aspx) to tell us all about it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T134511Z" creationid="aceway" creationdate="20170206T134511Z">
        <seg>再一次的， 我们的朋友和技术大拿David Catuhe已经创建了[**精彩详细的博客条目**](http://blogs.msdn.com/b/eternalcoding/archive/2013/10/07/understanding-deviceorientation-events-by-creating-a-small-3d-game-with-babylon-js.aspx)来教我们关于它的所以知识.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And that's it!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T152558Z" creationid="aceway" creationdate="20160402T152558Z">
        <seg>就这些!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And the last parameter is the delay between the frames (the smaller it is, the faster the animation).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T123205Z" creationid="aceway" creationdate="20170129T123147Z">
        <seg>还有第三个参数是帧间的延迟 (延迟越小，动画会播放得更快).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And you are done!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T105307Z" creationid="aceway" creationdate="20160402T105307Z">
        <seg>你做到了!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And you can revoke the control by using the _detachControl_ function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T141625Z" creationid="aceway" creationdate="20170207T141625Z">
        <seg>而且你可以使用_detachControl_函数来卸载该自动处理.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And, your camera will collide with the box when you move it too near to it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T040611Z" creationid="aceway" creationdate="20170130T040611Z">
        <seg>而且，你的相机会和盒子发生碰撞当你将相机移近它时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Animations
---
# Animation
Your scene is beginning to look great, but it is very static.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T053918Z" creationid="aceway" creationdate="20160330T031952Z">
        <seg>动画
---
# 动画
你的场景开始看起来很棒了，但它仍然是呆板且静态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another use for a Vector3 value... is setting the .direction for certain types of lights:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T143340Z" creationid="aceway" creationdate="20160421T143340Z">
        <seg>那外种使用 Vector3 值是用来设置灯光的方向:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another use of the Color3 value is to set the .diffuse property of lights.&amp;nbsp; Take careful note that the name of this property is .diffuse, and not .diffuseColor.&amp;nbsp; Lights use a property named .diffuse to set their primary color.&amp;nbsp; Let's take a look at how to set the primary color of a light that you have already created:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T024634Z" creationid="aceway" creationdate="20160422T150329Z">
        <seg>另一个Color3值的用途是设置光的散射(.diffuse)属性.&amp;nbsp; 注意该属性的名字是.diffuse, 而不是.diffuseColor.&amp;nbsp; 光源使用一个名为.diffuse的属性设置其主色.&amp;nbsp; 让们看看如何给那个你创建的光源设置主色:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any movement that can be sensed... can be considered a gesture.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T125920Z" creationid="aceway" creationdate="20170206T125642Z">
        <seg>任何能被感知的运动... 都可以说是一种姿态.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Anything else could have been chosen for this example, but I love this strange shape.  
Before dealing with the ribbon, we just display each path with the _CreateLines()_ method so we can figure out what these paths look like.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T065116Z" creationid="aceway" creationdate="20170205T061942Z">
        <seg>这个示例可以有任何其它的选择结果,但是我就是喜欢这个奇怪的形状.  
在处理色带之前, 我们使用_CreateLines()_方法呈现每条路径,以便弄清除这些路径的样子.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Are you running in free-flying mode and not wrapping your code in a createScene() function?&amp;nbsp; That is certainly allowed, but you still need a camera, a light, and a mesh shape.&amp;nbsp; These are a few things that can prevent your scene from rendering.&amp;nbsp; Study the playground demo scenes listed under the drop-down Scene Selector button, and soon you will be a BabylonJS playground expert.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T024657Z" creationid="aceway@qq.com" creationdate="20160427T024657Z">
        <seg>你是在自由模式下运行而且没把你的代码放到createScene() 函数中么?&amp;nbsp; 那样当然也是允许的，只是你仍然需要一个相机，一个光源和一个网格造型。.&amp;nbsp; 缺乏这些会导致你的场景渲染失败.&amp;nbsp; 好好研究下娱乐场的场景选择器里下拉演示场景，你很快会成为一名BabylonJS娱乐场专家的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As for Lines, a line along the vectors3 will be displayed in space.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T100500Z" creationid="aceway" creationdate="20160507T100500Z">
        <seg>作为许多线段, 每条段先都是以三元向量组的方式呈现在空间里.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As it is very elementary, you can model almost any shape using a ribbon or many merged ribbons.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T132535Z" creationid="aceway" creationdate="20170204T132535Z">
        <seg>由于它是非常基础的, 所以你可以使用一个色带或多个色带合并来为任意形状建模.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As of Babylon.js 2.3+, you can  start an animation with *enableBlending* = true.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T155805Z" creationid="aceway" creationdate="20160402T111552Z">
        <seg>作为2.3+版本的 Babylon.js, 你能通过设置 *enableBlending* 为 true来启动一个动画.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we can see, the curves are side by side around an incomplete circle.  
If we apply this _paths_ array to a ribbon mesh, we get this : http://www.babylonjs-playground.com/#295H7U#1  
You can see that a surface is constructed between each _path_ as expected.  
Here is the same with a plain material ans still the _paths_ displayed : http://www.babylonjs-playground.com/#295H7U#2  
If we set _closeArray_ to _true_, the missing surface between the first and the last _paths_ is then constructed : http://www.babylonjs-playground.com/#295H7U#3  
The mesh becomes then a real closed volume and the light reflects in a continuous way along its surface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T100041Z" creationid="aceway" creationdate="20170205T100041Z">
        <seg>正如我们所见,这些曲线边挨着边围绕着一个不完整的圆.  
如果我们将这些个_路径_ 数组应用到色带网格上, 我们获得这个 : http://www.babylonjs-playground.com/#295H7U#1  
你可以看到正如预期的:一个面是在各_路径_间构建的.  
Here is the same with a plain material ans still the _paths_ displayed : http://www.babylonjs-playground.com/#295H7U#2  
如果我们将_closeArray_设置为_true_, 则在第一个和最后一个路径间缺失的面将被构建出来: http://www.babylonjs-playground.com/#295H7U#3  
该网格将成为一个正真的封闭体,而且光线将沿着它的连续面反射.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you can see, particles are emitted from different positions along the X-axis:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T073046Z" creationid="aceway" creationdate="20170131T073046Z">
        <seg>正如你所见，粒子沿着X轴从不同的位置发射出来:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you guessed, the mesh faces are now visible on both sides.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T120926Z" creationid="aceway" creationdate="20160507T120926Z">
        <seg>正如你猜测的, 网格面现在两边可见了.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you toured the Babylon.js Playground demo scenes, you surely saw some .position, .rotation, and maybe some .scaling properties being 'set' with values.&amp;nbsp; Let's take a look at each one:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160423T030815Z">
        <seg>如果你浏览了Babylon.js娱乐场的演示场景, 你必定看到了一些位置属性(.position), 旋转属性(.rotation), 可能还有些缩放属性(.scaling)设置了值.&amp;nbsp; 让我们一个个的看看:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At last, change the _sideOrientation_ parameter to _BABYLON.Mesh.DOUBLESIDE_.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T120831Z" creationid="aceway" creationdate="20160507T120831Z">
        <seg>最后, 改变 _朝向_ 参数值为 _BABYLON.Mesh.DOUBLESIDE_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At that link, Kostar111 thoroughly explains how the tiled ground works, and also provides some Babylon.js Playground scenes that nicely demonstrate some of its many uses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T124109Z" creationid="aceway" creationdate="20160507T123812Z">
        <seg>在那个链接, Kostar111全面地说明了瓷砖地面的工作方式，还提供了一些Babylon.js游乐场景, 很好地演示了一些它的许多用途.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Babylon engine lets you do this very easily by giving you useful functions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T093105Z" creationid="aceway" creationdate="20170130T093105Z">
        <seg>Babylon引擎提供了有用的函数让你非常轻松的实现这个.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Babylon's engine is automatically reading sprites on more than one line, so the engine does the work for you :)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T122713Z" creationid="aceway" creationdate="20170129T122713Z">
        <seg>Babylon的引擎会自动读取精灵数据，这些都是引擎帮你做的 :)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Babylon.js allows you to create and register as many lights as you choose, but know that a single StandardMaterial can only handle 4 simultaneous lights (the first four enabled lights of the scene's lights list).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170208T133319Z" creationid="aceway" creationdate="20170208T133319Z">
        <seg>Babylon.js允许你想要多少就创建并注册多少光源, 但是要知道一种标准材质只能同事处理4个光源(场景光源列表中先启用的四个光源).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Babylon.js files can be found on our CDN:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T070518Z" creationid="aceway@qq.com" creationdate="20160427T070518Z">
        <seg>Babylon.js文件能够在CDN上找到:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Babylon.js supports many types of cameras.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T120447Z" creationid="aceway" creationdate="20170205T120447Z">
        <seg>Babylon.js支持许多类型相机.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BabylonJS 2.1 allows the user to move the collision calculations to an external web worker thus achieving better rendering time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T050120Z" creationid="aceway" creationdate="20170130T050120Z">
        <seg>BabylonJS 2.1 允许用户将碰撞检测的计算移到外部的Web工作线程以实现更好的实时渲染.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be aware that the stream is no longer continuous.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T074417Z" creationid="aceway" creationdate="20170131T074417Z">
        <seg>要注意粒子流不在是持续的了.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be aware that this type of bounding box is especially useful when your mesh is rotated to an angle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T090120Z" creationid="aceway" creationdate="20170130T090120Z">
        <seg>请注意这种类型的边界盒对于旋转了一定角度的网格特别有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the orientation of an ArcRotateCamera is relative to its _target_ setting, it is wise to use a handy method called _setPosition()_ to set the camera position.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T043431Z" creationid="aceway@qq.com" creationdate="20170206T043431Z">
        <seg>因为弧形旋转相机的朝向是相对其_旋转目标(target)_的, 所以使用方便的_setPosition()_方法设置相机位置是个好注意.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because this value creates twice the vertices of a frontside mesh.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T121219Z" creationid="aceway" creationdate="20160507T121219Z">
        <seg>因为此值创建一个前向面的网格两倍的顶点.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before you start, be sure you have a WebGL compatible browser (e.g.  Internet Explorer 11+, Firefox 4+, Google Chrome 9+, Opera 15+, etc.).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T145324Z" creationid="aceway" creationdate="20160428T145324Z">
        <seg>在你开始之前,请确定你有个支持WebGL的浏览器 (比如:IE11+, 火狐4+, 谷歌浏览器9+, Opera15+, 等.).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below that, in green text, you will see 3 more lines of Babylon.js code.&amp;nbsp; You see, you are NOT required to use a Vector3 to set a .position on a mesh.&amp;nbsp; You can use the '**discrete**' way, instead.&amp;nbsp; Loosely defined, 'discrete' means... piece by piece... one step at a time.&amp;nbsp; If you would like to set a mesh's .position values axis by axis, feel free to use the handy green 'discrete' ways of doing it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T032815Z" creationid="aceway" creationdate="20160423T032815Z">
        <seg>在那下面, 在绿色文本里, 你将看到另3行Babylon.js代码.&amp;nbsp; 你该清楚了, 你不需被迫使用Vector3值来设置网格的位置属性(.position).&amp;nbsp; 相反,你可以用'**零散(discrete)**'的方式.&amp;nbsp; 没有严格的定义, '林散' 意味着... 一块一块的... 一次一小步.&amp;nbsp; 如果你想一个轴一个轴的设置网格的位置属性, 可以自便的按照那个些绿色'零散'的方式去做.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Besides generating a Babylon Scene object, createScene() is where you will add your basic scene requirements:  One camera, one light, and one or more shapes/meshes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T034910Z" creationid="aceway@qq.com" creationdate="20160429T034910Z">
        <seg>除了生成一个Babylon场景对象外，这个createScene() 函数里也是你添加场景所需的地方:  一个相机，一个光源，一个或多个造型/网格.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both of them are very useful, and powerful in their own right.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T104950Z" creationid="aceway" creationdate="20170131T104950Z">
        <seg>两者都非常有用，且在各自范围内效果强劲.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both projections are evaluated automatically for you to get the best shadow map possible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T130141Z" creationid="aceway" creationdate="20170204T130141Z">
        <seg>两种投影都是自动计算以为你提供尽可能最好的阴影映射.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Briefly said, you can enter or modify Javascript-based BabylonJS scene code on the left-side 'editor' portion of the playground, press the Run button, and the playground will attempt to render the webGL scene on the right side, using the latest version of the BabylonJS framework.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160425T141641Z" creationid="aceway" creationdate="20160425T141641Z">
        <seg>简单的说, 你可以在BabylonJS游乐场的左边编辑器输入或修改基于Javascript的场景代码, 按下运行按钮, 然后娱乐场将尝试在页面的右边区域里使用最近的BabylonJS框架版本渲染WebGL场景.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Build the solution, all the .ts fils will be compiled to .js file along with .js.map file (needed for debugging).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T101827Z" creationid="aceway@qq.com" creationdate="20160427T101827Z">
        <seg>构建解决方案, 所有的 .ts 文件将被编译成 .js 文件，伴随生成 .js.map 文件 (调试需要).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Buildings, hills, mountains, trees, lakes, planets, stars, you name it (all can be used nicely) as part of skybox textures.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T100210Z" creationid="aceway" creationdate="20170204T042938Z">
        <seg>建筑,丘陵,山峰,树木,胡泊,行星,恒星(都可以被很好的利用)你均可以指定它为天空纹理的一部分.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But because it’s a sprite, you may use specific parameters: you can change their size, or their orientation:
```javascript
player.size = 0.3;
player.angle = Math.PI/4;
player.invertU = -1;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T121330Z" creationid="aceway" creationdate="20170129T121330Z">
        <seg>但是因为它是个精灵，你可以使用特殊的参数: 你可以改变它们的大小，或者它们的朝向:
```javascript
player.size = 0.3;
player.angle = Math.PI/4;
player.invertU = -1;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But before we do that, we have to create a new material, like we have done many times before:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T050011Z" creationid="aceway" creationdate="20170204T050011Z">
        <seg>但是开始做之前,我们必须定义一个新的材质,就像我们之前做过的很多次那样:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But for now, we have to learn [**how to use cameras**](http://doc.babylonjs.com/tutorials/Cameras).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T140430Z" creationid="aceway" creationdate="20160522T140430Z">
        <seg>但是现在, 我们必须学习 [**怎么使用相机**](http://doc.babylonjs.com/tutorials/Cameras).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But it might not be our final result.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T072617Z" creationid="aceway" creationdate="20170131T072617Z">
        <seg>但它可能不是我们的最终结果.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But keep in mind that a single scene can contain multiple particleSystems, and each one can emit particles with unique texture patterns.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T031051Z" creationid="aceway" creationdate="20170131T031051Z">
        <seg>但请记住，一个场景里可以有多个粒子系统，而且每个粒子系统只能发射出一种纹理模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But maybe you would like to know when a mesh is in collision with another mesh?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T080822Z" creationid="aceway" creationdate="20170130T080822Z">
        <seg>但是你也许想知道一个网格时什么时候与另外的网格发生碰撞的?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But the FollowCamera has some more useful properties that you can set if you choose to do so.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T051336Z" creationid="aceway@qq.com" creationdate="20170207T051336Z">
        <seg>如果你乐意，跟随相机还有许多有用的属性可以设置.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But there is something missing in your scenes: a proper environment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T103506Z" creationid="aceway" creationdate="20170131T103454Z">
        <seg>但是你的场景里还缺某种东西: 像样环境.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But this bounding box can be more or less precise, and that’s why we have our second parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T085732Z" creationid="aceway" creationdate="20170130T085421Z">
        <seg>而且这个边界盒的精度可大可小, 这就是为什么我们有第二个参数的原因.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But you can feel free to add any new parameter, like I did, with 'time'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T101032Z" creationid="aceway" creationdate="20170131T101032Z">
        <seg>但是你可以随意的添加新参数，就像我添加参数'time'那样做.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But you may want to use it for alpha blending.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T133941Z" creationid="aceway" creationdate="20160508T133941Z">
        <seg>但是你也许想把它用在alpha混合上.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But you may want to work with all basic files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T065552Z" creationid="aceway@qq.com" creationdate="20160427T065505Z">
        <seg>但是你也许希望使用所有的基本(一个个独立的)文件来工作.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By calling « playAnimation » with those parameters, our player will be animated from frame 0 to frame 43.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T122938Z" creationid="aceway" creationdate="20170129T122938Z">
        <seg>通过使用这些参数来调用 « playAnimation » , 我们的角色会播放从0帧到43帧的动画.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default _noPreventDefault_ is set to false, meaning that _preventDefault()_ is automatically called on all canvas mouse clicks and touch events.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T142254Z" creationid="aceway" creationdate="20170207T142254Z">
        <seg>默认情况下 _noPreventDefault_ 被设置成 false, 意味着所有画布上的鼠标点击和触碰事件都会自动触发调用_preventDefault()_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default the following code is used:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T102640Z" creationid="aceway" creationdate="20170131T102640Z">
        <seg>默认情况下，以下代码被使用:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default these functions are the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T110523Z" creationid="aceway" creationdate="20160402T110523Z">
        <seg>默认情况下,这个函数如下:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default you can do that with CTRL+MouseLeftClick, but you can specify to use MouseRightClick instead, by setting _useCtrlForPanning_ to false in the _attachControl_ call :</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T050213Z" creationid="aceway@qq.com" creationdate="20170206T050213Z">
        <seg>默认情况可以通过CTRL+ 鼠标左键 做到， 但是你也可以指定使用鼠标右键来代替, 通过在 _attachControl_ 调用中将l设置 _useCtrlForPanning_ 设置为 false来实现 :</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, (with no .alpha and .beta values set), ArcRotateCameras aim in a +x direction.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T140137Z" creationid="aceway" creationdate="20170205T140137Z">
        <seg>默认情况, (没有设置.alpha 和 .beta 的值), 弧形旋转相机朝着某一正X轴方向.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, `scene.ambientColor` is set to `Color3(0, 0, 0)`, which means there is no `scene.ambientColor`.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170203T041100Z" creationid="aceway" creationdate="20170203T041100Z">
        <seg>默认情况下, `场景的环境色(scene.ambientColor)`被设置成`纯黑色(Color3(0, 0, 0))`, 它意味着没有场景环境色.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, specular does not interact with alpha, but you can set ```materialSphere1.useSpecularOverAlpha``` to true to have alpha inversely proportional to specular value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T133721Z" creationid="aceway" creationdate="20160522T133721Z">
        <seg>默认情况下, 镜面光和alpha不相干, 但是你可以设置```materialSphere1.useSpecularOverAlpha``` 为真, 从而使alpha和镜面光成反比.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, the ArcRotateCamera has no _upperAlphaLimit_ or _lowerAlphaLimit_.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T045338Z" creationid="aceway@qq.com" creationdate="20170206T045253Z">
        <seg>默认情况下, 弧形旋转相机的经度在竖直方向不存 _上限(upperAlphaLimit)_ 和 _下限(lowerAlphaLimit)_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, the value is 1 (Meaning the box will go from -1 to 1 in bot direction resulting in 9 values read by the blur postprocess).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T122539Z" creationid="aceway" creationdate="20170204T122539Z">
        <seg>默认情况下,该值是1 (Meaning the box will go from -1 to 1 in bot direction resulting in 9 values read by the blur postprocess).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, the value is 2
* shadowGenerator.blurBoxOffset: Define the offset of the box's edge used to apply the blur.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T122030Z" creationid="aceway" creationdate="20170204T122030Z">
        <seg>默认情况,该值是2
* shadowGenerator.blurBoxOffset: 为应用在模糊化的盒子定义边缘偏移值.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, this function is defined with the following code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T101714Z" creationid="aceway" creationdate="20170131T101714Z">
        <seg>默认情况下, 这个函数时用以下代码定义的:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By the way, you can find more info about contributing to Babylon.js [here](http://pixelcodr.com/tutos/contribute/contribute.html)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T094924Z" creationid="aceway@qq.com" creationdate="20160427T094924Z">
        <seg>顺便说下, 关于为Babylon.js做贡献你可以在 [这儿](http://pixelcodr.com/tutos/contribute/contribute.html)找到更多信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Camera management in Babylon.js is pretty simple : first you create one of the camera listed below, then you attach it to canvas mouse and touch inputs (see **Wrapping Up** section).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T120422Z" creationid="aceway" creationdate="20170205T120422Z">
        <seg>在Babylon.js里相机管理非常简单: 首先你创建下面相机清单中的一个相机, 让后将它和画布上的鼠标和触摸输入设备相关联(参见 **结束语** 部分).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Cameras
---
# Babylon.js Cameras #</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T115902Z" creationid="aceway" creationdate="20170205T115902Z">
        <seg>相机
---
# Babylon.js的相机#</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Cameras, Mesh Collisions and Gravity
---
Did you ever play a FPS (First Person Shooter) game?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T125532Z" creationid="aceway" creationdate="20170129T125532Z">
        <seg>相机，网格碰撞和重力
---
你玩过一款FPS (第一人称视角射击)游戏么?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Can be null)
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T091014Z" creationid="aceway@qq.com" creationdate="20160427T091014Z">
        <seg>可以为null)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Click on it, please.&amp;nbsp; Notice that there is a wide variety of pre-installed scenes (createScene functions).&amp;nbsp; Feel free to select any of them.&amp;nbsp; Tour them, drag your pointer around on them, and even change the code in the editor and hit **RUN** again.&amp;nbsp; You cannot damage the pre-installed scenes, even if you hit **SAVE**.&amp;nbsp; You are safe in a playground of Babylon.js scenes, and you can see MANY createScene functions in action.&amp;nbsp; You can play with their settings and hit Run again - fun.&amp;nbsp; And again, you can use the **Get .zip** button on any of these playground demos, and take copies of them for your home collection.&amp;nbsp; Handy, yes?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160404T150650Z">
        <seg>请点击它.&amp;nbsp; 注意那有许多不同当预装场景 (创建场景的功能).&amp;nbsp; 可以在它们中自便的选择.&amp;nbsp; 浏览一下, 在之中拖动鼠标, 甚或在编辑区域修改下代码然后点击 **运行** .&amp;nbsp; 你不可能毁坏预装的场景, 甚至你点击了 **保存**也不会.&amp;nbsp; 你在 Babylon.js 的娱乐场的场景里很安全, 而且你可以看到许多的创建场景的函数.&amp;nbsp; 你可以使用它们的设定玩一下, 再次点击 运行.&amp;nbsp; 再次的, 你可以使用娱乐演示图任何一个演示上方的 *获取 .zip压缩包**, 从而实现你的收集梦想.&amp;nbsp; 方便, 是吧?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Color one and two are combined, and “colorDead” is the color that the particle takes-on just before it disappears.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T073316Z" creationid="aceway" creationdate="20170131T073316Z">
        <seg>颜色一和二被混合，而且 “colorDead”(死亡色)是粒子消失去前展现出来的颜色.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conversely, the `ambientColor` property on the scene object is a very powerful and influential environment property/adjustment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170203T035034Z" creationid="aceway" creationdate="20170203T035034Z">
        <seg>相反，场景对象的`环境色(ambientColor)`属性是个非常强大、有影响力的环境属性和调节器.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a HTML file that will reference all the .js file of Babylon.js (the list can be found [here](http://doc.babylonjs.com/generals/Creating_the_Mini-fied_Version))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T102738Z" creationid="aceway@qq.com" creationdate="20160427T102738Z">
        <seg>创建一个HTML文件用于引用Babylon.js的所有js文件 (列表可以在[这儿](http://doc.babylonjs.com/generals/Creating_the_Mini-fied_Version)找到)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a new TypeScript file in your project, don't forget to set the following lines:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T102021Z" creationid="aceway@qq.com" creationdate="20160427T102021Z">
        <seg>在你的工程你创建一个新的TypeScript文件，必要忘记添加下面这些行:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating Basic Scene
---
### In this tutorial, we are going to create a basic 3D scene with Babylon.js.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T145125Z" creationid="aceway" creationdate="20160428T145125Z">
        <seg>创建基础场景
---
### 在本教程里, 我们将用Babylon.js创建一个基础的3D场景.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating an instance is as simple as:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170123T011824Z" creationid="aceway@qq.com" creationdate="20170123T011824Z">
        <seg>创建实例就是如此简单:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>David Rousset... takes us on [**a video tour with Virtual Joysticks**](https://www.youtube.com/watch?v=53Piiy71lB0), and makes it look easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T052535Z" creationid="aceway@qq.com" creationdate="20170207T052535Z">
        <seg>David Rousset... 为我们带来了[**一段虚拟操纵杆视频**](https://www.youtube.com/watch?v=53Piiy71lB0), 而且使它看起来很简单.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Demo by Dad72: [**Move character with gravity and collision**](http://www.babylon.actifgames.com/moveCharacter/)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T042152Z" creationid="aceway" creationdate="20170130T042152Z">
        <seg>Dad72提供了演示: [**支持重力和碰撞检测的角色移动**](http://www.babylon.actifgames.com/moveCharacter/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Device orientation is when you tilt your modern mobile device forward or back, left or right, to control cameras or other scene items.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T134250Z" creationid="aceway" creationdate="20170206T134250Z">
        <seg>当你前后倾斜或左右倾斜现代移动设备时，定向设备将控制相机或场景中的其它物品.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Discover Basic Elements
---
## Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T125609Z" creationid="aceway" creationdate="20160503T125609Z">
        <seg>发现基础元素
---
## 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Discover Basic Elements) section, the ribbon is the surface between two, or more, paths.  
A path is a series of successive points in space (Vector3).  
So a path can be designed by many ways : you can set points manually, import them from some set of data (json, etc), compute them with some maths function ... or even a bit of all of this.  
The javascript representation of a path is simply an array of Vector3.  
A path must have at least two points (four points if you provide a single path).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T060736Z" creationid="aceway" creationdate="20170205T060736Z">
        <seg>发现基础元素)一节, 色带是两个或多个路径间的面.  
路径时空间中一系列连续的点(三维向量).  
所以路径可以通过很多种方式设计: 你可以手动设定点, 从数据集(json等)中引入它们, 使用些数据函数计算它们... 甚或包括所有的数据点.  
Javascript表示的一条路径是一个简单的三维向量的数组。  
一条路径至少包含两个点(如果你提供一个单一的路径则至少四个点).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Discover all of the other properties and methods... at [**our API documentation site**](http://doc.babylonjs.com/classes/FollowCamera).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T051821Z" creationid="aceway@qq.com" creationdate="20170207T051821Z">
        <seg>在 [**我们的API文档站点**](http://doc.babylonjs.com/classes/FollowCamera)探索其它所有的属性和方法吧.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Disposes (or not) the particle system on stop (very useful if you want to create a one shot particle system with a specific targetStopDuration):
```javascript
particleSystem.disposeOnStop = true;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T080520Z" creationid="aceway" creationdate="20170131T080520Z">
        <seg>粒子系统停止时的处理或不处理 (对于射击类粒子系统非常有用):
```javascript
particleSystem.disposeOnStop = true;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not forget that this function will be called on every frame so try to keep it simple and fast :).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T102605Z" creationid="aceway" creationdate="20170131T102605Z">
        <seg>不要忘记该函数会在每帧被调用，因此要尽力保证它简单而快速 :).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not hesitate to update this file by editing it [directly on Github](https://github.com/BabylonJS/Documentation/tree/master/content/generals/General).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T040801Z" creationid="aceway@qq.com" creationdate="20160427T040801Z">
        <seg>不要犹豫了，赶紧通过编辑此连接[直接访问Github](https://github.com/BabylonJS/Documentation/tree/master/content/generals/General)来更新此文件.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't forget to [visit our API documentation](http://doc.babylonjs.com/classes/) in order to learn more about the [**Babylon.js Animation**](http://doc.babylonjs.com/classes/Animation) and [**Babylon.js Animatable**](http://doc.babylonjs.com/classes/Animatable) classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T160757Z" creationid="aceway" creationdate="20160402T151914Z">
        <seg>不要忘记 [访问我们的API文档](http://doc.babylonjs.com/classes/) 以学习更多关于 [**Babylon.js 动画**](http://doc.babylonjs.com/classes/Animation) 和 [**Babylon.js 支持动画的**](http://doc.babylonjs.com/classes/Animatable) 类.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't hesitate to combine many animations for one mesh object... by creating more Animations and pushing them into the mesh's _animation_ property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T110115Z" creationid="aceway" creationdate="20160402T110115Z">
        <seg>不要犹豫在一个网格对象上合并多个动画, 通过创建多个动画片段并把它们追加到 _animation_ 属性上.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don’t hesitate to combine all those types of animations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T151523Z" creationid="aceway" creationdate="20160402T151523Z">
        <seg>不用犹豫, 可以混合使用所有这些动画类型.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don’t hesitate to use them as they are not resource-intensive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T103041Z" creationid="aceway" creationdate="20170131T103041Z">
        <seg>不要犹豫使用它们吧，因为它们不是资源敏感的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>During this tutorial, I will show you how to use every kind of light that is supported by Babylon.js.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170208T133418Z" creationid="aceway" creationdate="20170208T133418Z">
        <seg>在这教程里，我将教你如何创建Babylon.js支持的每种类型的光源.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each Animation has a property called ```currentFrame``` that indicates the current animation key.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T110235Z" creationid="aceway" creationdate="20160402T110235Z">
        <seg>每个动画片段都有一个属性: ```currentFrame``` , 其指明当前动画的键.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each image must be named per the corresponding face: “skybox_nx.png”, “skybox_ny.png”, “skybox_nz.png”, “skybox_px.png”, “skybox_py.png”, “skybox_pz.png”.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T035354Z" creationid="aceway" creationdate="20170204T035354Z">
        <seg>每个图片名字必须根据盒子面来命名成: “skybox_nx.png”, “skybox_ny.png”, “skybox_nz.png”, “skybox_px.png”, “skybox_py.png”, “skybox_pz.png”.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each image of a sprite must be contained in a 64 pixel square, no more no less.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170123T011654Z" creationid="aceway@qq.com" creationdate="20170123T011654Z">
        <seg>没给精灵的图片必须存储在64像素的方块中，不多也不少.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each input type has its own properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T074426Z" creationid="aceway@qq.com" creationdate="20160427T074426Z">
        <seg>每个输入类型都有其属性.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each of these Javascript objects have named 'pockets' to store things-within.&amp;nbsp; Often, values, data, and objects... get stored in those pockets.&amp;nbsp; These value-storing pockets are called object 'properties'.&amp;nbsp; Properties are commonly 'set' (putting a value INTO the pocket), and often 'get' (looking into the pocket to see what's there).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T145901Z" creationid="aceway" creationdate="20160418T145901Z">
        <seg>这些每个 Javascript 对象都有命名的 '存储空间' 来保存内容到里面.&amp;nbsp; 通常是, 值, 数据, 和对象... 被存在这些内存空间里.&amp;nbsp; 这些存储着值的空间被叫做对象的'属性'.&amp;nbsp; 属性通常被 '设置(set)' (将一个值放入存储空间), 和 '获取(get)' (到存储空间查看里面是什么内容).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each of these includes are JavaSCRIPT files, and so they are included-in by using HTML `&lt;SCRIPT&gt;` elements/tags.&amp;nbsp; The shown 'src' (source location) of these files is at the Babylon.js web site folders, but later I will tell you how to put these files on your home hard drive if you wish, and include them from there.&amp;nbsp; They load-in faster when they are 'local', but you will need to change the 'src' URL once you have saved them locally.&amp;nbsp; I will show you how to do that soon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T002328Z" creationid="aceway" creationdate="20160403T135120Z">
        <seg>每个包含都是 JavaSCRIPT 文件, 所以它们被放在使用 HTML的 `&lt;SCRIPT&gt;` 元素/标签中.&amp;nbsp; 这些文件里显示的 'src' (源码位置) 在 the Babylon.js 网站的文件夹里, 但是稍后我将告诉你如何把这些文件放到你的硬盘驱动器里 - 如果你希望那样做, 然后从那儿包含它们.&amp;nbsp; 当是"本地" 时她们加载会更快, 但是当你将它们保存到本地后你需要修改 'src' 的网址; 我很快会告诉你如何做的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each one will have the same pattern, so choose carefully which one you want.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T030906Z" creationid="aceway" creationdate="20170131T030906Z">
        <seg>每个粒子都会拥有相同的纹理模式，因此请仔细选择你想要的纹理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each pixel’s color is interpreted as a distance of displacement or “height” from the “floor” of your mesh.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T095619Z" creationid="aceway" creationdate="20170204T095619Z">
        <seg>每个像素的颜色被解析成到网格"地面"的位移或"高度".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Easy!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T040241Z" creationid="aceway" creationdate="20170130T040241Z">
        <seg>简单!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T045041Z" creationid="aceway" creationdate="20170131T105835Z">
        <seg>简单吧.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Environment
---
## Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T103212Z" creationid="aceway" creationdate="20170131T103212Z">
        <seg>环境
---
## 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even though Vector3 values can contain very large negative or positive numbers, it is rarely necessary for any xValue, yValue, or zValue... to be outside the range of -6.28 to +6.28 **for setting rotations**.&amp;nbsp; Any numbers outside that range would be unnecessary, because -6.28 (radians) rotates 360 degrees in one direction, and +6.28 (radians) rotates 360 degrees in the opposite direction.&amp;nbsp; That's a full range of rotation, isn't it?&amp;nbsp; We'll talk a bit more about rotation, further below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T142350Z" creationid="aceway" creationdate="20160421T141755Z">
        <seg>尽管Vector3的值可以是非常的大正数或负数, 但通常没必要为旋转属性将xValue, yValue, 或 zValue的值设置超出 -6.28 和 +6.28之外的值.&amp;nbsp; 任何这个范围之外的值都没必要, 因为 -6.28 (弧度) 是在一个方向旋转 360 度, 而 +6.28 (弧度) 是在另一个方向旋转 360.&amp;nbsp; 那是可旋转的所有范围, 不是么?&amp;nbsp; 后面我们将在多些讨论旋转.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every Babylon.js camera will automatically handle inputs for you... once you call the camera's _attachControl_ function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T141458Z" creationid="aceway" creationdate="20170207T141458Z">
        <seg>Babylon.js的每种相机都会为你自动地处理输入... 只要你调用了相机的 _attachControl_函数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every key represents the value of the Animation at that key's given time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T013853Z" creationid="aceway@qq.com" creationdate="20160331T013853Z">
        <seg>每个键值代表了动画片段在那个时刻的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every light can be activated or deactivated by calling its *setEnabled(true/false)* method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170208T133515Z" creationid="aceway" creationdate="20170208T133515Z">
        <seg>每个光源可以通过调用器 *setEnabled(true/false)* 方法来激活或停用.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exact values are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T054113Z" creationid="aceway@qq.com" creationdate="20160331T014821Z">
        <seg>具体的值会是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exactly, because this material is the default one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T123526Z" creationid="aceway" creationdate="20160508T123526Z">
        <seg>确切的说, 这个材质是默认的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example: [0.2, 0.3, 0.5]
* **Matrix**: An array of 16 floats exposed with row first convention
* **Boolean**: true or false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T072744Z" creationid="aceway@qq.com" creationdate="20160427T072744Z">
        <seg>例子: [0.2, 0.3, 0.5]
* **Matrix**: 行优先(先按行存储)的含有16个浮点数的数组
* **Boolean**: 真或假</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example: [1.1, 2.2, 3.3, 4.4]
* **Color3**: An array of 3 floats between 0 and 1 ([r, g, b]).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T072541Z" creationid="aceway@qq.com" creationdate="20160427T072541Z">
        <seg>例子: [1.1, 2.2, 3.3, 4.4]
* **Color3**: 一个含有3个浮点数且大小在0和1间的 ([r, g, b])数组.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example: [1.1, 2.2, 3.3]
* **Vector4**: An array of 4 floats ([x, y, z, w]).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T072405Z" creationid="aceway@qq.com" creationdate="20160427T072405Z">
        <seg>例子: [1.1, 2.2, 3.3]
* **Vector4**: 一个含有4个浮点数([x, y, z, w])的数组.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Feel free to imagine a few of your own basic element ideas, and present them on the forum.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T125032Z" creationid="aceway" creationdate="20160507T125032Z">
        <seg>请自由设想你自己的基础元素创意, 并把它们提交到论坛上.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Feel free to play with this scene... [**at our online playground**](http://babylonjs-playground.azurewebsites.net/?12).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T081005Z" creationid="aceway" creationdate="20170131T081005Z">
        <seg>去[**我们的在线娱乐场**](http://babylonjs-playground.azurewebsites.net/?12)随意体验这个场景吧...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Feel free to play with this scene... [at our online playground](http://babylonjs-playground.azurewebsites.net/?11).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T095210Z" creationid="aceway" creationdate="20170130T095210Z">
        <seg>请去[我们的在线娱乐厅](http://babylonjs-playground.azurewebsites.net/?11)随意体验这个场景... </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Feel free to try different animations on different objects, then come back and learn all about [**Sprites**](http://doc.babylonjs.com/tutorials/Sprites).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T160920Z" creationid="aceway" creationdate="20160402T152948Z">
        <seg>请自己尝试在不同的物体上实现不同的动画, 然后回到这里再学习更多的关于 [**精灵**](http://doc.babylonjs.com/tutorials/Sprites).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File size is less than 200KB when gizipped.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T071359Z" creationid="aceway@qq.com" creationdate="20160427T071359Z">
        <seg>当压缩后文件小于200KB.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File size is less than 250KB when gizipped.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T071045Z" creationid="aceway@qq.com" creationdate="20160427T071045Z">
        <seg>当压缩后文件小于250KB.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Final note, if you want your skybox to render behind everything else, set the skybox's `renderingGroupId` to `0`, and every other renderable object's `renderingGroupId` greater than zero, for example:
```javascript
skybox.renderingGroupId = 0;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T043347Z" creationid="aceway" creationdate="20170204T043347Z">
        <seg>最好要注意, 如果你想天空盒被渲染在所有其它东西的后面, 就要设置天空盒的`renderingGroupId`属性值为`0`, 同时所有其它对象`renderingGroupId`属性值均大于零,例如:
```javascript
skybox.renderingGroupId = 0;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally we have to edit the web.config file to declare some file types (actually only .fx would suffice) that the web server would be allowed to serve.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T103037Z" creationid="aceway@qq.com" creationdate="20160427T103037Z">
        <seg>我们终于可以编辑web.config文件来声明一些文件类型了(实际上仅 .fx 文件就够了) ，那些允许WEB服务访问的文件.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, if you want to go to a specific image (e.g. the last one, when the character is not moving), just call:
```javascript
player.cellIndex = 44;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T123359Z" creationid="aceway" creationdate="20170129T123201Z">
        <seg>最后，如果你想定位到某个特殊图像上 (例如. 最后一帧的图像, 当角色不在移动时), 就调用:
```javascript
player.cellIndex = 44;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, whatever the mode, you can specify the color of the fog (default is `BABYLON.Color3(0.2, 0.2, 0.3)`):
```javascript
scene.fogColor = new BABYLON.Color3(0.9, 0.9, 0.85);
```
See, we told you it was easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T044821Z" creationid="aceway" creationdate="20170204T044821Z">
        <seg>最后,无论你选择哪种模式,你都能够指定雾的颜色(默认是`BABYLON.Color3(0.2, 0.2, 0.3)`):
```javascript
scene.fogColor = new BABYLON.Color3(0.9, 0.9, 0.85);
```
清楚了吧, 我告诉过你很容易的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, when our new mesh is ready, we simply apply our material:
```javascript
ground.material = groundMaterial;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T101436Z" creationid="aceway" creationdate="20170204T101436Z">
        <seg>最周,当我们的新网格准备好后,我们可简单地应用我们的材质:
```javascript
ground.material = groundMaterial;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, you can extend the **EasingFunction** base function to create your own easing function, like this :</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T160555Z" creationid="aceway" creationdate="20160402T150120Z">
        <seg>最后, 你能够扩展 **EasingFunction** 基础函数, 从而创造你自己的简化函数,像这样:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, you can launch your animation in one line of code, at any time in your application:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T085655Z" creationid="aceway@qq.com" creationdate="20160331T085655Z">
        <seg>最后，你可以在你应用的任何时间点通过一行代码加载动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, you can start this particle system whenever you want in your code with:
```javascript
particleSystem.start();
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T080615Z" creationid="aceway" creationdate="20170131T080615Z">
        <seg>最后，你可以在代码里任何时候启用这个粒子系统:
```javascript
particleSystem.start();
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First of all, after creation of a plane representing the wall, and a plane with our impact’s picture, we have to detect a click on the UI (User Interface).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T093456Z" creationid="aceway" creationdate="20170130T093456Z">
        <seg>首先, 创建一个代表墙的平面, 而且是个附有中弹效果的平面, 我们将检索UI (用户界面)上的鼠标点击.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, I want to introduce you to two interesting properties on the [scene class object](http://doc.babylonjs.com/classes/Scene):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T104559Z" creationid="aceway" creationdate="20170131T104559Z">
        <seg>首先, 我想给介绍下[场景类型对象](http://doc.babylonjs.com/classes/Scene)的两个有趣属性:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, a 'call' to the createScene function that we just completed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T064917Z" creationid="aceway@qq.com" creationdate="20160429T064917Z">
        <seg>首先, 对刚完成的createScene函数的调用.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, create our Animation object:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T054019Z" creationid="aceway@qq.com" creationdate="20160331T014146Z">
        <seg>首先，创建动画对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, do not think of objects as 3D shapes/mesh.&amp;nbsp; Those ARE objects, but here, we are talking about...&amp;nbsp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T143626Z" creationid="aceway" creationdate="20160418T143626Z">
        <seg>首先,不要把对象认为成 3D造型/网格.&amp;nbsp; 那些事物品对象, 但此处, 我们谈论的事关于...&amp;nbsp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, imagine a series of successive points defining a path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T102232Z" creationid="aceway" creationdate="20160507T102232Z">
        <seg>首先, 想象一下一系列连续点定义的路径.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, let's have a look at its syntax:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170203T035054Z" creationid="aceway" creationdate="20170203T035054Z">
        <seg>首先，让我们看看它的语法:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, our box, nothing new, just take notice of the disabled [backface culling](http://en.wikipedia.org/wiki/Back-face_culling):
```javascript
var skybox = BABYLON.Mesh.CreateBox("skyBox", 100.0, scene);
var skyboxMaterial = new BABYLON.StandardMaterial("skyBox", scene);
skyboxMaterial.backFaceCulling = false;
skyboxMaterial.disableLighting = true;
skybox.material = skyboxMaterial;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T025013Z" creationid="aceway" creationdate="20170204T025013Z">
        <seg>首先,我们的盒子没什么新东西, 只是要注意到被禁掉的[背面裁剪](http://en.wikipedia.org/wiki/Back-face_culling):
```javascript
var skybox = BABYLON.Mesh.CreateBox("skyBox", 100.0, scene);
var skyboxMaterial = new BABYLON.StandardMaterial("skyBox", scene);
skyboxMaterial.backFaceCulling = false;
skyboxMaterial.disableLighting = true;
skybox.material = skyboxMaterial;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fog is quite an advanced effect, but fog in Babylon.js has been simplified to the maximum.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T043604Z" creationid="aceway" creationdate="20170204T043604Z">
        <seg>雾是个相当高级的效果,但是在Babylon.js里雾已经被最大限度简化了.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For advanced keyframe animation, you can also define the functions used to interpolate (transition) between keys.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T110459Z" creationid="aceway" creationdate="20160402T110459Z">
        <seg>对于高级的关键帧动画, 你也可以定义个函数实现在键之间插入过度效果.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For directional light, you can control the size of the projection window by modifying ```light.shadowOrthoScale``` (0.1 by default which means that the projection window is increase by 10% from the optimal size).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T130605Z" creationid="aceway" creationdate="20170204T130605Z">
        <seg>对于定向光源, 你可以通过修改```light.shadowOrthoScale``` (默认值为0.1,意味着从投影窗口最佳尺寸增加10%的大小)值来控制投影窗口的大小.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, each of the following code lines... creates a Javascript object (or more):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T144152Z" creationid="aceway" creationdate="20160418T144152Z">
        <seg>比如, 下面每行代码... 创建了一个Javascript对象 (或者多个):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if you want to emit only 300 particles:
```javascript
particleSystem.manualEmitCount = 300;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T074336Z" creationid="aceway" creationdate="20170131T074219Z">
        <seg>比如，你想仅发射300颗粒子:
```javascript
particleSystem.manualEmitCount = 300;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example: name = "target" and value = "Plane001")
    "targetType": string (internal use for the BabylonJS Actions Builder, specifies where to find the properties for "propertyPath")
}
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T091401Z" creationid="aceway@qq.com" creationdate="20160427T091401Z">
        <seg>例如: name = "target" 和 value = "Plane001")
    "targetType": string (BabylonJS动作创建器内部使用的, 指明在哪找到"propertyPath"属性的)
}
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, imagine you create a basic shape like a box, a sphere or a plane, and you don't give it a material.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T115241Z" creationid="aceway" creationdate="20160507T115241Z">
        <seg> 例如, 假设你创建一个基本形状像, 比如一个盒子，球体或平面，你没给它的设置材质.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For purpose, here is a good reference to create your curve algorithm : [http://cubic-bezier.com](http://cubic-bezier.com)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T160520Z" creationid="aceway" creationdate="20160402T145829Z">
        <seg>这特地准备了一个参考来说明如何创建你的曲线算法 : [http://cubic-bezier.com](http://cubic-bezier.com)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this texture, you can use an optional mask to filter some colors, or filter a part of the alpha channel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T031523Z" creationid="aceway" creationdate="20170131T031523Z">
        <seg>对这种纹理，你可以使用可选的掩码来过滤些颜色，或者过滤部分透明通道.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FreeCamera and ArcRotateCamera rely upon user inputs to move the camera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T142352Z" creationid="aceway" creationdate="20170207T142352Z">
        <seg>自由相机和弧形旋转相机依赖于用户的输入来移动.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FreeCameras have many properties that you can use to adjust your view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T130916Z" creationid="aceway" creationdate="20170205T130916Z">
        <seg>自由相机有许多属性可以用来调整视图.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From Babylon.js version 2.3, you can attach [animation events](http://doc.babylonjs.com/classes/AnimationEvent) to specific frames on an animation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T152058Z" creationid="aceway" creationdate="20160402T152058Z">
        <seg>从Babylon.js 2.3 版本开始, 你可以附加 [动画事件](http://doc.babylonjs.com/classes/AnimationEvent) 给一个动画的指定帧.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From this point forward in the Basic Series tutorials, I will mostly talk about things that are contained in the createScene function (the part between the dashed lines).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160429T125859Z" creationid="aceway" creationdate="20160429T125859Z">
        <seg>从本基础系列教程的这个点开始, 我将主要谈论createScene函数里面的内容(虚线之间的部分).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Go back to Visual Studio, open the solution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T100129Z" creationid="aceway@qq.com" creationdate="20160427T100129Z">
        <seg>返回到Visual Studio里, 打开那个解决方案.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Good, because that is exactly the purpose of our [next tutorial](http://doc.babylonjs.com/tutorials/Intersect_Collisions_-_mesh).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T080947Z" creationid="aceway" creationdate="20170130T080925Z">
        <seg>非常好，因为这就是我们[下一教程](http://doc.babylonjs.com/tutorials/Intersect_Collisions_-_mesh)的教学目的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gravity can be applied to any camera that you have defined previously in your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T131617Z" creationid="aceway" creationdate="20170129T131617Z">
        <seg>重力加速度可以应用到任何你代码里之前已经定义的相机上。.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Height Map
---
## Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T050327Z" creationid="aceway" creationdate="20170204T045610Z">
        <seg>高度图
---
## 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HeightMap grounds are easy, but we decided to create a separate tutorial so we could say more about this important Babylon.js feature.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T122828Z" creationid="aceway" creationdate="20160507T122319Z">
        <seg>高度图地面很简单, 但是我们决定创建一个独立的教程讲它, 以便能更多的讲述Babylon.js的这个重要特征.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Help us make our list of basic elements grow, if you can.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T125108Z" creationid="aceway" creationdate="20160507T125108Z">
        <seg>如果你能,请帮助我们增加基础元素列表.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are the available modes :
- `BABYLON.Scene.FOGMODE_NONE` - default one, fog is deactivated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T044056Z" creationid="aceway" creationdate="20170204T043742Z">
        <seg>这些是时可以使用的模式:
- `BABYLON.Scene.FOGMODE_NONE` - 默认值,雾被停用.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are the next updates we will *probably* add to babylon.js:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T104120Z" creationid="aceway@qq.com" creationdate="20160427T104120Z">
        <seg>这是下次更新我们 *可能* 添加到babylon.js里的内容:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are the predefined easing functions you can use : 
- ```BABYLON.CircleEase()```
- ```BABYLON.BackEase(amplitude)```
- ```BABYLON.BounceEase(bounces, bounciness)```
- ```BABYLON.CubicEase()```
- ```BABYLON.ElasticEase(oscillations, springiness)```
- ```BABYLON.ExponentialEase(exponent)```
- ```BABYLON.PowerEase(power)```
- ```BABYLON.QuadraticEase()```
- ```BABYLON.QuarticEase()```
- ```BABYLON.QuinticEase()```
- ```BABYLON.SineEase()```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T130012Z" creationid="aceway" creationdate="20160402T130012Z">
        <seg>这儿是一些你可直接使用的预定义简化函数 : 
- ```BABYLON.CircleEase()```
- ```BABYLON.BackEase(amplitude)```
- ```BABYLON.BounceEase(bounces, bounciness)```
- ```BABYLON.CubicEase()```
- ```BABYLON.ElasticEase(oscillations, springiness)```
- ```BABYLON.ExponentialEase(exponent)```
- ```BABYLON.PowerEase(power)```
- ```BABYLON.QuadraticEase()```
- ```BABYLON.QuarticEase()```
- ```BABYLON.QuinticEase()```
- ```BABYLON.SineEase()```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a [playground demo](http://www.babylonjs-playground.com/#DZTQH#2) that uses it, as well as showing some top secret tricks for making the camera initialize to certain angles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T135147Z" creationid="aceway" creationdate="20170207T134706Z">
        <seg>这儿有个使用了_虚拟现实设备定向相机_的[娱乐场演示](http://www.babylonjs-playground.com/#DZTQH#2) , 它也展示了如何将该相机初始化成指定角度的顶级秘笈.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a pretty cool implementation using the bezier curve algorithm :</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T150006Z" creationid="aceway" creationdate="20160402T150006Z">
        <seg>这儿是个非常酷的使用贝塞尔算法的实现 :</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a short comment from Deltakosh... regarding that playground demo linked above:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T100100Z" creationid="aceway" creationdate="20170131T100100Z">
        <seg>这是Deltakosh的一个简短的评论... 关于上面连接里的娱乐场演示:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a straightforward sample to animate a torus within a ```CirleEase``` easing function :</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T144743Z" creationid="aceway" creationdate="20160402T144743Z">
        <seg>这儿是个简单的例子, 使用简化函数 ```CirleEase``` 来让椭圆环体动起来的动画 :</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a straightforward sample using the **CreateAndStartAnimation()** function :</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T111354Z" creationid="aceway" creationdate="20160402T111354Z">
        <seg>这有个使用 **CreateAndStartAnimation()** 函数的例子:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example of a bounding box:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T085723Z" creationid="aceway" creationdate="20170130T085304Z">
        <seg>这儿是个边界盒的例子:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an illustration:
![](http://urbanproductions.com/wingy/babylon/misc/arc01.jpg)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T135739Z" creationid="aceway" creationdate="20170205T135739Z">
        <seg>这是个说明例子:
![](http://urbanproductions.com/wingy/babylon/misc/arc01.jpg)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is another example showing what you can achieve with BabylonJS height maps:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T102036Z" creationid="aceway" creationdate="20170204T102036Z">
        <seg>这儿是另一个展示你可以用BabylonJS高度图实现效果的例子:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is how it is done:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T105349Z" creationid="aceway" creationdate="20170131T105349Z">
        <seg>这个就是具体做法:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is how to construct a Babylon.js VirtualJoysticksCamera:
```javascript
// VirtualJoysticksCamera &gt;&gt; Move in your world with on-screen Virtual Joysticks
// Parameters : name, position, scene
    var camera = new BABYLON.VirtualJoysticksCamera("VJ_camera", new BABYLON.Vector3(0, 1, -15), scene);
```
The VirtualJoysticksCamera also uses a FreeCamera as its basis, so all the properties and methods of our familiar FreeCamera... are found on our VirtualJoysticksCamera as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T053155Z" creationid="aceway@qq.com" creationdate="20170207T053155Z">
        <seg>下面就是如何构建Babylon.js的虚拟操纵杆相机:
```javascript
// 虚拟操纵杆相机 &gt;&gt; 通过屏幕上的虚拟操纵杆控制它在场景中移动
//参数：名称，位置，场景
    var camera = new BABYLON.VirtualJoysticksCamera("VJ_camera", new BABYLON.Vector3(0, 1, -15), scene);
```
虚拟操纵杆相机也是用自由相机作为基础, 因此自由相机的所有属性和方法均能在虚拟操纵杆相机上找到.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is how to construct a TouchCamera:
```javascript
// TouchCamera &gt;&gt; Move in your world with your touch-gesture device
// Parameters : name, position, scene
    var camera = new BABYLON.TouchCamera("TouchCamera", new BABYLON.Vector3(0, 1, -15), scene);
```
The TouchCamera uses a FreeCamera as its basis, so all the powerful properties and methods of our familiar FreeCamera... are also found on our TouchCamera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T131119Z" creationid="aceway" creationdate="20170206T131119Z">
        <seg>这是如何创建一个触控相机:
```javascript
// 触控相机 &gt;&gt; 使用触控设备来在场景中移动它
// 参数: 名称，位置，场景
    var camera = new BABYLON.TouchCamera("TouchCamera", new BABYLON.Vector3(0, 1, -15), scene);
```
触控相机使用自由相机作为基础, 所以我们熟悉的自由相机具有的所有属性都可以在触控相机上找到.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is how you construct a Babylon.js DeviceOrientationCamera:
```javascript
// DeviceOrientationCamera &gt;&gt; Move in your scene with device orientation
// Parameters : name, position, scene
    var camera = new BABYLON.DeviceOrientationCamera("DevOr_camera", new BABYLON.Vector3(0, 1, -15), scene);
```
The DeviceOrientationCamera also uses a FreeCamera as its basis, so all the powerful properties and methods of our familiar FreeCamera... are also found on our DeviceOrientationCamera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T135204Z" creationid="aceway" creationdate="20170206T135204Z">
        <seg>这儿是如何创建一个Babylon.js设备定向相机的方法:
```javascript
// 设备定向相机 &gt;&gt; 使用定向设备在场景中移动相机
// 参数：名称，位置，场景
    var camera = new BABYLON.DeviceOrientationCamera("DevOr_camera", new BABYLON.Vector3(0, 1, -15), scene);
```
设备定向相机也是使用自由相机作为基础, 因此我们熟悉的自由相机上所有强大的属性和方法在设备定向相机也能够找到.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is how you construct a Babylon.js FollowCamera:
```javascript
// FollowCamera &gt;&gt; Follow a mesh through your scene
// Parameters : name, position, scene
    var camera = new BABYLON.FollowCamera("FollowCam", new BABYLON.Vector3(0, 15, -45), scene);
    camera.target = myMeshObject; // target any mesh or object with a "position" Vector3
```
The code above... constructs the FollowCamera and adds a target mesh, which is all that is required.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T051253Z" creationid="aceway@qq.com" creationdate="20170207T051253Z">
        <seg>这儿是教你如何创建Babylon.js的跟随相机:
```javascript
// 跟随相机 &gt;&gt; 跟随个网格对象在场景里穿越
// 参数：名称，位置，场景
    var camera = new BABYLON.FollowCamera("FollowCam", new BABYLON.Vector3(0, 15, -45), scene);
    camera.target = myMeshObject; // target any mesh or object with a "position" Vector3
```
上面的代码... 构建一个跟随相机然后设置个目标网格，这就是全部需要做到的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is how you construct a Babylon.js FreeCamera:
```javascript
// FreeCamera &gt;&gt; You can move around the scene with mouse and cursor keys
// Parameters : name, position, scene
    var camera = new BABYLON.FreeCamera("FreeCamera", new BABYLON.Vector3(0, 1, -15), scene);
```
The FreeCamera is constructed aiming in a +z direction.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T140306Z" creationid="aceway" creationdate="20170205T121411Z">
        <seg>这儿教你如何创建一个Babylon.js自由相机:
```javascript
// 自由相机 &gt;&gt; 你可以使用鼠标和光标键将之在场景中移动
// 参数: 名称，位置，场景
    var camera = new BABYLON.FreeCamera("FreeCamera", new BABYLON.Vector3(0, 1, -15), scene);
```
创建的相机朝着某一正Z轴方向.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is how you construct our handy ArcRotateCamera:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T133956Z" creationid="aceway" creationdate="20170205T133956Z">
        <seg>这儿教你如何创建方便的弧形旋转相机:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is its constructor:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T135620Z" creationid="aceway" creationdate="20170207T135620Z">
        <seg>这是它的构造函数:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the basic code needed to create a tiled ground.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T123143Z" creationid="aceway" creationdate="20160507T123143Z">
        <seg>这儿是创建一个瓦片地图所需的基础代码.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the constructor:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T134604Z" creationid="aceway" creationdate="20170207T134604Z">
        <seg>这是构造函数:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the fifth HTML SCRIPT element/tag in the big picture scene file.&amp;nbsp; We used 4 SCRIPT elements/tags to do the external includes.&amp;nbsp; This one is an INTERNAL include.&amp;nbsp; Notice that it has no 'src' URL.&amp;nbsp; That is because it is a section of Javascript code that YOU have written directly into this document.&amp;nbsp; Yes, YOU.&amp;nbsp; Now you are a Javascript programmer!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T030127Z" creationid="aceway" creationdate="20160404T002750Z">
        <seg>这是大图片场景文件里的第五个 HTML SCRIPT 元素/标签 .&amp;nbsp; 我们用了4个 SCRIPT 元素/标签 实现外部包含.&amp;nbsp; 这个是内部包含.&amp;nbsp; 注意没有 'src' 地址.&amp;nbsp; 那是因为它是你直接写入这个文档的 Javascript代码部分.&amp;nbsp; 是的, 你写的.&amp;nbsp; 现在你是名 Javascript 程序员!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is what a complete sprite image looks like:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T122108Z" creationid="aceway" creationdate="20170129T122108Z">
        <seg>这儿是个完整的精灵图像例子的样子:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is what our image looks like:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170123T011515Z" creationid="aceway@qq.com" creationdate="20170123T011515Z">
        <seg>这个是我们的图片看起来的样子:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here we want the shadow of our torus, but you can “push” any meshes you want:
```javascript 
shadowGenerator.getShadowMap().renderList.push(torus);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T104758Z" creationid="aceway" creationdate="20170204T104758Z">
        <seg>此处我们想要我们那个环的阴影, 但时你可以添加任何你想要的网格对象的:
```javascript 
shadowGenerator.getShadowMap().renderList.push(torus);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here we want to scale an object on the X axis, so it will be “scaling.x”.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T054056Z" creationid="aceway@qq.com" creationdate="20160331T014428Z">
        <seg>此处我们想在X轴方向上放大对象, 所以此处使用“scaling.x”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here you decide and enter what kind of value will be modified: is it a float (e.g. a translation), a vector (e.g. a direction), or a quaternion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T054110Z" creationid="aceway@qq.com" creationdate="20160331T014803Z">
        <seg>此处你决定开始修改什么类型的数据：floating（比如是平移），一个向量(比如是方向)，或四元数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's a few, with some example values:
```javascript
camera.radius = 30; // how far from the object to follow
camera.heightOffset = 8; // how high above the object to place the camera
camera.rotationOffset = 180; // the viewing angle
camera.cameraAcceleration = 0.05 // how fast to move
camera.maxCameraSpeed = 20 // speed limit
```
And don't forget to set:
```javascript
scene.activeCamera = camera;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T051641Z" creationid="aceway@qq.com" creationdate="20170207T051641Z">
        <seg>这儿就是些设置了属性值的:
```javascript
camera.radius = 30; // 距离跟随对象多远
camera.heightOffset = 8; // 在跟随对象上面多高放置相机
camera.rotationOffset = 180; // 观察角度
camera.cameraAcceleration = 0.05 // 移动速度
camera.maxCameraSpeed = 20 // 速度限制
```
不要忘了设置:
```javascript
scene.activeCamera = camera;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How drab!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T122834Z" creationid="aceway" creationdate="20160508T122834Z">
        <seg>多么的单调啊!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I could explain how the Lines Mesh constructor works, but I think you can see how it works just by looking at the demo code above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T141618Z" creationid="aceway" creationdate="20160503T141618Z">
        <seg>我可以解释线型网格是如何工作的, 当时我认为剋可以通过观察上面的演示代码而知晓.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I will assume that you already know how to insert a createScene function into a Babylon.js HTML5 scene document (like the one above).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160429T130035Z" creationid="aceway" creationdate="20160429T130035Z">
        <seg>我假设你已经知道如何往HTML5页面文档里插入BabylonJS场景的createScene函数(就像上面那个).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I will talk about the fourth parameter further below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T030701Z" creationid="aceway" creationdate="20170131T030701Z">
        <seg>我会在更后面些讨论第四个参数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I will talk more about scaling... further below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T143226Z" creationid="aceway" creationdate="20160421T143226Z">
        <seg>在后面我们会更多的讨论缩放.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I will try to explain their purposes as we examine each camera and their constructors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T123349Z" creationid="aceway" creationdate="20170206T123349Z">
        <seg>我将试着解释它们的用途，我们检验每个相机的用途和构造函数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I would like you to take note... that scaling is **for mesh only**.&amp;nbsp; For example, you can POSITION a mesh, camera, or light.&amp;nbsp; You can often ROTATE a mesh, camera, or light.&amp;nbsp; But SCALING... is for mesh.&amp;nbsp; If you stretch or shrink (scale) a camera or light, you will break its electrical parts.&amp;nbsp; (It's a joke, ok?)&amp;nbsp; &amp;nbsp;There is no reason to set scaling for a camera or light.&amp;nbsp; They are invisible scene items.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T080321Z" creationid="aceway" creationdate="20160423T080321Z">
        <seg>我希望你注意... 缩放是**仅仅网格可以**.&amp;nbsp; 例如, 你可以定位一个网格, 相机, 活着光源.&amp;nbsp; 你可以经常旋转一个网格, 相机, 或者光源.&amp;nbsp; 但是对于缩放... 它是针对网格的.&amp;nbsp; 如果你拉伸或缩小(缩放)一个相机或光源, 你会破坏其电力部分.&amp;nbsp; (开玩笑的,好么?)&amp;nbsp; &amp;nbsp;没有必要缩放相机或光源.&amp;nbsp; 它们是场景中不可见项.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I you need more details about how to deal with this method, you would probably read the [**Parametric Shapes**](http://doc.babylonjs.com/tutorials/Parametric_Shapes) part.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T110251Z" creationid="aceway" creationdate="20160507T110251Z">
        <seg>如果你想知道处理该方法的更多细节, 你可能会阅读[**参数化造型**](http://doc.babylonjs.com/教程/Parametric_Shapes) 部分.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I'm sure you have already read the  [**Babylon.js Primer**](http://doc.babylonjs.com/generals/A_Babylon.js_Primer) and the  [**previous tutorial**](http://doc.babylonjs.com/tutorials/Creating_a_Basic_Scene), and thus you know how to format scene files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T130431Z" creationid="aceway" creationdate="20160503T130431Z">
        <seg>我确定你已经读过[**Babylon.js初级教程**](http://doc.babylonjs.com/generals/A_Babylon.js_Primer) 和 [**先前的教程**](http://doc.babylonjs.com/tutorials/Creating_a_Basic_Scene), 因此你应该知道如何设置场景文件格式.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If false (default value), the mesh data are passed only once to the GPU.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T114323Z" creationid="aceway" creationdate="20160507T114323Z">
        <seg>如果为 false (默认值), 则该网格数仅仅往GPU传送一次.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If not given, the DEFAULT value is set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T115027Z" creationid="aceway" creationdate="20160507T115027Z">
        <seg>如果没提供, 则 DEFAULT 值被设置.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If not, it’s null.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T094228Z" creationid="aceway" creationdate="20170130T094228Z">
        <seg>如果没有，它是null.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If required you can also totally deactivate panning by setting :
```javascript
   scene.activeCamera.panningSensibility = 0;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T123005Z" creationid="aceway" creationdate="20170206T123005Z">
        <seg>如果有需要你也可以通过设定来完全禁止平移:
```javascript
   scene.activeCamera.panningSensibility = 0;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If set to TRUE or boolean 1, the  Babylon engine won’t render hidden face(s) of the meshes that use this material.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T134856Z" creationid="aceway" creationdate="20160522T134856Z">
        <seg>如果它设置为TRUE或布尔1, 则Babylon引擎不会渲染使用了该材质的网格对象的隐藏面.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If true, the mesh data may be recomputed and passed to the GPU at each frame refresh.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T114443Z" creationid="aceway" creationdate="20160507T114443Z">
        <seg>如果为 true, 则该网格数据可以被重新计算并在每帧刷新时传递给GPU.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If well done, it’s very powerful.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T151549Z" creationid="aceway" creationdate="20160402T151549Z">
        <seg>如果我们做到了, 它将是强大的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you apply a test material to your mesh, set _material.backFaceCulling = false;_, and light it up, you will notice that the back (or internal) face... is now visible, but it doesn't reflect the light.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T115957Z" creationid="aceway" creationdate="20160507T115957Z">
        <seg>如果你为网格应用了一个材质, 设置 _material.backFaceCulling = false;_, 同时用光源照明它, 你会注意到背面(或者里面)... 现在可见了, 但是它却不反射光.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are happy with the camera presets Babylon.js is giving you, like the GamepadCamera, just stick with it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T142603Z" creationid="aceway" creationdate="20170207T142603Z">
        <seg>如果你高兴，你可以使用Babylon.js提供的相机预设功能, 就像操纵杆相机，只要你能坚持.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you choose one of the demo scenes from the drop-down Scene Selector button, the playground URL will change to this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T030238Z" creationid="aceway@qq.com" creationdate="20160427T030238Z">
        <seg>如果你从下拉的场景选择器选一个场景后, 娱乐场的网址会变成这样:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you give your mesh some material, you can see that the light now only reflects on the back face (plane) or only inside (box, sphere, etc).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T120710Z" creationid="aceway" creationdate="20160507T120710Z">
        <seg>如果你为网格提供一些材质, 你可以看到光源仅仅能照射到背面 (平面的)或者里面 (盒子的, 球体的等).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you go behind the plane or inside the box or the sphere, you will notice that the faces aren't visible any longer : Babylon.js mesh are often constructed with the default side orientation _FRONTSIDE_.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T115508Z" creationid="aceway" creationdate="20160507T115508Z">
        <seg>如果你到平面的背后或者盒子/球体的里面, 你会注意到那些面时不可见的: Babylon.js 网格通常都是由默认的朝向 _FRONTSIDE_ 构成.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you imagine an ArcRotateCamera being a satellite orbiting the Earth, then the _alpha_ is the longitudinal or sideways axis, the _beta_ is the latitudinal or up/down axis, and the _radius_ is the altitude or height (distance) from the Earth's core.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T135632Z" creationid="aceway" creationdate="20170205T135332Z">
        <seg>如果你将弧度相机想象成一颗围绕地球旋转的卫星, 那么_alpha_就是经度或横向平轴, _beta_是纬度或者上下轴, 而_radius_是从地球核心往外的海拔或高度(距离).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you look carefully at the editor code in the picture above, or if you have selected one of the pre-installed playground scenes from the drop-down scene selector, you will notice that they are 'wrapped' in a function called 'createScene()'.&amp;nbsp; The createScene() function is a very common function used in many BabylonJS scenes.&amp;nbsp; Copying and pasting createScene() functions is done often with users of the BabylonJS framework.&amp;nbsp; By pressing this button, you will empty the contents of the editor, and a basic un-programmed createScene() function will be placed in the editor.&amp;nbsp; A camera is provided by default, but you may want to add some light and mesh, so the new scene becomes renderable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160425T145937Z" creationid="aceway" creationdate="20160425T145937Z">
        <seg>如果你仔细查看过上面图片编辑器里的代码, 或者如果你在娱乐场场景的下拉选择器里选过某个预装的场景, 你应该会注意到'包裹'在一个叫做'createScene()'的函数里的部分.&amp;nbsp; 该createScene()函数是个在许多BabylonJS场景里都会被使用的非常普通的函数.&amp;nbsp; BabylonJS框架用户经常复制和粘贴createScene()的内容.&amp;nbsp; 通过按下这个按钮, 你将清空编辑器里的内容, 然后一个已经编写好基础内容的createScene()函数会出现在编辑器里.&amp;nbsp; 提供一个默认的相机t, 但是你也许想加些光源和网格, 以便新的场景可以被渲染e.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you save that scene again... (maybe after doing more work on the scene), the URL will increment, and look like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T031141Z" creationid="aceway@qq.com" creationdate="20160427T031141Z">
        <seg>如果你再次保存场景... (也许是在对场景上做了更多工作之后), 那个网址将增长, 看着像这样子的:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you save that scene again... the URL will increment, and look like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T031233Z" creationid="aceway@qq.com" creationdate="20160427T031233Z">
        <seg>如果再次保存... 网址还增长, 看起来像这样:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want more information about easing functions, here are some useful links : 
- [MSDN Easing functions documentation](http://msdn.microsoft.com/en-us/library/ee308751.aspx)
- [Easing functions cheat sheet](http://easings.net/fr)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T125800Z" creationid="aceway" creationdate="20160402T125800Z">
        <seg>如果你希望获得关于简化函数的更多信息,这儿有一些有用的链接 : 
- [MSDN 简化函数文档](http://msdn.microsoft.com/en-us/library/ee308751.aspx)
- [简化函数懒人表单](http://easings.net/fr)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want more information about this second parameter, you can have a look at this Wikipedia page, especially about AABB and OBB mode: [http://en.wikipedia.org/wiki/Bounding_volume](http://en.wikipedia.org/wiki/Bounding_volume)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T090457Z" creationid="aceway" creationdate="20170130T090457Z">
        <seg>如果你了解第二个参数的更多信息，你可以看看这个维基网页: [http://en.wikipedia.org/wiki/Bounding_volume](http://en.wikipedia.org/wiki/Bounding_volume), 特别是关于AABB和OBB模式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want some free skybox texture samples, point your browser to: http://3delyvisions.co/skf1.htm (look at licenses before use, please.) As you can see by those examples, skybox textures need not be textures of sky alone.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T042500Z" creationid="aceway" creationdate="20170204T042500Z">
        <seg>如果你想要些免费的天空盒的纹理样例,将浏览器定位到: http://3delyvisions.co/skf1.htm (在使用前请看下授权说明.) 正如你从这些例子中所见,天空盒子纹理不单只为天空的花纹.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to add a new file, please do the following as well:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T065111Z" creationid="aceway@qq.com" creationdate="20160427T065111Z">
        <seg>如果你想加个新文件, 请也按照下面要求做好:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to add parameters to this instance, you can manipulate it like any other meshes:
```javascript
player.position.y = -0.3;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T121210Z" creationid="aceway" creationdate="20170129T121210Z">
        <seg>如果你希望给这个实例添加参数，你可以像操作其它网格对象一样:
```javascript
player.position.y = -0.3;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to begin the animation, simply call this function:
```javascript
player.playAnimation(0, 43, true, 100);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T122751Z" creationid="aceway" creationdate="20170129T122751Z">
        <seg>如果你想开始播放动画，可以简单的调用这个函数:
```javascript
player.playAnimation(0, 43, true, 100);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to change user inputs based upon user preferences, customize one of the existing presets, or use your own input mechanisms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T142748Z" creationid="aceway" creationdate="20170207T142748Z">
        <seg>如果你想基于用户的喜好改变输入方式, 可以使用预设的定指一个, 或者使用你自己的输入机制.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to go further, you can activate shadows filtering.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T105519Z" creationid="aceway" creationdate="20170204T105519Z">
        <seg>你过你想更进一层, 就可以激活阴影过滤.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to launch only a few particles at once, that can be done, as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T074314Z" creationid="aceway" creationdate="20170131T074211Z">
        <seg>如果你想一次加载特定颗数的粒子，那也是可以做到的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to make your home demo scenes run faster, you can download copies of the external includes... and put them into a folder.&amp;nbsp; That folder should be located WITHIN the folder that holds your index.html.&amp;nbsp; For example, in the same folder as index.html, you could create a folder called 'js' (no quotes).&amp;nbsp; Inside the js folder, you could put home copies of The Big 4 external include files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T082056Z" creationid="aceway" creationdate="20160423T082056Z">
        <seg>如果你想让家里的演示场景运行快些, 你可以下载这些外部文件的拷贝... 然后把它们放入一个文件夹.&amp;nbsp; 该本文件夹必须和你的index.html文件位于同一个文件夹下.&amp;nbsp; 例如, 在index.html的同一文件夹里, 你创建一个叫做'js' (没有引号)的文件夹.&amp;nbsp; 将你下载4大外部资源文件放入该js文件夹.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to see and play with the playground scene for this tutorial, you can [**click right here**](http://babylonjs-playground.azurewebsites.net/?13).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T100159Z" creationid="aceway" creationdate="20170204T045105Z">
        <seg>如果你想在游乐场看看并体验下本教程的场景, 你可以[**右击此处**](http://babylonjs-playground.azurewebsites.net/?13).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to translate (offset) your texture on your mesh, you can use the “uOffset” and “vOffset” properties:
```javascript
materialSphere1.diffuseTexture.uOffset = 1.5;
materialSphere1.diffuseTexture.vOffset = 0.5;
```
And if you want to repeat/tile an image pattern (e.g. grass texture), you can use the “uScale” and “vScale” properties:
```javascript
materialSphere1.diffuseTexture.uScale = 5.0;
materialSphere1.diffuseTexture.vScale = 5.0;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T130539Z" creationid="aceway" creationdate="20160508T125938Z">
        <seg>如果你想在网格上平移(偏移) 你的纹理, 你可以使用 “uOffset” 和 “vOffset” 属性:
```javascript
materialSphere1.diffuseTexture.uOffset = 1.5;
materialSphere1.diffuseTexture.vOffset = 0.5;
```
而且,如果你想重复/铺瓦片模式使用图片(比如. 草地纹理), 你可以使用 “uScale” 和 “vScale” 属性:
```javascript
materialSphere1.diffuseTexture.uScale = 5.0;
materialSphere1.diffuseTexture.vScale = 5.0;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to use sprites, you need to create a “sprite manager” to optimize GPU resources by grouping in one place multiple instances of a sprite.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170122T111405Z" creationid="aceway" creationdate="20170122T111405Z">
        <seg> 如果你想使用精灵，你需要创建一个"精灵管理"(在一处分组管理精灵的多个实例)来优化GPU资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to use your own shaders in this case, you just have to reference them with a "./" at beginning):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T065941Z" creationid="aceway@qq.com" creationdate="20160427T065941Z">
        <seg>如果你想要在这种情况下使用自己的渲染器，你需要通过以一个"./"起头的方式引用它们):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you wish to take your scene home, publish it on a web server, or hand it out to others, THIS is your button.&amp;nbsp; **Get .zip** attempts to install your editor code into a single index.html file, and puts that file into a zip called sample.zip.&amp;nbsp; Then it offers the sample.zip file to you, for downloading.&amp;nbsp; Once downloaded and unzipped, you will see the file named index.html.&amp;nbsp; You can browse this file with a webGL-ready browser, and your scene should render nicely in your browser.&amp;nbsp; After you are sure that your index.html file is working properly, you may want to publish it to a web server and share your beautiful playground scene with the entire world.&amp;nbsp; There is no need to install framework files such as babylon.js and hand.js in nearby directories, because the index.html file references the same on-line versions of the framework... as the playground itself uses.&amp;nbsp; The index.html file is ready-to-run and completely portable.&amp;nbsp; (We love it!)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160425T144941Z" creationid="aceway" creationdate="20160425T144941Z">
        <seg>如果你想把你的场景带回家, 或发布到某个网站服务器上, 或者发送给其他人, 这个按钮就是为你提供的.&amp;nbsp; **获取.zip** 尝试将你编辑器里的代码放入一个单一的index.html文件, 然后把之打包进一个叫做sample.zip的压缩文件里.&amp;nbsp; 最后把这个sample.zip文件提供给你下载.&amp;nbsp; 一旦你下载并解压, 你就会看到名为index.html的文件.&amp;nbsp; 你能用一个支持WebGL的浏览器打开该文件, 你会发现场景被浏览器渲染得妥妥的在那.&amp;nbsp; 当妮确定index.html文件工作正常后, 你也许想将之发布到某个网页服务器上, 然后同全世界分享你漂亮的娱乐场场景.&amp;nbsp; 没有必要安装诸如babylon.js和hand.js的框架文件到index.html的附近路径, 因为index.html文件里引用了和在线娱乐场框架使用的一样版本.&amp;nbsp; index.html文件已经可以运行并且完全可移植.&amp;nbsp; (我们爱死它了!)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you would like to learn more about hand.js and its gestures-ready methods, take a look at [**this comprehensive blog entry**](http://blogs.msdn.com/b/eternalcoding/archive/2013/01/16/hand-js-a-polyfill-for-supporting-pointer-events-on-every-browser.aspx) written by our friend and hero David Catuhe.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T130605Z" creationid="aceway" creationdate="20170206T130605Z">
        <seg>如果你想学习更多的hand.js及其手势调用方法, 看一看我们的朋友和英雄David Catuhe写的[**此综合博客条目**](http://blogs.msdn.com/b/eternalcoding/archive/2013/01/16/hand-js-a-polyfill-for-supporting-pointer-events-on-every-browser.aspx) .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your code is wrapped in a createScene() function, does it include *var scene = new BABYLON.Scene(engine),* near the top of the function?&amp;nbsp; How about a *return scene;* line as the last line inside the function braces?&amp;nbsp; Do you have some mesh like a box, cylinder, ground, sphere, plane, torus, torusknot, etc?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T024014Z" creationid="aceway@qq.com" creationdate="20160427T024014Z">
        <seg>如果你的代码已经包含在createScene()函数里, 那在该函数的顶部有这行代码么*var scene = new BABYLON.Scene(engine),*?&amp;nbsp; 函数尾部的大括号里最后一行是否有*return scene;*呢?&amp;nbsp; 你是否有创建一个网格对象，诸如：一个盒子, 圆柱体, 地面, 球体, 平面, 圆环体, 圆环节等?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a classic world such as Earth, the direction of the force of gravity is down (negative) along the Y axis, but feel free to change it!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T131518Z" creationid="aceway" creationdate="20170129T131518Z">
        <seg>在一个经典的世界里，比如地球上，重力加速度的方向是沿着Y轴向下的(负方向) , 但是你可以自由的改变它!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In any Babylon.js scene, you can create as many cameras as you wish, but only one camera can be active at a time (unless you are using [multi-viewports](http://doc.babylonjs.com/tutorials/How_to_use_Multi-Views)).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T120051Z" creationid="aceway" creationdate="20170205T120051Z">
        <seg>在任何Babylon.js场景中, 你可以创建你想要的任意多个相机, 但是一次只能激活一个相机(除非你启用[多视图](http://doc.babylonjs.com/tutorials/How_to_use_Multi-Views)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In dynamic scenes, objects are moving and interacting with each other.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T081301Z" creationid="aceway" creationdate="20170130T081301Z">
        <seg>在动态场景里，物体是在运动中彼此相互作用的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In my example, I have added a skybox (like we have learned before [here](http://doc.babylonjs.com/tutorials/Environment)), and a spotlight to simulate sun activity.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T101854Z" creationid="aceway" creationdate="20170204T101854Z">
        <seg>在我的例子里,我已经添加了个天空盒(像我们在之前在[这](http://doc.babylonjs.com/tutorials/Environment)学到的), 还有个聚光灯来模拟太阳光的活动.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to create a ribbon, you just have to pass an array of paths.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T060814Z" creationid="aceway" creationdate="20170205T060814Z">
        <seg>为了创建一条色带,你必须传递一个路径数组.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In other terms, your mesh will be twice heavier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T121305Z" creationid="aceway" creationdate="20160507T121305Z">
        <seg>在其它方面, 你的网格消耗将翻倍.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In our case, a box will be our emitting object, representing a particle fountain.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T025606Z" creationid="aceway" creationdate="20170131T025606Z">
        <seg>在本例里，一个盒子将成为我们的发生器，代表一个粒子喷泉.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In our case, the emitter is our fountain, but if you wish, you can use only a vector (BABYLON.Vector3) as an emitter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T030109Z" creationid="aceway" creationdate="20170131T030109Z">
        <seg>在本例里，发射器是由喷泉来定义，但是如果你愿意的话，也可以使用仅仅一个向量 (BABYLON.Vector3)来定义发射器.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In our case, we want to scale our box, but not in a linear way: it must be faster when it became larger, and slower when it became thinner.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T083401Z" creationid="aceway@qq.com" creationdate="20160331T083401Z">
        <seg>在我们这个案例，我们想放大盒子，但是不是线性方式，而是放大时盒子越大则放大的速度越快，缩小时盒子越小缩得越慢。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In our next tutorial, you will discover how to [check collisions between your scene and the mouse](http://doc.babylonjs.com/tutorials/Picking_Collisions).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T091911Z" creationid="aceway" creationdate="20170130T091911Z">
        <seg>在我们下一教程, 你会发现如何[检测场景与鼠标的碰撞](http://doc.babylonjs.com/tutorials/Picking_Collisions).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In short, if this parameter is set to true (false by default), then the bounding box is closer to the mesh (OBB bounding type), but it’s a more costly calculation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T085926Z" creationid="aceway" creationdate="20170130T085643Z">
        <seg>简而言之, 如果这个参数为true (默认是false), 那么边界盒将更叫贴近网格(OBB边界类型), 但是会有更多的计算开销.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In that `/skybox` directory, we must find 6 sky textures, one for each face of our box.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T035231Z" creationid="aceway" creationdate="20170204T035041Z">
        <seg>在那个`/skybox` 目录, 我们必能找到6个天空纹理, 一个纹理支持天空盒的一个面.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example below, we will construct an ArcRotateCamera with a target of 'Zero()' and no initial _alpha_, _beta_, or _radius_ values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T043714Z" creationid="aceway@qq.com" creationdate="20170206T043714Z">
        <seg>在下面的例子里, 我们将构造个旋转相机： 旋转目标是 '零点' 同时没有初始化_经度_, _纬度_, 和 _半径_ 值.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example below, we will make our camera's ellipsoid a bit bigger than the default one:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T035626Z" creationid="aceway" creationdate="20170130T035626Z">
        <seg>下面的例子里，我们将使相机的椭球体比默认的大一点:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the playground demo below, every time you click on the FPS marker, the new animation is blended with the box's current position:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T124804Z" creationid="aceway" creationdate="20160402T112100Z">
        <seg>在下面这个娱乐展示中, 每次你点击 FPS 标签时, 那个盒子的当前位置会被作为参数重新渲染. :</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the yellow text at the top of the scene, you will see the Babylon.js one-line way to set mybox.position (using our friend... the Vector3 value object).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T031724Z" creationid="aceway" creationdate="20160423T031724Z">
        <seg>场景顶部的黄颜色文本, 你将看到一行Bayblon.js代码设置mybox.position的方式 (使用我们的助手... 那个Vector3值对象).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, alpha is used for alpha testing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T132912Z" creationid="aceway" creationdate="20160508T132912Z">
        <seg>这种情况下, alpha被用作alpha测试.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, please download the code and use the following includes (be aware to have the babylon folder at the root of your site.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T065723Z" creationid="aceway@qq.com" creationdate="20160427T065524Z">
        <seg>这种情况下, 请下载源码然后使用下面的包含方式 (注意要在你的站点根目录下有个babylon文件夹.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, the texture has some alpha, and back-face culling is set to false for the front sphere... in order to see its black inside face:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T135350Z" creationid="aceway" creationdate="20160522T135350Z">
        <seg>在这个例子了, 纹理具有alpha, 而且前面那个球体的背面剔除被设置为false, 以便能够看到它的内面:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this file, you can discover interesting playground done by the community.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T035729Z" creationid="aceway@qq.com" creationdate="20160427T035729Z">
        <seg>在这个文件里，你会发现社区里大家在做的一些有趣的事情.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this tutorial, our goal is to understand height maps, and to learn how to generate realistic grounds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T050341Z" creationid="aceway" creationdate="20170204T045728Z">
        <seg>在本教程,我们的目标是理解高度图,然后学习如何生成真实地面.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this tutorial, we are going to discover how the collision system works.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T081504Z" creationid="aceway" creationdate="20170130T081445Z">
        <seg>在本教程里，我们将探索碰撞检测系统是如何工作的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this tutorial, we are going to learn how to create basic elements using Babylon.js, such as boxes, spheres, and planes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T125748Z" creationid="aceway" creationdate="20160503T125748Z">
        <seg>在本教程, 我们将学习如何使用Babylon.js创建基础元素, 比如盒子, 球体, 和平面.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this tutorial, we are going to learn how to create shadows in Babylon JS.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T103559Z" creationid="aceway" creationdate="20170204T103559Z">
        <seg>在本教程里,我们将学习在Babylon JS如何创建阴影.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this tutorial, we are going to simulate the same camera movements: the camera is on the floor, in collision with the ground, and potentially in collision with any objects in the scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T131141Z" creationid="aceway" creationdate="20170129T130524Z">
        <seg>在本教程里, 我们将模拟同样的(FPS)相机运动: 放在地板上的相机，与地面发生的碰撞，以及可能与场景中的任何物体发生的碰撞。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indeed, you can control the camera using keyboard/mouse on a desktop machine, using a finger/touch on a mobile device and a gamepad controller on Xbox One, for instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T140656Z" creationid="aceway" creationdate="20170207T140656Z">
        <seg>事实上，在桌面机器上你可以使用键盘/鼠标来控制相机, 在移动设备、平板上或XboxOne上用手指/触控设备来控制.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inside the ```&lt;head&gt;``` part, please add this CSS to view the canvas in maximum size:
```css
&lt;style&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T145631Z" creationid="aceway" creationdate="20160428T145429Z">
        <seg>在```&lt;head&gt;```内部, 请添加这个CSS以使画布视图最大化:
```css
&lt;style&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inside the createScene() function (the purple section)... we will be doing the actual Babylon.js commands and directives that cause beautiful webGL to happen.&amp;nbsp; The rest of the big picture sections... are simply helpers and preparations... for the fantastic purple section... the createScene() function.&amp;nbsp; Remember its name, because I will be mentioning it often in many Playpen Series tutorials.&amp;nbsp; It will become your best friend.&amp;nbsp; This I can promise.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T143936Z" creationid="aceway" creationdate="20160404T032427Z">
        <seg>=在 createScene() 函数里 (紫色部分)... 我们将开始执行真实的 Babylon.js 指令, 以产生漂亮的WebGL效果出现.&amp;nbsp; 大图片里的剩下部分... 是些简单的辅助和准备工作... 为神奇的紫色部分(那个createScene()函数)服务的.&amp;nbsp; 记住这个函数名, 因为我将在许多游戏练习系列教材里常常提到它.&amp;nbsp; 我能保证,它将成为你最好的支持者.&amp;nbsp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Intersect Collisions - mesh
---
## Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T081119Z" creationid="aceway" creationdate="20170130T081040Z">
        <seg>网格碰撞相交
---
## 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ironically, there is no rotation property on an ArcRotateCamera, but there is a position property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T041148Z" creationid="aceway@qq.com" creationdate="20170206T041148Z">
        <seg>搞笑的是, 弧形旋转相机本身没有旋转属性，但是有个位置属性.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also introduces our new [Composable Inputs](http://doc.babylonjs.com/tutorials/Customizing_Camera_Inputs) for cameras.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T135316Z" creationid="aceway" creationdate="20170207T135316Z">
        <seg>它也介绍了我们新的给相机提供的[组合输入](http://doc.babylonjs.com/tutorials/Customizing_Camera_Inputs).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can be controlled with cursors and mouse, or with touch events.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T133548Z" creationid="aceway" creationdate="20170205T133548Z">
        <seg>它可以被光标和鼠标控制，或者触摸事件也行.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can be set to follow from the rear, from the front, or from any angle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T140032Z" creationid="aceway" creationdate="20170206T140032Z">
        <seg>它可以设置成从后面，前面，或任何角度跟随目标.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It contains:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T040613Z" creationid="aceway@qq.com" creationdate="20160429T040613Z">
        <seg>它包括:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is a function with the mesh as its first variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T101325Z" creationid="aceway" creationdate="20170204T101325Z">
        <seg>它是网格对象将作为其第一个参数的函数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is beyond the scope of this tutorial to teach everything about callable methods and settable properties on Javascript objects.&amp;nbsp; The main thing is to try to take notice WHEN a 'pocket' on an object... is a property, and when it is a method.&amp;nbsp; Methods always use parentheses... sometimes empty, sometimes full of parameters/args.&amp;nbsp; Properties never use parentheses and therefore never require parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160421T101110Z" creationid="aceway@qq.com" creationdate="20160421T101110Z">
        <seg>讨论Javascript对象的可调用方法和可设置属性的所有知识点已经超越了本教程的范围.&amp;nbsp; 此处的主要目标是让大家注意到什么情况下'存储空间'里放的是对象的方法，什么情况下是属性; 方法后面总是跟着小括号... 有时括号里面是空的, 有时填满了参数.&amp;nbsp; 属性后面绝不会有括号因此也绝不需要参数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is ignored if _pathArray_ has more than one path,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T105647Z" creationid="aceway" creationdate="20160507T105647Z">
        <seg>这个参数会被忽略如果 _路径数组_ 里有多于一条路径,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is interesting to know that panning an ArcRotateCamera is also possible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T045949Z" creationid="aceway@qq.com" creationdate="20170206T045949Z">
        <seg>弧形旋转相机也可以平移， 有趣吧.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is made with only two paths _path1_ and _path2_ each following an incomplete circle.   
If we set the _closePath_ to _true_ (http://www.babylonjs-playground.com/#1TDTHJ#1), you can notice that _path1_ and _path2_ are now closed and two triangles are added between the beginning and the end of each path.  
If we give this ribbon a plain material, you can then notice it is really closed as the normals are computed to reflect the light in a continuous way : http://www.babylonjs-playground.com/#1TDTHJ#2  
Here is the example of the former _closeArray_ parameter with _closeArray_ and _closePath_ set to true : http://www.babylonjs-playground.com/#295H7U#4</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T111700Z" creationid="aceway" creationdate="20170205T104444Z">
        <seg>lll 它仅由两个不完整圆的_path1_ 和 _path2_ 构成.   
如果我们把_closePath_ 设置为_true_ (http://www.babylonjs-playground.com/#1TDTHJ#1), 你会注意到_path1_ 和 _path2_ 就闭合了而且有两个三角形被添加到每条路径的首尾之处.  
如果我们为这条色带提供普通的材质,你会发现它真的闭合了,因为色带面的反射是按照连续法线的方式计算的: http://www.babylonjs-playground.com/#1TDTHJ#2  
这是个将之前的 _closeArray_参数和_closePath_设置为true的示例 : http://www.babylonjs-playground.com/#295H7U#4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is not minified so you can easy use it to debug.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T070947Z" creationid="aceway@qq.com" creationdate="20160427T070806Z">
        <seg>它没有被压小因此你可以很容易的用它来调试
.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is set TRUE by default, but can be changed to false as wanted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T134946Z" creationid="aceway" creationdate="20160522T134946Z">
        <seg>默认是设置为TRUE, 但是如果需要的话可以改为false.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is simply the background color of the scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T105823Z" creationid="aceway" creationdate="20170131T105823Z">
        <seg>它简化了场景的背景色.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is very new to Babylon.js, and to be honest quite sexy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T132203Z" creationid="aceway" creationdate="20170207T132203Z">
        <seg>对于Babylon.js来说它也很新鲜性感的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It makes a complicated system, (WebGL,) much easier to use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T032859Z" creationid="aceway" creationdate="20160403T032859Z">
        <seg>Babylon.js构造里一个复杂的系统, 让网页图形库更容易使用.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It requires a third-party file called “hand.js”.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T133634Z" creationid="aceway" creationdate="20170205T133634Z">
        <seg>它需要用到叫做“hand.js”的第三方组件.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It uses a floating point value (such as 1.5).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170208T133703Z" creationid="aceway" creationdate="20170208T133703Z">
        <seg>它使用一个浮点类型的值 (比如 1.5).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It uses blurred variance shadow map.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T121157Z" creationid="aceway" creationdate="20170204T121157Z">
        <seg>它使用模糊阴影映射.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It uses post-processing filtering techniques.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T132238Z" creationid="aceway" creationdate="20170207T132238Z">
        <seg>它使用后期处理过滤技术.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will also transmit you the particle texture.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T100930Z" creationid="aceway" creationdate="20170131T100930Z">
        <seg>它也会为你传递粒子纹理.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will look broken.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T044434Z" creationid="aceway@qq.com" creationdate="20170206T044434Z">
        <seg>它看起来破碎了.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will try to set _dashNumber_ strokes on this line depending on the length of each segment between two successive vectors3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T101336Z" creationid="aceway" creationdate="20160507T101336Z">
        <seg>上面函数设置了这条点划线里线段的数量, 每段都是由两个连续三元向量定义.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's basically a combination of the FreeCamera + TouchCamera + GamepadCamera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T140144Z" creationid="aceway" creationdate="20170207T140144Z">
        <seg>它基本上时自由相机 + 触控相机 + 手持相机的组合.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's beautiful, it's easy, it's Babylon.js.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T045742Z" creationid="aceway@qq.com" creationdate="20170206T045742Z">
        <seg>漂亮，简洁， 这就是Babylon.js.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's very simple to do this:
```javascript
// 3 parameters to create an event:
// - The frame at which the event will be triggered
// - The action to execute
// - A boolean if the event should execute only once (false by default)
var event1 = new BABYLON.AnimationEvent(50, function() { console.log("Yeah!"); }, true);
// Attach your event to your animation
animation.addEvent(event1);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T160828Z" creationid="aceway" creationdate="20160402T152545Z">
        <seg>这样做非常简单:
```javascript
// 用3个参数创建一个事件:
// - 触发事件的帧
// - 将执行的动作
// - 一个布尔值表明事件是否仅被执行一次 (默认 否)
var event1 = new BABYLON.AnimationEvent(50, function() { console.log("Yeah!"); }, true);
// 将你的事件附加到动画上
animation.addEvent(event1);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its constructor looks like this:
```javascript
// AnaglyphArcRotateCamera &gt;&gt; Analglyph 3D using filter-shifted ArcRotateCamera
// Parameters : name, alpha, beta, radius, target (in Vector3), eyeSpace (in degrees), scene
var camera = new BABYLON.AnaglyphArcRotateCamera("aar_cam", -Math.PI/2, Math.PI/4, 20, new BABYLON.Vector3.Zero(), 0.033, scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T133521Z" creationid="aceway" creationdate="20170207T132731Z">
        <seg>它的构造函数看起来像这样:
```javascript
// 弧形旋转立体相机 &gt;&gt; 使用过滤偏移技术实现三维立体效果的弧形旋转相机
// 参数 : 名称，经度，维度，半径，目标(三维向量形式)，眼界(度为单位)，场景
var camera = new BABYLON.AnaglyphArcRotateCamera("aar_cam", -Math.PI/2, Math.PI/4, 20, new BABYLON.Vector3.Zero(), 0.033, scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its constructor looks like this:
```javascript
// AnaglyphFreeCamera &gt;&gt; Analglyph 3D using filter-shifted FreeCamera
// Parameters : name, position (in Vector3), eyeSpace (in degrees), scene
var camera = new BABYLON.AnaglyphFreeCamera("af_cam", new BABYLON.Vector3(0, 1, -15), 0.033, scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T133444Z" creationid="aceway" creationdate="20170207T133134Z">
        <seg>它的构造函数看起来像这样的:
```javascript
// 立体自由相机 &gt;&gt; 使用过滤偏移技术实现三维立体效果的自由相机
// 参数：名称，位置(三维向量形式)，眼界(度为单位)，场景
var camera = new BABYLON.AnaglyphFreeCamera("af_cam", new BABYLON.Vector3(0, 1, -15), 0.033, scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its follow distance and movement speeds can be set, as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T140104Z" creationid="aceway" creationdate="20170206T140104Z">
        <seg>它的跟随距离和运动速度也可以被设置.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It’s now very easy to add fog to your scenes.&amp;nbsp; First, we define the fog mode like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T043647Z" creationid="aceway" creationdate="20170204T043647Z">
        <seg>现在给你的场景添加雾非常简单.&amp;nbsp; 首先,像这样定义雾的模式:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just be careful to respect the square pixel size that you have specified in your manager (e.g. 64 pixel).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T122012Z" creationid="aceway" creationdate="20170129T122012Z">
        <seg>只是要注意在管理器中指定方形的像素尺寸 (例如 64 像素的).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Keep in mind that Vector3 values can be negative numbers as well.&amp;nbsp; So you could easily use -Math.PI/4, -Math.PI/2, -Math.PI, and -Math.PI times 2.&amp;nbsp; These values would rotate the object in the opposite direction around the x-axis.&amp;nbsp; How about this Vector3 rotation:
``` javascript
box.rotation = new BABYLON.Vector3(Math.PI/2, 0, -.707);
```
If you think that it rotates our box in a positive (+) direction 90 degrees around the x-axis, AND ALSO rotates our box 45 degrees in a negative (-) direction around the z-axis, you would be correct.&amp;nbsp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T141353Z" creationid="aceway" creationdate="20160421T141149Z">
        <seg>记住Vector3点值也能为负数.&amp;nbsp; 因此你可以使用 -Math.PI/4, -Math.PI/2, -Math.PI, 和 -Math.PI乘以2.&amp;nbsp; 这些值将是绕着X轴向相反方向旋转.&amp;nbsp; 这个Vector3如何旋转呢:
``` javascript
box.rotation = new BABYLON.Vector3(Math.PI/2, 0, -.707);
```
如果你是这样想的就对了:将盒子绕着X轴旋转正的90度, 而且也绕着Z轴旋转负的45度.&amp;nbsp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Keep watching this area of the tutorial for new basic elements, as they are being added quite quickly : you'll find the updated list with all parameter explanations [**in this section**](http://doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T124845Z" creationid="aceway" creationdate="20160507T124845Z">
        <seg>保持关注教程里这方面的内容, 因为新的基础元素很快会被添加: 你会[**在这个章节里**](http://doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter)发现更新了的名单和其所有参数的解释.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Kostar111 was also kind enough to give us a fine tutorial about how to use tiled grounds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T123722Z" creationid="aceway" creationdate="20160507T123722Z">
        <seg>Kostar111 好人做到底了:为我们提供了一个关于如何使用瓦片地图的很好教程.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Later we will see how to use advanced techniques with materials.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T140351Z" creationid="aceway" creationdate="20160522T140351Z">
        <seg>稍后, 我们将看看如何使用高级材质技术.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's pretend that you have been working on a scene file at home, and after many tries, you just cannot get it to work properly.&amp;nbsp; You could copy your home createScene function, then visit the playground, press its **CLEAR** button to empty its editor window, and then paste YOUR createScene function into the editor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160404T073957Z">
        <seg>让我们假设,你在一直在家中创建了一个场景文件, 经过多次尝试, 它就是不能正常工作.&amp;nbsp; 你可以复制你家里的 createScene 函数, 然后访问娱乐场, 点击 **清除** 按钮 来清空编辑窗口, 最后把你的 createScene 函数粘贴到编辑区域里.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's take a look at a playground scene that I once created and saved.&amp;nbsp; In this demo, I made those invisible rods... be visible:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160423T062710Z">
        <seg>让我们看看娱乐场里的一个我曾经创建保存的场景.&amp;nbsp; 在这个演示里, 我将这些无形的棒可视化了:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's take a look:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T121958Z" creationid="aceway" creationdate="20160507T121958Z">
        <seg>让我们看看:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's talk about each of the basic shapes/meshes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T130955Z" creationid="aceway" creationdate="20160503T130955Z">
        <seg>让们一一谈论下各个基础形状/网格.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let’s see how we can get your mouse position transposed in your 3D scene by this gun shooting example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T094533Z" creationid="aceway" creationdate="20170130T092746Z">
        <seg>通过下面这个用枪射击的例子，让我们弄明白如何在你的三维场景中获得转换后的鼠标位置:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lights
---
Now that you have learned about the camera types and how to place them into your scene, we will continue our tutorial series with learning about Babylon.js lights.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T143827Z" creationid="aceway" creationdate="20170207T143827Z">
        <seg>光源
---
现在你已经学习了相机类型和如何在场景中放置相机, 我们将继续我们的系列教程-学习Babylon.js 的光源.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lights are used to produce the diffuse and specular color received by each pixel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170208T132614Z" creationid="aceway" creationdate="20170208T132614Z">
        <seg>光线用来产生各个像素的漫反射和镜面反射的颜色.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like everything in Babylon.js, we try to make it easy and enjoyable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T052924Z" creationid="aceway@qq.com" creationdate="20170207T052924Z">
        <seg>就像Babylon.js里的其它技术一样, 我们使之简单而充满乐趣.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like many of our cameras, you can also add control keys, or reassign them to other keys, such as keys 'w', 'a', 's', and 'd'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T120836Z" creationid="aceway" creationdate="20170205T120836Z">
        <seg>我们许多相机都可以添加控制键，或者重新分配别的控制键，诸如'w', 'a', 's', 和 'd'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure you close the script, body, and html elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T065642Z" creationid="aceway@qq.com" creationdate="20160429T065642Z">
        <seg>请确保你已经使HTML的script, body, 和 html标签元素闭合.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many of the powerful properties and methods found on our familiar FreeCamera... are also found on our GamepadCamera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T133253Z" creationid="aceway" creationdate="20170206T133253Z">
        <seg>我们熟悉的自由相机的许多强有力属性和方法都可以在手持相机上找到.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many parameters here:
* _Name_
* _Height map picture url_
* Size of this mesh: 
* &gt; _Width_
* &gt; _Height_
* _Number of subdivisions_: increase the complexity of this mesh in order to improve the visual quality of it:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T100750Z" creationid="aceway" creationdate="20170204T100605Z">
        <seg>此处有许多参数:
* _名字_
* _高度图图片地址_
* 网格大小: 
* &gt; _宽度_
* &gt; _高度_
* _细分数目_: 会增加网格的复杂性, 以提高其视觉效果:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Materials
---
## Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T121134Z" creationid="aceway" creationdate="20160508T121134Z">
        <seg>材质
---
## 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Maybe now you want to build an Animation for box1.scaling.y, and really get box1 moving playfully.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T105655Z" creationid="aceway" creationdate="20160402T105655Z">
        <seg>现在你也许希望在y轴上缩放box1, 而且实时移动box1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Means it will not be computed if detached === true)
    "properties": array of properties, (see below)
    "children": array of Actions,
    "combine": array of Actions (used as a combine action.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T090936Z" creationid="aceway@qq.com" creationdate="20160427T090936Z">
        <seg>如果detached === true意味着不会被计算)
    "properties": array of properties, (见下面)
    "children": array of Actions,
    "combine": array of Actions (用于组合动画.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More about that... a bit further along.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T135411Z" creationid="aceway" creationdate="20170207T135411Z">
        <seg>信息量比那还多... 走得更远一点.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More info about rendering groups and rendering order can be found [here](http://doc.babylonjs.com/tutorials/Transparency_and_How_Meshes_Are_Rendered).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T043501Z" creationid="aceway" creationdate="20170204T043501Z">
        <seg>关于渲染组和渲染顺序的更多信息可以在[这儿](http://doc.babylonjs.com/tutorials/Transparency_and_How_Meshes_Are_Rendered)找到.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More information about materials can be found by reading [**Unleash the StandardMaterial**](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/01/babylon-js-unleash-the-standardmaterial-for-your-babylon-js-game.aspx) and also [**Advanced Texturing**](http://doc.babylonjs.com/tutorials/Advanced_Texturing).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T140148Z" creationid="aceway" creationdate="20160522T140148Z">
        <seg>关于材质的更多信息, 可以通过阅读[**释放标准材质**](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/01/babylon-js-unleash-the-standardmaterial-for-your-babylon-js-game.aspx) 和 [**高级纹理**](http://doc.babylonjs.com/tutorials/Advanced_Texturing)找到.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More will be written about that, soon, and nearby.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T132837Z" creationid="aceway" creationdate="20170206T132837Z">
        <seg>关于那很快会写更多内容的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most Babylon.js experts use a two-step process to activate and attach a camera:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T141959Z" creationid="aceway" creationdate="20170207T141735Z">
        <seg>大多Babylon.js老鸟以两步走的方式使用相机：激活相机，挂载相机:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most important, though, is the Babylon.js framework, our pride and joy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T133717Z" creationid="aceway" creationdate="20160403T133717Z">
        <seg>最重要是 Babylon.js 框架, 我们的骄傲与荣幸.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Much information is in the parameters:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T054024Z" creationid="aceway@qq.com" creationdate="20160331T014205Z">
        <seg>更多信息在参数里：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Much of its power comes from hand.js.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T130256Z" creationid="aceway" creationdate="20170206T130256Z">
        <seg>它的强大力多源于hand.js.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Neither Visual Studio nor Git like to create the project/repo in a non empty directory, which is a problem for us because we want the Visual Studio project to be in the root directory of the repo.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T095157Z" creationid="aceway@qq.com" creationdate="20160427T095157Z">
        <seg>Visual Studio或Git都不会在一个非空目录下创建工程/仓库, 这对我们来说是个问题，因为我们希望该Visual Studio工程位于仓库的根目录.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next in the Playpen Series - [**Basic elements**](http://doc.babylonjs.com/tutorials/Discover_Basic_Elements)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160429T141435Z" creationid="aceway" creationdate="20160429T141435Z">
        <seg>在下篇等练笔系列里 - [**基础元素**](http://doc.babylonjs.com/tutorials/Discover_Basic_Elements)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next, imagine another series of successive points, so another path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T102314Z" creationid="aceway" creationdate="20160507T102314Z">
        <seg>接下来，想象另一系列连续点，定义的一条路径.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next, two important steps:
* Adding the animation array to the animation object:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T085505Z" creationid="aceway@qq.com" creationdate="20160331T085505Z">
        <seg>紧接着，最重要的两步：
* 将存有动画信息的数组添加到动画对象上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next, we apply our special sky texture to it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T025504Z" creationid="aceway" creationdate="20170204T025504Z">
        <seg>然后,我们将特殊的天空纹理应用到盒子上去.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next, we go inside the ```&lt;body&gt;``` part of the web page... and add a HTML5 canvas element, which will be used to draw our scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T034318Z" creationid="aceway" creationdate="20160428T145930Z">
        <seg>下一步，我们进入页面的 ```&lt;body&gt;``` 内部... 然后添加一个HTML5 画布元素, 我们将用它来绘制我们的场景.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next, we set the `infiniteDistance` property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T025131Z" creationid="aceway" creationdate="20170204T025131Z">
        <seg>接下来,我们设置`infiniteDistance` 属性.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next, you have to define which shadows will be rendered.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T104639Z" creationid="aceway" creationdate="20170204T104639Z">
        <seg>接下来,你需要定义渲染哪个的阴影.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not a bit of extra work for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T052844Z" creationid="aceway@qq.com" creationdate="20170207T052844Z">
        <seg>你不需做其它额外的工作.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice how it is used in the registerBeforeRender function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T095258Z" creationid="aceway" creationdate="20170131T095258Z">
        <seg>注意在registerBeforeRender函数中是如何使用它的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice the [ and ].</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T141804Z" creationid="aceway" creationdate="20160503T141626Z">
        <seg>注意 [ 和 ].</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice the button that is currently labeled **Basic Scene**.&amp;nbsp; (It is actually called the Scene Selector button, but it is currently LABELED 'Basic Scene')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T150155Z" creationid="aceway" creationdate="20160404T150155Z">
        <seg>注意当前标注了 **基础场景**的按钮.&amp;nbsp; (实际上它叫做场景选择按钮, 只是当前标上了'基础场景').</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice the line:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T094356Z" creationid="aceway" creationdate="20170131T094356Z">
        <seg>注意那行:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now display all files in the solutions by clicking the "Show All Files" button to include the ones we care about.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T100535Z" creationid="aceway@qq.com" creationdate="20160427T100535Z">
        <seg>现在在解决方案里点击"显示所有文件" 按钮，然后选择我们关心的包含进来.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now for the good stuff.&amp;nbsp; Every createScene() (every scene)... in Babylon.js... generally REQUIRES three things.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160410T135954Z" creationid="aceway" creationdate="20160410T135954Z">
        <seg>现在来讲干货stuff.&amp;nbsp; 在Babylon.js里每次 createScene()调用 (也就是每个场景)通常需要三件事情:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now let's learn more about positions (sometimes called translations) as well as about rotation and scaling.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T125850Z" creationid="aceway" creationdate="20160507T125850Z">
        <seg>现在,我们进一步的学习定位(有时叫做平移) 还有旋转和缩放.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now let's look at a Vector3 being used to set a .rotation value:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T140337Z" creationid="aceway" creationdate="20160421T140337Z">
        <seg>现在让我们可个使用Vector3来设置旋转值的例子:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now let's see a Vector3 used for scaling (stretching and shrinking) a mesh:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T142448Z" creationid="aceway" creationdate="20160421T142448Z">
        <seg>现在让我看看使用Vector3设置缩放(拉伸和缩减)一个网格:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now let’s see this powerful function named “CreateGroundFromHeightMap”:
```javascript
var ground = BABYLON.Mesh.CreateGroundFromHeightMap("ground", "worldHeightMap.jpg", 200, 200, 250, 0, 10, scene, false, successCallback);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T100511Z" creationid="aceway" creationdate="20170204T100511Z">
        <seg>现在让我们看看这个名为“CreateGroundFromHeightMap”的强大函数:
```javascript
var ground = BABYLON.Mesh.CreateGroundFromHeightMap("ground", "worldHeightMap.jpg", 200, 200, 250, 0, 10, scene, false, successCallback);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that we have our Animation object, it is time to say how those values will be modified.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T083112Z" creationid="aceway@qq.com" creationdate="20160331T083112Z">
        <seg>现在我们已经有动画对象了，可以谈论如何修改那些值了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that we have our manager, we can create instances of our sprite linked to this manager.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170123T011805Z" creationid="aceway@qq.com" creationdate="20170123T011805Z">
        <seg>现在我们已经有了管理器，我们可以创建精灵并将其关联到该管理器上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that you can create different basic mesh elements anywhere in the scene, we are going to give those meshes some materials, to define how those mesh look.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T121352Z" creationid="aceway" creationdate="20160508T121352Z">
        <seg>现在,你可以在场景的任意地方创建不同的基础网格元素, 我们将为这些网格赋予些材质, 以定义这些网格的外观.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we have all the data we need to build our scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T094436Z" creationid="aceway" creationdate="20170130T094436Z">
        <seg>现在我们已经有了创建场景的所有数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we load our framework files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T145722Z" creationid="aceway" creationdate="20160428T145722Z">
        <seg>现在加载我们的框架文件.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we must remove all light reflections on our box (the sun doesn't reflect on the sky!):
```javascript
skyboxMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);
skyboxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T025417Z" creationid="aceway" creationdate="20170204T025417Z">
        <seg>现在我们必须删除天空盒的所有反射光(天空不会反射出太阳!):
```javascript
skyboxMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);
skyboxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you are ready to go further and learn how to create more elements like spheres, cylinders, boxes, etc.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160429T141347Z" creationid="aceway" creationdate="20160429T141159Z">
        <seg>现在你可以进一步的学习如何创建更多的元素,像 球体, 圆柱体, 盒子, 等等.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you can bookmark that unique URL, and then visit the Babylon.js forum at:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T094332Z" creationid="aceway" creationdate="20160404T094332Z">
        <seg>现在你可以用书签纪录下那个唯一的网址, 然后去访问 Babylon.js 论坛:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you have seen all of our basic elements, and some ways to use them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T124249Z" creationid="aceway" creationdate="20160507T124249Z">
        <seg>现在你已经看了我们所有的基础元素, 同时看了它们的一些使用方法.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you know how to create a complete simple dynamic scene and it is going to be important to talk about [collisions](http://doc.babylonjs.com/tutorials/Intersect_Collisions_-_mesh).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T125207Z" creationid="aceway" creationdate="20170129T125207Z">
        <seg>现在你知道如何创建一个完整简约的动态场景，而且它对于即将讨论[碰撞](http://doc.babylonjs.com/tutorials/Intersect_Collisions_-_mesh)非常重要.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you might want to visit [**the playground scene**](http://babylonjs-playground.azurewebsites.net/?15) for this tutorial.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T130834Z" creationid="aceway" creationdate="20170204T130834Z">
        <seg>现在你可能想访问为本教程准备的 [**娱乐场景**](http://babylonjs-playground.azurewebsites.net/?15).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you should know everything about collisions, so it’s time to move on to a classic effect in 3D : [particles](http://doc.babylonjs.com/tutorials/Particles).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T022611Z" creationid="aceway" creationdate="20170130T092913Z">
        <seg>现在已经知道碰撞检测的所有技能了，所有是时候去瞧瞧经典的三维效果如何了: [粒子](http://doc.babylonjs.com/tutorials/Particles).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you should see your particle system working.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T072532Z" creationid="aceway" creationdate="20170131T072532Z">
        <seg>现在你应该看到你的粒子系统工作了.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, if you construct triangular faces by joining alternate points of the first and the second path, like when you lace shoes, you get a ribbon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T103101Z" creationid="aceway" creationdate="20160507T102759Z">
        <seg>现在, 如果你在第一条路径和第二条路径上互相间隔着连接点来构建三角形, 就像你系鞋带的方式, 你就会得到一个板带.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, imagine, instead of having only two paths, you've got many successive different paths.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T103229Z" creationid="aceway" creationdate="20160507T103229Z">
        <seg>现在, 想象一下, 不是两条路径, 你定义了许多连续的不同路径.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, just change the _sideOrientation_ parameter in your mesh constructor... to _BABYLON.Mesh.BACKSIDE_.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T120401Z" creationid="aceway" creationdate="20160507T120401Z">
        <seg>现在, 在你的网格构造函数里仅仅改变 _朝向_ 参数为 _BABYLON.Mesh.BACKSIDE_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, we make the jump from HTML5 into Javascript.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T034402Z" creationid="aceway@qq.com" creationdate="20160429T034352Z">
        <seg>现在, 我们从HTML5跳进Javascript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, we must create a new (not-rendered) ParticleSystem object:
```javascript
var particleSystem = new BABYLON.ParticleSystem("particles", 2000, scene, customEffect);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T030153Z" creationid="aceway" creationdate="20170131T030153Z">
        <seg>现在，我们必须创建一个新的(未渲染的)粒子系统对象:
```javascript
var particleSystem = new BABYLON.ParticleSystem("particles", 2000, scene, customEffect);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, your camera is going to fall on the y-axis until it collides with the ground.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T040452Z" creationid="aceway" creationdate="20170130T040452Z">
        <seg>现在，你的相机会沿Y轴下落直到和地面发生碰撞.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nowadays, sprites are often used to display animated characters, and for particles, and to simulate 3D complex objects like trees.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170122T105513Z" creationid="aceway" creationdate="20170122T105513Z">
        <seg>如今，精灵往往用于显示动画角色，粒子效果，以及模拟复杂的三维对象，比如树木。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Null if no hit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T094406Z" creationid="aceway" creationdate="20170130T094406Z">
        <seg>如果没命中则为null.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objects are everywhere, but they are good friends that help us stay organized.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160421T103458Z" creationid="aceway@qq.com" creationdate="20160421T103458Z">
        <seg>对象无处不在, 然而它是我们组织管理存储内容的好助手.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often, the **Save** button is used so that you may share the scene's URL with others, or to allow you to bookmark the saved URL in your browser, and return to continue your 'play' at another time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160425T143514Z" creationid="aceway" creationdate="20160425T143514Z">
        <seg>通常, **保存**按钮用在你要和其他人分享你的场景网址时, 或者用在你要将场景作为书签保存到浏览器里时, 这样你可以可以回来继续工作.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ok, let's create a GamepadCamera:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T133018Z" creationid="aceway" creationdate="20170206T133018Z">
        <seg>好吧，让我们创建一个手持相机:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once the event is raised, use the function “pick” to get some powerful information about the relation between your click and your scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T093647Z" creationid="aceway" creationdate="20170130T093647Z">
        <seg>当事件一旦抛出, 使用函数“pick”获取些强有力的信息---点击和场景的关系.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you are wearing your 3D glasses, you might want to experiment with this float value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T134332Z" creationid="aceway" creationdate="20170207T133747Z">
        <seg>一旦你带上3D眼镜，你就会想进入该虚无飘渺之境体验下.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you have created this basic scene, continue reading to learn how to check collisions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T084603Z" creationid="aceway" creationdate="20170130T084603Z">
        <seg>当你你创建了这个基础的场景后，请继续阅读以学习更多的碰撞检测知识.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you have that folder made, you can use the 4 links shown below... to get copies of The Big 4... and put each of them into your js folder.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T082252Z" creationid="aceway" creationdate="20160423T082252Z">
        <seg>一旦你准备好那个文件夹, 你可以使用下面显示的4个链接... 获取4大资源拷贝... 然后将它们各自放入你的文件夹.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you have those external includes saved into your new js folder, you need to make some adjustments to the HTML.&amp;nbsp; In your index.html file, you will need to change the .src attributes of all four external includes (the first four SCRIPT elements).&amp;nbsp; Likely, you will want to make your SCRIPT elements look like this:
``` html
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;script src="./js/hand.minified-1.2.js"&gt;&lt;/script&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;script src="./js/cannon.js"&gt;&lt;/script&gt;&amp;nbsp; &lt;!-- optional --&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;script src="./js/oimo.js"&gt;&lt;/script&gt;&amp;nbsp; &lt;!-- optional --&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;script src="./js/babylon.js"&gt;&lt;/script&gt;
```
If you are not using physics in your scene, you might want to remark-out (disable) the script elements that include-in cannon.js and oimo.js.&amp;nbsp; To do that, you could do this:
``` html
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;script src="./js/hand.minified-1.2.js"&gt;&lt;/script&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;!-- &lt;script src="./js/cannon.js"&gt;&lt;/script&gt; --&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;!-- &lt;script src="./js/oimo.js"&gt;&lt;/script&gt; --&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;script src="./js/babylon.js"&gt;&lt;/script&gt;
```
Easy.&amp;nbsp; Most of these things you already know, don't you?&amp;nbsp; I thought so.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T085103Z" creationid="aceway" creationdate="20160423T085103Z">
        <seg>一旦你将那些外部资源保存到你的新js文件夹, 你就需要调整下你的页面HTML内容.&amp;nbsp; 在你的index.html文件里, 你需要改变4个外部包含(那4个SCRIPT元素)的.src属性内容.&amp;nbsp; 可能, 你想让你的SCRIPT元素看起来像这样子:
``` html
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;script src="./js/hand.minified-1.2.js"&gt;&lt;/script&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;script src="./js/cannon.js"&gt;&lt;/script&gt;&amp;nbsp; &lt;!-- 可选项 --&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;script src="./js/oimo.js"&gt;&lt;/script&gt;&amp;nbsp; &lt;!-- 可选项 --&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;script src="./js/babylon.js"&gt;&lt;/script&gt;
```
如果你在场景里不使用物理特性, 你可能会标注掉(禁用)包含cannon.js 和 oimo.js脚本的元素 .&amp;nbsp; 为了实现它, 你可以这样做:
``` html
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;script src="./js/hand.minified-1.2.js"&gt;&lt;/script&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;!-- &lt;script src="./js/cannon.js"&gt;&lt;/script&gt; --&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;!-- &lt;script src="./js/oimo.js"&gt;&lt;/script&gt; --&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;script src="./js/babylon.js"&gt;&lt;/script&gt;
```
简单吧.&amp;nbsp; 大部分内容你都已经知道了, 难道你还没么?&amp;nbsp; 我想你会了.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you have those previous settings completed, our final step is to declare that we are interested in sensing collisions in our scene:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T040023Z" creationid="aceway" creationdate="20170130T040023Z">
        <seg>一旦你完成前面的设置，我们最后一步便是声明我们的场景对碰撞检测感兴趣:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you understand mouse pick events, you can begin using that functionality to advance your application’s development.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T022417Z" creationid="aceway" creationdate="20170131T022417Z">
        <seg>一旦你理解了鼠标拾取事件，你就可以使用它们优化你的应用程序开发.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One more important thing you need to know is [how to create shadows](http://doc.babylonjs.com/tutorials/Shadows).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T103406Z" creationid="aceway" creationdate="20170204T103406Z">
        <seg>一个更重要的事情你需要知道: [如何创建阴影](http://doc.babylonjs.com/tutorials/Shadows).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the advantages of sprites is animations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T121636Z" creationid="aceway" creationdate="20170129T121636Z">
        <seg>使用精灵的优势之一是利用它们的动画功能.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the many properties on a StandardMaterial object... is named .diffuseColor.&amp;nbsp; That property is the primary way to set a basic color.&amp;nbsp; And right here... is where we use our new Color3 value.&amp;nbsp; Let's have a look:
``` javascript
myMaterial.diffuseColor = new BABYLON.Color3(0, 0.5, 0);
```
Our box is now colored medium green.&amp;nbsp; It's just that easy.&amp;nbsp; The StandardMaterial object has many other properties on it.&amp;nbsp; You can add color to properties such as&amp;nbsp; .specularColor, .emissiveColor, .ambientColor.&amp;nbsp; All those properties are set (if you choose)... using our friend... the Babylon.js Color3 value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160422T150009Z" creationid="aceway" creationdate="20160422T150009Z">
        <seg>在标准材质对象的众多属性中,有个叫作漫反射颜色(.diffuseColor).&amp;nbsp; 那个属性是设置基础颜色的主要途径.&amp;nbsp; 此处... 我们使用新分配的 Color3值来设置.&amp;nbsp; 让们看看代码:
``` javascript
myMaterial.diffuseColor = new BABYLON.Color3(0, 0.5, 0);
`
我们的盒子现在是种绿色了.&amp;nbsp; 就是那么简单.&amp;nbsp; 标准材质对象有许多其它的属性.&amp;nbsp; 你可以给诸如&amp;nbsp;镜面光颜色( .specularColor), 放射光颜色(.emissiveColor), 环境光颜色(.ambientColor)等属性天假颜色.&amp;nbsp; 所有这些属性都使用(如果你选择这样做)Babylon.js的三元色(Color3)值来设置.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only point, directional and spot lights can cast shadows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T130303Z" creationid="aceway" creationdate="20170204T125536Z">
        <seg>仅点光源,定向光源和聚光灯光源能够投影:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Open that link in a new tab or window, and then come back here, and we'll get started.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T130627Z" creationid="aceway" creationdate="20160503T130627Z">
        <seg>在新标签页或窗口中打开那个链接, 然后返回此处, 我们马上开始.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or, you can use a texture:
```javascript
materialSphere1.diffuseTexture = new BABYLON.Texture("grass.png", scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T125400Z" creationid="aceway" creationdate="20160508T125400Z">
        <seg>或者, 你可以使用纹理:
```javascript
materialSphere1.diffuseTexture = new BABYLON.Texture("grass.png", scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or, you can use a texture:
```javascript
materialSphere1.emissiveTexture = new BABYLON.Texture("grass.png", scene);
```
See the **More About Textures** section above.  Change occurrences of 'diffuse' to 'emissive', of course.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T150045Z" creationid="aceway" creationdate="20160521T145649Z">
        <seg>或者, 你可以使用一个纹理:
```javascript
materialSphere1.emissiveTexture = new BABYLON.Texture("grass.png", scene);
```
参见上面的 **更多关于纹理** 一节.  当然, 要修改修改那个 'diffuse' 为 'emissive'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our [**Playground Demo Scene 01**](http://www.babylonjs-playground.com/?1) uses a CreateGround constructor... so you can see one in action by using the above link.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T122233Z" creationid="aceway" creationdate="20160507T122233Z">
        <seg>我们的 [**娱乐场演示场景01**](http://www.babylonjs-playground.com/?1)使用了一个CreateGround构造函数... 所以你可以使用上面的链接来看看它的行为.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our [home menu for our wiki](http://doc.babylonjs.com/) is your portal to many advanced topics.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T131309Z" creationid="aceway" creationdate="20170204T131309Z">
        <seg>我们的[维基主页菜单](http://doc.babylonjs.com/) 是你获取许多高级话题门户网站.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our emitter is the center of particles source, but if you want your particles to emit from more than one point, then you can tell it to do so:
```javascript
particleSystem.minEmitBox = new BABYLON.Vector3(-1, 0, 0); // Starting all From</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T072910Z" creationid="aceway" creationdate="20170131T072910Z">
        <seg>我们的发射器时粒子源的中心，但是如果你希望粒子从不同的点发射，那么你可以告诉它这也做：
```javascript
particleSystem.minEmitBox = new BABYLON.Vector3(-1, 0, 0); // Starting all From</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our goal: move this “box1”.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T054015Z" creationid="aceway@qq.com" creationdate="20160331T014128Z">
        <seg>我们的目标是：移动这个"box1"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our particle texture is going to be this one:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T031150Z" creationid="aceway" creationdate="20170131T031150Z">
        <seg>我们的粒子纹理将是这样的:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parameters are: name, height, diamTop, diamBottom, tessellation, heightSubdivs, scene, updatable and the optional side orientation (see below).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T140453Z" creationid="aceway" creationdate="20160503T140201Z">
        <seg>参数为: 名称, 高度, 顶直径, 底直径, 边数, 高向细分度, 场景, 可更新否和可选的朝向(参见下面).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parameters are: name, pathArray, closeArray, closePath, offset, scene, updatable?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T104911Z" creationid="aceway" creationdate="20160507T103658Z">
        <seg>参数为: 名称, 路径数组, 闭合数组, 闭合路径, 偏移量, 场景, 可更新否?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parameters are: name, size, and scene to attach the mesh, updatable?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T131851Z" creationid="aceway" creationdate="20160503T131851Z">
        <seg>参数为: 名字, 大小, 和将被放到的场景, 是否可更新?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parameters are: name, width, depth, subdivs, scene</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T122126Z" creationid="aceway" creationdate="20160507T122126Z">
        <seg>参数为: 名称, 宽度, 纵深, 子分段数, 场景</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parameters are: name, xmin, zmin, xmax, zmax, subdivisions = the number of tiles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T123355Z" creationid="aceway" creationdate="20160507T123150Z">
        <seg>参数为: 名称, 最小x值, 最小z值, 最大x值, 最大z, 细分数量 = 瓦片数量.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Params: name, subdivisions, size, scene</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T035958Z" creationid="aceway@qq.com" creationdate="20160429T035958Z">
        <seg>参数:名称, 细分度, 大小, 场景</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Params: name, width, depth, subdivisions, scene</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T040133Z" creationid="aceway@qq.com" creationdate="20160429T040133Z">
        <seg>参数: 名称, 宽度, 深度, 细分度, 场景</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Particles
---
## Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T022626Z" creationid="aceway" creationdate="20170131T022626Z">
        <seg>粒子
---
## 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Particles are often small sprites used to simulate hard-to-reproduce phenomena like fire, smoke, water, or abstract visual effects like magic glitter and faery dust.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T023135Z" creationid="aceway" creationdate="20170131T023135Z">
        <seg>粒子通常时许多小的精灵，被用来模拟难以再现的现象，比如火，烟，水，或者抽象的视觉效果，比如魔法闪光和神奇灰尘。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Paths are also arrays, populated with series of successive _Vector3_.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T104015Z" creationid="aceway" creationdate="20160507T104015Z">
        <seg>路径也是数组, 由一系列连续点 _三元向量_ 填充.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Picking Collisions
---
## Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T092017Z" creationid="aceway" creationdate="20170130T092003Z">
        <seg>拾取碰触
---
## 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please credit the author if you can!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T040930Z" creationid="aceway@qq.com" creationdate="20160427T040930Z">
        <seg>如果可以的话，请给与信任原作者!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please do not use it in production environment as the file size is really important (more than 1.5 MB).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T070904Z" creationid="aceway@qq.com" creationdate="20160427T070904Z">
        <seg>请不要将它用在生产环境，因为文件大小是需要考虑的重要因素 (超过1.5 MB).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please find here pictures of various filters used with a spot light:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T123116Z" creationid="aceway" creationdate="20170204T123116Z">
        <seg>请在这里寻找一个聚光灯情况下各种过滤器的图片:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please make your array of vectors be formatted similarly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T142319Z" creationid="aceway" creationdate="20160503T142319Z">
        <seg>请按照个格式组织向量数组.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please note that a parent mesh must be described before their children nodes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T084622Z" creationid="aceway@qq.com" creationdate="20160427T084622Z">
        <seg>请注意，父网格的描述必须在其子节点出现之前。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please note that the pickResult object can provide you with additional information, detailed below:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T095354Z" creationid="aceway" creationdate="20170130T095354Z">
        <seg>请注意pickResult对象能够提供额外的信息，详细如下:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please see our [**HeightMap Tutorial**](http://doc.babylonjs.com/tutorials/Height_Map) to learn all about heightMap grounds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T122945Z" creationid="aceway" creationdate="20160507T122945Z">
        <seg>请看我们的[**高度图教程**](http://doc.babylonjs.com/tutorials/Height_Map) 以学习所有的高度图地面知识.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please see the [FreeCamera API page](http://doc.babylonjs.com/classes/FreeCamera) for more information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T133353Z" creationid="aceway" creationdate="20170205T133353Z">
        <seg>请参见[自由相机API页面](http://doc.babylonjs.com/classes/FreeCamera) for more information.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please see the  [ArcRotateCamera API page](http://doc.babylonjs.com/classes/ArcRotateCamera) for more information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T045814Z" creationid="aceway@qq.com" creationdate="20170206T045814Z">
        <seg>请查看 [弧形旋转相机API页面](http://doc.babylonjs.com/classes/ArcRotateCamera) for more information.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plug a Xbox controller into your PC and you’ll be able to navigate most of our demos, using it, for instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T141342Z" creationid="aceway" creationdate="20170207T141342Z">
        <seg>将一个Xbox控制器接入你的PC，然后你就可以傲游大多数的演示了, 用用吧.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Possible uses include:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T021836Z" creationid="aceway" creationdate="20170131T021836Z">
        <seg>可能的用处包括:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Press the playground's **RUN** button and see if it works.&amp;nbsp; If it does not work, you can do some changes in the editor window, and hit **RUN** again... and again, and again.&amp;nbsp; Experiment with it there, and if you still cannot get it to work, you can press the **SAVE** button.&amp;nbsp; When you do that, the playground will give your scene a unique URL.&amp;nbsp; It will look something like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160404T074453Z">
        <seg>按下娱乐场的**运行**按钮,看看它是否有效.&amp;nbsp; 如果不正常, 你可以在编辑窗口里做些修改, 然后再次点击 **运行** ... 如此不断调整.&amp;nbsp; 尝试下, 如果你你仍然不能使它有效运行, 你可以按下 **保存** 按钮.&amp;nbsp; 之后会为你的场景生成一个唯一的网址.&amp;nbsp; 看起来就像这个样子:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Properties store values.&amp;nbsp; These values are used by the Babylon.js framework... to 'render' the scene.&amp;nbsp; Here is an example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T150014Z" creationid="aceway" creationdate="20160418T150014Z">
        <seg>属性是存储着的值.&amp;nbsp; 这些纸被Babylon.js框架使用... 用于 '渲染(render)' 场景.&amp;nbsp; 这是个例子:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Random direction of each particle after it has been emitted, between direction1 and direction2 vectors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T075503Z" creationid="aceway" creationdate="20170131T075503Z">
        <seg>粒子发射后其方向随机介于方向1和方向2之间.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read [customizing camera inputs](http://doc.babylonjs.com/tutorials/Customizing_Camera_Inputs) to learn more about tweaking inputs on your cameras.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T143040Z" creationid="aceway" creationdate="20170207T143040Z">
        <seg>请阅读[自定义相机输入](http://doc.babylonjs.com/tutorials/Customizing_Camera_Inputs)，以学习更多的为相机调整输入机制.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ready?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T125902Z" creationid="aceway" creationdate="20160507T125902Z">
        <seg>准备好了吗?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember 'The Big Picture' far above?&amp;nbsp; In that section, I introduced you to 'The Big 4' external include files...&amp;nbsp; hand.js, cannon.js, oimo.js, and babylon.js.&amp;nbsp; Many people use GitHub version-management systems to download those files from the Babylon.js GitHub source code repository.&amp;nbsp; Some people make their own 'minified' versions of Babylon.js... using the absolute latest source code files.&amp;nbsp; Others like to be able to grab reasonably fresh versions of The Big 4... in simpler ways.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T081200Z" creationid="aceway" creationdate="20160423T081200Z">
        <seg>还记得上面的'大图片'么?&amp;nbsp; 在那个段中, 我给你介绍了包含的'四大'外部文件资源...&amp;nbsp; hand.js, cannon.js, oimo.js, 和 babylon.js.&amp;nbsp; 许多人通过GitHub版本管理系统从Babylon.js的GitHub源代码仓库下载这些文件.&amp;nbsp; 有些人使用最新的源代码文件创建自己的 '缩小'版Babylon.js&amp;nbsp; 其他人则喜欢通过网络抓取的简单方式获取合适的新版四大文件资源.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember that (u, v) coordinates refer to the following axis:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T130643Z" creationid="aceway" creationdate="20160508T130643Z">
        <seg>请记住 (u, v) 坐标参考下面轴:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember that link, as we will talk more about it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T130226Z" creationid="aceway" creationdate="20160503T130226Z">
        <seg>记住那个链接, 因为我们将更多的谈论到它.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Same reason : the default side orientation is still _FRONTSIDE_.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T120049Z" creationid="aceway" creationdate="20160507T120049Z">
        <seg>同样的原因: 默认的朝向仍然是 _FRONTSIDE_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Save and reload the project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T101710Z" creationid="aceway@qq.com" creationdate="20160427T101710Z">
        <seg>保存然后重新加载工程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Save your file (in the same folder as babylon.js, hand.js, and cannon.js) and browse it with your WebGL-ready browser.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T071748Z" creationid="aceway@qq.com" creationdate="20160429T071748Z">
        <seg>保存你的文件(在babylon.js, hand.js, 和cannon.js文件同一文件夹下)然后用已经支持WebGL的浏览器查看.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the 'createScene' function in the left-side code editing window?&amp;nbsp; Does it look familiar?&amp;nbsp; It is the very same code from the purple section of the big picture (but with a couple of word-wrapped lines).&amp;nbsp; Now you can see why the createScene function is an important section.&amp;nbsp; It is somewhat portable.&amp;nbsp; You can copy createScene functions to/from the playground editor, and to/from your home scene files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T034539Z" creationid="aceway" creationdate="20160404T034539Z">
        <seg>看到左边代码窗口里的 'createScene' 函数里么?&amp;nbsp; 看起来熟悉吧?&amp;nbsp; 它是和大图片里的紫色部分非常像的代码(只是多了些换行).&amp;nbsp; 现在你该清楚了为什么那个 createScene 函数是一个重要的部分.&amp;nbsp; 它是有一定可移植性的.&amp;nbsp; 你能够在 createScene 函数和你本地的场景文件之间将代码拷来拷去.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See you soon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T143635Z" creationid="aceway" creationdate="20170207T143635Z">
        <seg>很快再见面的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See you there.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T131450Z" creationid="aceway" creationdate="20170204T131450Z">
        <seg>稍后见.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting it to false will set the collision to the regular collision calculation as it always was.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T050739Z" creationid="aceway" creationdate="20170130T050739Z">
        <seg>设置为false将使它为常规的碰撞检测计算.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shadows
---
## Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T103518Z" creationid="aceway" creationdate="20170204T103518Z">
        <seg>阴影
---
## 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shadows are easy to generate using the babylon.js “ShadowGenerator”.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T103739Z" creationid="aceway" creationdate="20170204T103739Z">
        <seg>使用babylon.js的“ShadowGenerator”创建阴影很容易.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shadows are now becoming dynamic, and they are now dynamically generated depending upon a light.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T103700Z" creationid="aceway" creationdate="20170204T103700Z">
        <seg>阴影现在已经时动态的,而且时根据一个光源动态的生成.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shadows will give your scene a beautiful rendering effect, so don't forget about them!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T103505Z" creationid="aceway" creationdate="20170204T103429Z">
        <seg>阴影会给你场景漂亮的渲染效果, 所以不要忘记它们!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simple.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T030226Z" creationid="aceway" creationdate="20170131T030210Z">
        <seg>简单吧.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply put, “back-face culling” determines whether or not a StandardMaterial is visible from its back side (from behind).  TRUE = NOT visible.  More precisely, this rendering-speed-optimization technique determines if a polygon of a graphical object is visible or not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T134744Z" creationid="aceway" creationdate="20160522T134744Z">
        <seg>简单的说, “背面剔除”决定了一个标准材质从背面看时是否可见.  设置TRUE = NOT 可见.  更确切的说, 这个渲染速度优化的技术决定了一个图形对象上的多边形是否可见.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply stated, this is how you change the background color of the scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T105330Z" creationid="aceway" creationdate="20170131T105330Z">
        <seg>简单的说，这是你改变场景背景色的方式.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So far, you only have some grey-colored meshes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T122820Z" creationid="aceway" creationdate="20160508T122820Z">
        <seg>到目前为止, 你只有些灰色的网格.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So let's get rolling with an omni-directional PointLight and an orbiting ArcRotateCamera.  After that, we'll start making some basic mesh elements to test our materials upon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T122557Z" creationid="aceway" creationdate="20160508T122557Z">
        <seg>所以让我们开始摆弄一个全方位点光光源和一个有轨弧形旋转相机.  之后, 我们将开始制作些基础网格元素以便在其上测试我们的材质.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So now, add this entire createScene function to your web page:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T034958Z" creationid="aceway@qq.com" creationdate="20160429T034958Z">
        <seg>所以现在，将这里整个createScene函数添加到你的网页里:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So once you have set your arcCamera as the scene.activeCamera (see further below), you can send your ArcRotateCamera gently orbiting around your target... by putting this simple line of Javascript into the render loop of your scene:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T045656Z" creationid="aceway@qq.com" creationdate="20170206T045656Z">
        <seg>所以一旦你将弧形旋转相机设置为场景的激活相机 (请往后看更多), 你就可以将弧形旋转相机围绕目标运转... 把下面一行Javascript代码放到场景的渲染循环中即可:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So pay attention to the location/rotation of this object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T025853Z" creationid="aceway" creationdate="20170131T025853Z">
        <seg>因此注意盒子对象的位置和运转。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So think about the collisions details you need before to choose.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T090259Z" creationid="aceway" creationdate="20170130T090259Z">
        <seg>因此，当你选择碰撞检测方式是请考虑对碰撞细节的要求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So we are going to create the Visual Studio project in a directory inside the repo, then move it one level up.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T095301Z" creationid="aceway@qq.com" creationdate="20160427T095301Z">
        <seg>所以我们见在仓库的子目录里创建Visual Studio工程，然后把它移动到上层.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So we call these meshes "Parametric Shapes".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T132344Z" creationid="aceway" creationdate="20170204T132214Z">
        <seg>所以我们称这些网格为"参数化造型".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So why not always use _BABYLON.Mesh.DOUBLESIDE_ by default ?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T121120Z" creationid="aceway" creationdate="20160507T121120Z">
        <seg>那么为何不总是用 _BABYLON.Mesh.DOUBLESIDE_ 作为默认值 ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, in our next environment tutorial, we are going to transform your flat ground into beautiful mountains.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T095914Z" creationid="aceway" creationdate="20170204T045430Z">
        <seg>因此,在我们下一个环境教程里, 我们将把你平坦的地面变成漂亮的山峰.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, the whiter the pixel is, the taller your mountain will be.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T095715Z" creationid="aceway" creationdate="20170204T095715Z">
        <seg>因此,像素越白,则你的山峰会越高.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, to avoid that kind of situation, we can constrain the camera movement:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T102441Z" creationid="aceway" creationdate="20170204T102441Z">
        <seg>因此,为了避免这种情况,我们可以约束相机的运动:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, we won't talk about that, here.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T130506Z" creationid="aceway" creationdate="20160503T130506Z">
        <seg>因此, 我们不在谈论它了.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T083415Z" creationid="aceway@qq.com" creationdate="20160331T083415Z">
        <seg>如此:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some of the common Javascript objects used in a Babylon.js scene... are named **engine, scene, canvas, mesh, light, camera, Vector3, Color3, ActionManager, and Animation**.&amp;nbsp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T144108Z" creationid="aceway" creationdate="20160418T144108Z">
        <seg>Javascript 对象里的一些常见对象在 Babylon.js 场景里有使用... 它们叫做 **引擎(engine), 场景(scene), 花布(canvas), 网格(mesh), 灯光(light), 相机(camera), 三元向量(Vector3), 三元颜色(Color3), 动作管理器(ActionManager), 和动画(Animation)**.&amp;nbsp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some of the most commonly used properties are _alpha_, _beta_, _radius_, _target_, _speed_, _inertia_, and _fov_.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T140009Z" creationid="aceway" creationdate="20170205T140009Z">
        <seg>其中一些最常使用的有_经度(alpha)_, _纬度(beta)_, _半径_, _旋转目标(target)_, _速度_, _惯性(inertia)_, 和 _视线夹角(fov)_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some of the most commonly used properties are _position_, _rotation_, _speed_, _inertia_, and _fov_.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T133217Z" creationid="aceway" creationdate="20170205T133217Z">
        <seg>其中一些最常用的属性有_位置(position)_, _转角(rotation)_, _速度(speed)_, _惯性(inertia)_, 和_视线夹角(fov)_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Someday, you may want to 'externalize' these styles by placing them in a separate file, possibly called styles.css.&amp;nbsp; Then you could remove the blue section from this HTML file, and use a HTML LINK element/tag to include-in that separate CSS style document.&amp;nbsp; I will not be telling you how to do that, but there are plenty of documents on the web that will show you how.&amp;nbsp; It is very easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T030046Z" creationid="aceway" creationdate="20160404T002058Z">
        <seg>有一天, 你希望通过把这些样式内容放在单独的文件里使它们外部化, 也许可以把文件叫做 styles.css.&amp;nbsp; 那是可以把蓝色部分从这个HTML文件里移除掉, 然后使用HTML LINK元素/标签把样式文件放到里面.&amp;nbsp; 我不回教你怎么做那个, 但是网上满是文档教你如何做的; 它非常简单.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes, methods are used to SET values of properties, and sometimes methods are used to GET values of properties.&amp;nbsp; These methods/functions are often called GETTERS and SETTERS.&amp;nbsp; Notice the word 'get' in the getMeshByName method above?&amp;nbsp; It is a GETTER method.&amp;nbsp; Here is a more proper use of that 'call':</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160421T101614Z" creationid="aceway@qq.com" creationdate="20160421T101614Z">
        <seg>有时候, 方法被用来设置属性值， 有时后别用来获取属性值.&amp;nbsp; 这些方法/函数通常被称为 GETTERS 和 SETTERS.&amp;nbsp; 注意到上面getMeshByName方法里的用词 'get' 没?&amp;nbsp; 它就是个 GETTER 方法.&amp;nbsp; 这儿又是一个该方法调用':</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Spot lights use perspective projection and directional lights use orthogonal projection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T130337Z" creationid="aceway" creationdate="20170204T130025Z">
        <seg>聚光源使用透视投影,而定向光源使用正交投影.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sprites
---
In this tutorial, we are going to learn how to manipulate Sprites.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170122T094019Z" creationid="aceway" creationdate="20170122T094019Z">
        <seg>精灵
---
在本教程里，我们将学习如何操作精灵.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sprites always face the camera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170122T104652Z" creationid="aceway" creationdate="20170122T104652Z">
        <seg>精灵总是朝向摄像机的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sprites are 2D image/animation, and we will use them to display an image with alpha channel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170122T094151Z" creationid="aceway" creationdate="20170122T094151Z">
        <seg>精灵是二维的图片或动画，我们将使用精灵来显示具有透明通道的图片。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting with Babylon.js v2.1, you can define sprite's width and height:
```
player.width = 0.3;
player.height = 0.4;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T121408Z" creationid="aceway" creationdate="20170129T121408Z">
        <seg>从Babylon.js v2.1开始, 你可以定义精灵的宽度和高度:
```
player.width = 0.3;
player.height = 0.4;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting with the box, we create various basic elements, and then position them at the end of the function (to keep them from being atop one another).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T130924Z" creationid="aceway" creationdate="20160503T130924Z">
        <seg>从盒子开始, 我们创建了高中基础元素, 在该函数的最后将它们定位好(以防止它们堆叠起来).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stay with us, because we are going to learn a new, very interesting thing: [Configuring your environment](http://doc.babylonjs.com/tutorials/Environment).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T103155Z" creationid="aceway" creationdate="20170131T103155Z">
        <seg>继续跟我来, 因为我们将学习个新的，非常有趣的东西: [配置环境](http://doc.babylonjs.com/tutorials/Environment).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Still inside the ```&lt;body&gt;``` part of the web page,  please add:
```javascript
&lt;script&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T034444Z" creationid="aceway@qq.com" creationdate="20160429T034444Z">
        <seg>任然实在页面的 ```&lt;body&gt;```内部，请添加:
```javascript
&lt;script&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Store each of those files into the new js folder.&amp;nbsp; Also, you might want to copy them to some other folder as well, for using later.&amp;nbsp; Try to remember to repeat these actions fairly often, maybe once per month, to ensure that you are always using a reasonably fresh version of The Big 4 files.&amp;nbsp; Babylon.js is always evolving.&amp;nbsp; New features are being added very quickly, and you want your home versions of The Big 4... to be fresh, so you can take advantage of those new features.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T084223Z" creationid="aceway" creationdate="20160423T084223Z">
        <seg>将这些文件保存到新的js文件夹.&amp;nbsp; 此外, 你也许想拷贝它们到其它文件夹, 以便以后使用.&amp;nbsp; 尽量经常重复这些动作, 也许每月一次的好, 以确保你使用的4大文件资源总是最新的版本.&amp;nbsp; Babylon.js一直在持续进化.&amp;nbsp; 新特性的添加非常快, 你想家里的4大资源文件版本保持新的, 以便利用这些新特性, 因此你就要经常重复上面的动作.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Supported image formats include JPG, PNG, JPEG, BMP, GIF… (every image format supported by your browser).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T125718Z" creationid="aceway" creationdate="20160508T125718Z">
        <seg>支持的图片格式包括 JPG, PNG, JPEG, BMP, GIF… (每种图片格式都被你的浏览器支持).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sure you are!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T125916Z" creationid="aceway" creationdate="20160507T125916Z">
        <seg>你肯定准备好了!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Take notice of the ._angularSensibility_ and ._moveSensibility_ properties, similar to our DeviceOrientationCamera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T133459Z" creationid="aceway" creationdate="20170206T133459Z">
        <seg>注意下._角度感知(angularSensibility)_ 和 ._运动感知(moveSensibility)_ 属性, 类似于我们的设备定向相机(DeviceOrientationCamera).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Take some time to carefully watch that scene.&amp;nbsp; Like the last demo scene, the yellow text shows a Vector3 being used to set the .rotation property with some computer-generated values.&amp;nbsp; The box is shown doing positive and negative rotations around each of the 3 axes.&amp;nbsp; Under the yellow text... you again see the green text...&amp;nbsp; showing the 3 'discrete' ways to set the box's .rotation property with values.&amp;nbsp; I bet you understand this completely, don't you?&amp;nbsp; Easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T074610Z" creationid="aceway" creationdate="20160423T074610Z">
        <seg>花些时间仔细观察下这个场景.&amp;nbsp; 更上个演示场景类似, 黄颜色文本显示了一个Vector3量, 它被一些电脑生成的值填充并被用来设置旋转属性(.rotation).&amp;nbsp; 盒子展示着绕3个轴各自独立正转反转的情形.&amp;nbsp; 在黄颜色文本下面... 你再次看到绿颜色文本...&amp;nbsp; 展示着3种 '零散'方式给盒子的旋转属性(.rotation)设置值.&amp;nbsp; 我打赌你已经完全理解了, 难道你们么??&amp;nbsp; 就是如此简单.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Telling of the many features of our editor... is beyond the scope of this tutorial.&amp;nbsp; You can learn more about the wonderful Ace Editor... with [a visit to their website](http://ace.c9.io/#nav=about)... and by simply spending some time using the playground editor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T022040Z" creationid="aceway" creationdate="20160426T150549Z">
        <seg>讲述编辑器的大量特征超越了本教程的范围.&amp;nbsp; 通过访问[Ace编辑器的网站](http://ace.c9.io/#nav=about)你能够学习到更多的Ace编辑器知识，而且通过花更多时间在使用娱乐场编辑器上也可以.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test it : http://www.babylonjs-playground.com/#14RNAU#4</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T115620Z" creationid="aceway" creationdate="20160507T115620Z">
        <seg>试验下: http://www.babylonjs-playground.com/#14RNAU#4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test it : http://www.babylonjs-playground.com/#14RNAU#5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T120544Z" creationid="aceway" creationdate="20160507T120544Z">
        <seg>试验: http://www.babylonjs-playground.com/#14RNAU#5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test it : http://www.babylonjs-playground.com/#14RNAU#6</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T121022Z" creationid="aceway" creationdate="20160507T121022Z">
        <seg>试验: http://www.babylonjs-playground.com/#14RNAU#6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thanks David!  The Babylon.js GamepadCamera is specially designed to work with... you guessed it... gamepads.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T132623Z" creationid="aceway" creationdate="20170206T132623Z">
        <seg>谢谢David! 你猜对了，Babylon.js的手持相机(GamepadCamera)hi特别为游戏手柄设计的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thanks to forum user Kostar111 for this handy Tiled Ground constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T123116Z" creationid="aceway" creationdate="20160507T123116Z">
        <seg>感谢论坛用户Kostar111提供了这个方便的瓦片地图构造方法.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is a BIG picture, isn't it?&amp;nbsp; This is a complete Babylon.js scene, using the 'single HTML file' method.&amp;nbsp; This is not the only (or best) method of setting up a scene, but it is fast and easy.&amp;nbsp; I have colored important sections of 'the big picture' and we will now examine each section individually.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T132127Z" creationid="aceway" creationdate="20160403T132119Z">
        <seg>它是个大图片,不是么? &amp;nbsp; 这是个完整的 Babylon.js 场景, 使用 '简单的 HTML 文件' 的方法.&amp;nbsp; 这不是唯一(也不是最好)的设置一个场景的方法, 但是快速而简单.&amp;nbsp; 我已经在"大图片上"的重要段上标色,而且我们现在就一段段段查看.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is because it **is** easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T052620Z" creationid="aceway@qq.com" creationdate="20170207T052620Z">
        <seg>应为它 **本就** 简单.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is done by setting the properties on the material.  Let's see what they are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T124019Z" creationid="aceway" creationdate="20160508T124019Z">
        <seg>这通过设置材质的属性实现, 我们看看它们么样:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's A Wrap
Hey, thanks for reading this tutorial and for discovering the BabylonJS playground.&amp;nbsp; We are very proud of it, and we think you will enjoy using it.&amp;nbsp; This tutorial is still quite new, and will likely be changing often.&amp;nbsp; Be sure to check back for updates and future features.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T033247Z" creationid="aceway@qq.com" creationdate="20160427T032833Z">
        <seg>那是个包袱
嘿，谢谢阅读本教程，一并谢谢探究了BabylonJS娱乐场.&amp;nbsp; 我们为之自豪, 也认为你会喜欢它.&amp;nbsp; 这个教程还非常的新，而且将会经常的改变.&amp;nbsp; 记得回来检查更新，学习新特征哦.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That’s it!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T040230Z" creationid="aceway" creationdate="20170130T040230Z">
        <seg>这就可以了!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The 'clearColor' property on the scene object is the most rudimentary of environment properties/adjustments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T105228Z" creationid="aceway" creationdate="20170131T105228Z">
        <seg>场景对象的这个'clearColor'属性，是基础的环境属性/调整器.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ArcRotateCamera has many properties that you can use to adjust your view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T135813Z" creationid="aceway" creationdate="20170205T135813Z">
        <seg>弧形旋转相机有许多属性可以用来调整你的视图.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ArcRotateCamera is a little strange to use, at first, but in no time, you will be using them often and easily.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T134606Z" creationid="aceway" creationdate="20170205T134606Z">
        <seg>刚开始时，弧形旋转相机使用起来有点怪怪的，但是没多久，你就会经常轻松自如的使用它们的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ArcRotateCamera is an excellent camera to animate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T045118Z" creationid="aceway@qq.com" creationdate="20170206T045118Z">
        <seg>对于播放动画来说弧形旋转相机非常棒.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The BabylonJS Playground is an on-line white-boarding and experimenting application... used to assist in creating scenes for the Javascript-based BabylonJS webGL framework.&amp;nbsp; Your browser must be WebGL-ready and have Javascript active... in order to use the playground.&amp;nbsp; &amp;nbsp;Most modern browsers have these capabilities.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T155120Z" creationid="aceway" creationdate="20160423T142412Z">
        <seg>该BabylonJS 娱乐场是一个在线的白板式可,可试验的应用程序... 用于辅助创建基于Javascript的网页图形库框架BabylonJS的场景.&amp;nbsp; 为了试验该娱乐场你的浏览器必须支持WebGL-而激活Javascript... .&amp;nbsp; &amp;nbsp;大多数的现在浏览器都支持.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Effect Object has many 'setter' methods on it, one of which is _.setFloat_.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T095207Z" creationid="aceway" creationdate="20170131T095207Z">
        <seg>该效果对象有许多设置('setter')方法，其中之一便是_.setFloat_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The FreeCamera does not automatically aim at a target, but after constructing a FreeCamera, you can easily set it to lock-on to a mesh or to a vector3 position... using the _lockedtarget_ property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T121026Z" creationid="aceway" creationdate="20170205T121026Z">
        <seg>自由相机不会自动的对准目标，但是创建自由相机后，你能够使用 _lockedtarget_ 属性来轻松的将它锁定到一个网格或某一三维坐标上.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The FreeCamera is also used as the base camera for many of our other cameras, so you will come to 'view' it as an old friend.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T133325Z" creationid="aceway" creationdate="20170205T133325Z">
        <seg>自由相机也是作为许多其它相机的基础相机使用，所以你会把它当做老朋友看待的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JS code you see inside the green section... will be talked about soon.&amp;nbsp; Mainly, I would like you to study the big picture, and see how the single HTML file method of creating Babylon.js scenes... is structured.&amp;nbsp; I want you to try to visualize and somewhat memorize... this scene file's 'layout'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T030158Z" creationid="aceway" creationdate="20160404T025459Z">
        <seg>你看到的在绿色部分里的 JS 代码... 很快会被讨论到.&amp;nbsp; 我主要是希望你学习下大图片里的内容, 而且弄明白单个HTML文件里的Babylon.js场景是如何创建的.&amp;nbsp; 对这个文件的格式, 我希望你能够尽力留下印象且记得一点点.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The TouchCamera is specially programmed for nearly all modern gesture-active input devices.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T130217Z" creationid="aceway" creationdate="20170206T130217Z">
        <seg>触控相机是专程为几乎所有的现代手势活动输入设备准备的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Universal Camera is now the default camera used by Babylon.js if nothing is specified, and it’s your best choice if you’d like to have a FPS-like control in your scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T140454Z" creationid="aceway" creationdate="20170207T140454Z">
        <seg>现在若没有特别指定，万能相机就是Babylon.js中默认使用的相机, 而且是你最好选择-如果你喜欢场景中拥有第一人称视角一样的控制.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The VRDeviceOrientationFreeCamera uses FreeCamera as its basis, so all of the properties and methods of FreeCamera... are also found on our VRDeviceOrientationFreeCamera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T135516Z" creationid="aceway" creationdate="20170207T135516Z">
        <seg>_虚拟现实设备定向相机_也是使用自由相机作为基础... 因此自由相机的所有属性和方法都可以在_虚拟现实设备定向相机_上找到.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The _ellipsoid_ property on babylon.js cameras is default to size (0.5, 1, 0.5), but changing values will make you taller, bigger, smaller, thinner, it depends upon the adjusted axis.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T035540Z" creationid="aceway" creationdate="20170130T035540Z">
        <seg>Babylon.js里相机的_椭球体_属性默认大小是 (0.5, 1, 0.5), 但是你通过改变值可以更高、更大、更小、更薄, 这依赖于轴的调整.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The _eyeSpace_ parameter (and property) sets the amount of shift between the left eye view and the right eye view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T133613Z" creationid="aceway" creationdate="20170207T133354Z">
        <seg>那个_眼界(eyeSpace)_ 参数(和属性)设置左眼视图和右眼视图的偏差(搭界区域).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ```BABYLON.Animatable``` object also supports the following functions:
- ```pause()```
- ```restart()```
- ```stop()```
- ```reset()```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T104515Z" creationid="aceway" creationdate="20160402T104515Z">
        <seg>该 ```BABYLON.Animatable``` 对象也支持下列函数:
- ```pause()```
- ```restart()```
- ```stop()```
- ```reset()```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ambient can be seen as a second level of diffuse.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T150848Z" creationid="aceway" creationdate="20160521T150135Z">
        <seg>环境光可以被看作漫反射的第二层.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The animation is based on objects called Animation (!!).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T053948Z" creationid="aceway@qq.com" creationdate="20160330T094901Z">
        <seg>基于众多物体对象动画也叫电影片段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The basic meshes you've seen up until now have an expected shape : when you create a sphere mesh, you expect to see a spherical shape.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T131953Z" creationid="aceway" creationdate="20170204T131953Z">
        <seg>直到目前你已经看到的基础网格都有预期的形状: 当你创建一个球体网格,你期望看到一个球形.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code computed at run time must be located in this function:
```javascript
scene.registerBeforeRender(function () {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T151208Z" creationid="aceway" creationdate="20160402T151208Z">
        <seg>运行时的计算代码必须位于这个函数内:
```javascript
scene.registerBeforeRender(function () {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compilation error does not always contain pertinent information about the reason for the error, yet it is still handy.&amp;nbsp; It tells you that the BabylonJS framework is not happy with something in your scene code.&amp;nbsp; After making an adjustment to your code, you will want to close the compilation error pop-up (using its X closer) before clicking on Run again.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T025947Z" creationid="aceway@qq.com" creationdate="20160427T025947Z">
        <seg>编辑错误里并不总能包含错误的关键点，但它仍然很便捷.&amp;nbsp; 他告知你BabylonJS框架已经对你场景代码有些不爽拉。&amp;nbsp; 你调整代码后, 在点击运行按钮前你也许希望关闭弹出的编译错误提示(通过它边上的X按钮).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The complex animation lets you choose everything at each frame of the animation (each tick).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T160646Z" creationid="aceway" creationdate="20160402T151121Z">
        <seg>复杂动画允许你选择每帧的每样东西(每一瞬间).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The constructor method we will show below... is from [Alex's FollowCamera forum thread](http://www.html5gamedevs.com/topic/8433-smooth-camera-follow/) and, as you can see, Alex makes it easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T140322Z" creationid="aceway" creationdate="20170206T140322Z">
        <seg>下面显示的它的构造方法是出自[Alex的跟随相机论坛主题](http://www.html5gamedevs.com/topic/8433-smooth-camera-follow/), 正如你所见，Alex使之很容易.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The core version is based on the "no worker" version and it is here to keep the file to a minimal size (&lt; 150 KB gzipped).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T072014Z" creationid="aceway@qq.com" creationdate="20160427T072014Z">
        <seg>核心版本是基于"no worker" 版本，而且此处保持文件的精小 (压缩后 &lt; 150 KB ).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The customEffect is a type of BABYLON.Effect used to target a valid shader program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T093534Z" creationid="aceway" creationdate="20170131T093534Z">
        <seg>自定义效果customEffect是BABYLON.Effect类型的，用于定义一个有效的着色器程序.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The diffuse is the native color of the object material once it is lit with a light.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T125230Z" creationid="aceway" creationdate="20160508T125230Z">
        <seg>一旦对象材质被一个光源点亮, 散射光就是材质对象的天然色.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The documentation for touch and gamepad cameras are still included here... for historical reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T124721Z" creationid="aceway" creationdate="20170206T124627Z">
        <seg>此处也包含有触控相机和手持相机的，以作为历史参考.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The emissive is the color produced by the object itself.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T150829Z" creationid="aceway" creationdate="20160521T145416Z">
        <seg>放射光决定了对象自身的颜色.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The emitter acts as the source of the particles, and its location in 3D space determines where they are generated and how they move.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T025815Z" creationid="aceway" creationdate="20170131T025815Z">
        <seg>发射器作为粒子源，它在三维空间里的位置决定着粒子的在哪生成以及如何移动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first and second sphere (balloon) will collide on the rotated ground, the last one will be in collision only on a single point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T084422Z" creationid="aceway" creationdate="20170130T084422Z">
        <seg>第一个和第二个球体(气球)将在旋转的地面上碰撞, 后者仅是单点的接触碰撞.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first external include is hand.minified-1.2.js (often simply called hand.js) - a small Javascript framework that assists the Babylon.js cameras.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T002241Z" creationid="aceway" creationdate="20160403T132837Z">
        <seg>第一个从外部包含的是 hand.minified-1.2.js (通常简称为hand.js) - 一个用来辅助Babylon.js相机的小Javascript框架.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first is the **AnaglyphArcRotateCamera**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T132423Z" creationid="aceway" creationdate="20170207T132423Z">
        <seg>第一种是 **弧形旋转立体相机**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first is to define a collection of keys and defining your object's situation at each key.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160330T154251Z" creationid="aceway" creationdate="20160330T033530Z">
        <seg>第一种方式是定义一系列的键值集合，并且定义好每个键值对应的对象物状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first parameter is the name, he second parameter is the maximum number of particles, the third parameter is the scene, and the optional fourth parameter is a reference to a shader effect for the particles, overriding the default shader.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T030628Z" creationid="aceway" creationdate="20170131T030628Z">
        <seg>第一个参数是名称，第二个参数是最大粒子数，第三个是粒子所在的场景，可选的第四个参数是粒子着色器的引用---用来覆盖默认的着色器.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first thing to do is to define our gravity vector, defining the G-force.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T131242Z" creationid="aceway" creationdate="20170129T131242Z">
        <seg>第一件要做的时定义我们的重力向量，定义重力加速度G.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first vector3 of the array is the starting location for drawing lines.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T142007Z" creationid="aceway" creationdate="20160503T142007Z">
        <seg>数组里的头个三元向量是线的开始地方.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following files are not included in the core version:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T072029Z" creationid="aceway@qq.com" creationdate="20160427T072029Z">
        <seg>下面文件没有包含在核心版本里:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The full ribbon will then be the continuous surface joining all these inbetween pair of paths surface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T103552Z" creationid="aceway" creationdate="20160507T103552Z">
        <seg>成对路径间构成的所有板带会结合起来形成连续表面.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The handy _setPosition()_ method does the rest.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T045032Z" creationid="aceway@qq.com" creationdate="20170206T045032Z">
        <seg>便捷的 _setPosition()_ 方法将会做好剩下的事情.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The index.html that you will receive in that zip... contains everything you will need to start making basic elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T130154Z" creationid="aceway" creationdate="20160503T130154Z">
        <seg>你得到的zip压缩包里的index.html文件,包含有你开始创建基础元素所需的一切.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last collision type could be very useful for you: it’s picking an object with your mouse.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T092134Z" creationid="aceway" creationdate="20170130T092134Z">
        <seg>为你准备的非常有用的最后一种碰撞类型: 它就是使用你的鼠标拾取物体.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last main thing to do is to define our emitter that we talked about earlier:
```javascript
// Where the particles comes from
particleSystem.emitter = fountain; // the starting object, the emitter, a box in this case.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T072439Z" creationid="aceway" creationdate="20170131T072439Z">
        <seg>最后件要做的事就是定义个发射器，我们早些时候讨论过的:
```javascript
// 粒子的来源地
particleSystem.emitter = fountain; // 开始的对象，发射器，在我们这例子里是盒子.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last three lines of your HTML5 web page... should be:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T071602Z" creationid="aceway@qq.com" creationdate="20160429T071602Z">
        <seg>HTML5页面 的最后3行应当是:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last two parameters can be omitted if you just need the default behavior :
```javascript
var box = BABYLON.Mesh.CreateBox("box", 6.0, scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T131635Z" creationid="aceway" creationdate="20160503T131308Z">
        <seg>如果你需要默认表现那么最后两个参数可以忽略:
```javascript
var box = BABYLON.Mesh.CreateBox("box", 6.0, scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last two parameters can be omitted if you just need the default behavior :
```javascript
var cylinder = BABYLON.Mesh.CreateCylinder("cylinder", 3, 3, 3, 6, 1, scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T140233Z" creationid="aceway" creationdate="20160503T140233Z">
        <seg>如果你需要默认表现,那么最后两个参数可以忽略:
```javascript
var cylinder = BABYLON.Mesh.CreateCylinder("cylinder", 3, 3, 3, 6, 1, scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last two parameters can be omitted if you just need the default behavior :
```javascript
var disc = BABYLON.Mesh.CreateDisc("disc", 5, 30, scene);
```
With the  _tessellation_ value, you can get a regular polygon :  
3 gives a triangle,  
4 a square,  
5 a pentagon,  
6 a hexagon, 7 a heptagon, 8 an octogon, and so on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T135849Z" creationid="aceway" creationdate="20160503T135849Z">
        <seg>如果你需要默认的表现,那么最后两个参数参数可以忽略:
```javascript
var disc = BABYLON.Mesh.CreateDisc("disc", 5, 30, scene);
```
根据_tessellation_ 的值, 你可以创建一个多边形:  
3产生一个三角形,  
4产生一个正方形,  
5产生一个五边形,  
6产生一个六边形, 7产生一个七边形, 8产生一个八卦形, 以此类推.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last two parameters can be omitted if you just need the default behavior :
```javascript
var knot = BABYLON.Mesh.CreateTorusKnot("knot", 2, 0.5, 128, 64, 2, 3, scene);
```
You can learn more about torus knots... [**RIGHT HERE**](http://en.wikipedia.org/wiki/Torus_knot).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T141358Z" creationid="aceway" creationdate="20160503T140756Z">
        <seg>如果你使用默认的表现那么最后的两个参数可以忽略 :
```javascript
var knot = BABYLON.Mesh.CreateTorusKnot("knot", 2, 0.5, 128, 64, 2, 3, scene);
```
将将在[**此处**](http://en.wikipedia.org/wiki/Torus_knot)关于 结 学习更多知识.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last two parameters can be omitted if you just need the default behavior :
```javascript
var plane = BABYLON.Mesh.CreatePlane("plane", 10.0, scene);
```
* **Creation of a Disc (or a regular polygon)**
```javascript
var disc = BABYLON.Mesh.CreateDisc("disc", 5, 30, scene, false, BABYLON.Mesh.DEFAULTSIDE);
```
Parameters are: name, radius, tessellation, scene, updatable and the optional side orientation (see below).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T140520Z" creationid="aceway" creationdate="20160503T132356Z">
        <seg>如果你需要默认的表现,那么最后两个参数可以忽略 :
```javascript
var plane = BABYLON.Mesh.CreatePlane("plane", 10.0, scene);
```
* **创建一个盘片(或着一个规则多边形)**
```javascript
var disc = BABYLON.Mesh.CreateDisc("disc", 5, 30, scene, false, BABYLON.Mesh.DEFAULTSIDE);
```
参数为: 名字, 半径, 边数, 场景, 可更新否和可选的朝向(参见下面).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last two parameters can be omitted if you just need the default behavior :
```javascript
var ribbon = BABYLON.Mesh.CreateRibbon("ribbon", [path1, path2, ..., pathn], false, false, 0, scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T105921Z" creationid="aceway" creationdate="20160507T105921Z">
        <seg>如果仅需要使用默认表现则最后两个参数可以被忽略:
```javascript
var ribbon = BABYLON.Mesh.CreateRibbon("ribbon", [path1, path2, ..., pathn], false, false, 0, scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last two parameters can be omitted if you just need the default behavior :
```javascript
var sphere = BABYLON.Mesh.CreateSphere("sphere", 10.0, 10.0, scene);
```
Beware to adapt the number of segments to the size of your mesh ;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T131740Z" creationid="aceway" creationdate="20160503T131612Z">
        <seg>如果你需要默认的表现那么最后两个参数可以忽略:
```javascript
var sphere = BABYLON.Mesh.CreateSphere("sphere", 10.0, 10.0, scene);
```
记得根据你的网格对象到校调整细分段数 ;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last two parameters can be omitted if you just need the default behavior :
```javascript
var torus = BABYLON.Mesh.CreateTorus("torus", 5, 1, 10, scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T140714Z" creationid="aceway" creationdate="20160503T140714Z">
        <seg>如果你使用默认表现那么最后两个参数可忽略 :
```javascript
var torus = BABYLON.Mesh.CreateTorus("torus", 5, 1, 10, scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last two parameters can be omitted if you just need the default behavior :
```javascript
var tube = BABYLON.Mesh.CreateTube("tube", [V1, V2, ..., Vn], radius, tesselation, radiusFunction, cap, scene);
```
The tube can also be used as a [**Parametric Shapes**](http://doc.babylonjs.com/tutorials/Parametric_Shapes) by setting a radius function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T114118Z" creationid="aceway" creationdate="20160507T111542Z">
        <seg>如果你仅仅要使用默认的表现则最后两个参数可以忽略:
```javascript
var tube = BABYLON.Mesh.CreateTube("tube", [V1, V2, ..., Vn], radius, tesselation, radiusFunction, cap, scene);
```
管子也可以通过设置一个半径函数而作为[**参数化造型**](http://doc.babylonjs.com/tutorials/Parametric_Shapes) 的方式使用.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The light's position, as well as the positions of the mesh that you have pushed into the renderlist, determine where the shadows will appear.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T130743Z" creationid="aceway" creationdate="20170204T130743Z">
        <seg>光源位置, 还有你加入到渲染列表的网格对象的位置, 一起决定着阴影将在哪出现.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main difficulty is to click on a 3D object whereas your screen is a flat 2D display.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T092351Z" creationid="aceway" creationdate="20170130T092351Z">
        <seg>主要的难点是：点击的是三维物体而与此同时你的显示器却是二维平面的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main thing to know is that our createScene function has all requirements complete.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T040831Z" creationid="aceway@qq.com" creationdate="20160429T040605Z">
        <seg>最重要的一点是我们的createScene 函数具有所要求的全部。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next 2 cameras... touch, and gamepad... are somewhat superseded by our new [Universal Camera](http://doc.babylonjs.com/classes/UniversalCamera) (explained far below).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T124715Z" creationid="aceway" creationdate="20170206T124455Z">
        <seg>下面两种相机...触控相机相机和手持相机... 有点会被新的[通用相机](http://doc.babylonjs.com/classes/UniversalCamera)取代(再晚些会讲解).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next important step is to define the ellipsoid around our camera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T035015Z" creationid="aceway" creationdate="20170130T034426Z">
        <seg>下一个重要的步骤是定义个椭球体包围相机.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next is cannon.js - an optional physics 'engine' that allows WebGL shapes (meshes) to act like real life objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T133115Z" creationid="aceway" creationdate="20160403T133115Z">
        <seg>下一个是 cannon.js - 一个可选的物理 '引擎', 其使WebGL里的造型(网格)的行为像真实生活里的物体对象.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other common type of 'pocket' on a Javascript object... is called a 'method' (sometimes called a 'function').&amp;nbsp; Methods are used to store Javascript code onto Javascript objects.&amp;nbsp; Earlier, I said that properties are 'set'.&amp;nbsp; Well, methods are 'called'.&amp;nbsp; Here is the way a method is 'called'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160420T141810Z" creationid="aceway" creationdate="20160420T141810Z">
        <seg>Javascript对象里另外的'存储空间'常见''类型叫做'方法'(有时叫做 '函数').&amp;nbsp; 方法用来讲Javascript代码存储到Javascript对象里.&amp;nbsp; 早些时候,我说的'set'属性也是个方法.&amp;nbsp; 嗯, 方法是被'调用'的.&amp;nbsp; 这儿是个方法被'调用'的方式.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other function you can use is “intersectsPoint()” with a specific point, like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T090652Z" creationid="aceway" creationdate="20170130T090652Z">
        <seg>另一个你可以使用的函数是“intersectsPoint()”，通过指定点来调用, 像这样:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The particle Effect Object is a slightly-modified [Babylon Effect Object](http://doc.babylonjs.com/classes/Effect).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T094907Z" creationid="aceway" creationdate="20170131T094907Z">
        <seg>粒子的效果对象稍有改变[Babylon效果对象](http://doc.babylonjs.com/classes/Effect).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The pickResult object is mainly composed of 4 pieces of information:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T093830Z" creationid="aceway" creationdate="20170130T093830Z">
        <seg>该pickResult对象主要是4个信息片段的组合:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The picked face is a polygon composed of 3 vertices, and the picked point is the barycenter of those three vertices with the following weights:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T021410Z" creationid="aceway" creationdate="20170131T021253Z">
        <seg>拾取面由3个顶点组成，而且拾取点是这三个顶点的重心with the following weights:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The playground's left-side code editor is a 'smart' editor which is based-upon [the Ace Editor](http://ace.c9.io/).&amp;nbsp; The playground editor has many fantastic features.&amp;nbsp; It uses type-ahead features such as automatically adding matched quotes, parentheses, braces, and brackets... handy things for a programming editor.&amp;nbsp; It tries to spot programming errors, and places little icons along the left side when it sees potential syntax problems.&amp;nbsp; If you place your mouse pointer over these little icons that sometimes appear, the editor will pop-up a small window telling you about what it has seen.&amp;nbsp; The editor also has syntax highlighting, code-folding, text drag-and-drop, automatic indent and outdent, and a 4 million line capacity.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160426T150541Z" creationid="aceway" creationdate="20160426T144931Z">
        <seg>娱乐场左边的代码编辑器是个基于[Ace 编辑器](http://ace.c9.io/)的一个'智能'编辑器.&amp;nbsp; 娱乐场编辑器有许多奇妙的特征.&amp;nbsp; 它具有输入预判的特征, 比如自动补全匹配的引号, 小括号, 大括号, 和方括号... 这对编程编辑器是非常方便的.&amp;nbsp; 它尝试标出编程错误点, 而且当它发现潜在的语法问题时会编辑器左边防止小图标.&amp;nbsp; 如果你把鼠标指针指向那些小图标时,编辑器会弹出一个小窗口高速你它发现了什么问题.&amp;nbsp; 编辑器也有语法加亮,代码折叠,文笔拖放,自动缩进及扩充, 而且有4百万行的容量.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The playground's top menu currently contains 8 buttons:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160425T141727Z" creationid="aceway" creationdate="20160425T141727Z">
        <seg>娱乐场的顶部菜单当前包含8个按钮:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The point here is to check contact between our balloons and the ground.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T084738Z" creationid="aceway" creationdate="20170130T084738Z">
        <seg>此处的关键是检测气球和地面间的接触点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The position numbers we used in the constructor above... place it in a useful starting position.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T130847Z" creationid="aceway" creationdate="20170205T130847Z">
        <seg>我们在上面的构造函数中使用的定位数值... 把相机放在了一个有用的起始位置.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The primary author of Babylon.js was kind enough to make us [a fantastic playground demo of a particle system using a fragment shader effect](http://babylonjs-playground.azurewebsites.net/#1ASENS).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T094200Z" creationid="aceway" creationdate="20170131T094200Z">
        <seg>Babylon.js的主要作品足以为我们提供[一个使用片段着色器实现的神奇粒子系统的演示](http://babylonjs-playground.azurewebsites.net/#1ASENS).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The produced color is multiplied to the diffuse color.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T150857Z" creationid="aceway" creationdate="20160521T150315Z">
        <seg>环境光产生的颜色对漫反色的作用是乘法效应.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The quality of the blur is defined by two properties:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T121240Z" creationid="aceway" creationdate="20170204T121240Z">
        <seg>模糊的质量由两个属性定义:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The quickest way is to edit the Visual Studio project file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T100925Z" creationid="aceway@qq.com" creationdate="20160427T100925Z">
        <seg>最快的方式是编辑Visual Studio工程文件.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The result is better, but slower.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T120201Z" creationid="aceway" creationdate="20170204T120201Z">
        <seg>结果会更好,但是也更慢.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The result should look like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T101649Z" creationid="aceway@qq.com" creationdate="20160427T101649Z">
        <seg>结果看起来像这样:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ribbon is a very simple and versatile shape.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T132337Z" creationid="aceway" creationdate="20170204T132337Z">
        <seg>色带是个非常简单和灵活的造型.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ribbon will be constructed joining each i-th point of the single path to the i+offset-th point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T105602Z" creationid="aceway" creationdate="20160507T105602Z">
        <seg>此时板带由该单条路径上的 第 i 个点和第 i+偏移量 个点连接来构成.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ribbon will just follow your paths.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T103123Z" creationid="aceway" creationdate="20160507T103017Z">
        <seg>板带就沿着你定义的路径.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The same camera is handling those 3 inputs at the same time... in a transparent way for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T140930Z" creationid="aceway" creationdate="20170207T140930Z">
        <seg>一部相机同时支持处理这3种输入... 并以透明的方式提供给你.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The same goes for a box mesh, a torus, a cylinder, etc.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T132045Z" creationid="aceway" creationdate="20170204T132045Z">
        <seg>对于盒子,环,柱体等也时同样的情况.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The scene has now a new flag (false per default):
```javascript
scene.workerCollisions = true|false
```
Setting this flag to true will start the worker in the background.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T050544Z" creationid="aceway" creationdate="20170130T050434Z">
        <seg>场景现在有新的标识(默认为false):
```javascript
scene.workerCollisions = true|false
```
设置该值为true将使工作线程在后台执行.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second is the **AnaglyphFreeCamera**.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T133004Z" creationid="aceway" creationdate="20170207T131055Z">
        <seg>第二种是 **自由立体相机**.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second way is for more complex animations, when you change animation code at run time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160330T033700Z" creationid="aceway" creationdate="20160330T033700Z">
        <seg>第二种方式可以定义更复杂的动画，在运行是改变动画代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The side orientation is used to give visibility and/or light reflection to each side of the mesh.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T114829Z" creationid="aceway" creationdate="20160507T114447Z">
        <seg>该朝向被用来提供可见性而且/或则光反射性.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The specular is the color produced by a light reflecting from a surface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T151122Z" creationid="aceway" creationdate="20160521T150912Z">
        <seg>镜面光体现了一个光滑平面对光源的反射色.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The specular property has one more setting.  The size/intensity of the specular reflection can be set using the ```specularPower``` property:
```javascript
materialSphere1.specularPower = 32;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T133954Z" creationid="aceway" creationdate="20160522T133954Z">
        <seg>镜面光有另外一个属性.  镜面反射光的大小/强度可以通过```specularPower```属性来设定:
```javascript
materialSphere1.specularPower = 32;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The speed ratio of this animation
optional | onAnimationEnd | () =&gt; void | The function triggered on the end of the animation (also dependent upon ANIMATIONLOOPMODE)
optional | animatable | [Animatable](http://doc.babylonjs.com/classes/Animatable) | An optional specific animation
---</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160331T145934Z" creationid="aceway" creationdate="20160331T144006Z">
        <seg>动画的速率
可选 | onAnimationEnd | () =&gt; void | 该函数在动画的结束被触发调用(同样取决于 ANIMATIONLOOPMODE)
可选 | 可播放 | [Animatable](http://doc.babylonjs.com/classes/Animatable) | 一个可选的特殊动画
---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The third parameter is indicating if this animation will loop or not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T123014Z" creationid="aceway" creationdate="20170129T123014Z">
        <seg>第三个参数指示这个动画时否会循环播放。.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The three 'parameters' inside the parentheses of a Vector3 value... are floats.&amp;nbsp; They can be negative or positive, and there is no practical limit to the size of those values.&amp;nbsp; Let's look at a Vector3 being used to set the .position of a mesh.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T135852Z" creationid="aceway" creationdate="20160421T135852Z">
        <seg>Vector3值的括号里三个'参数'是浮点类型的.&amp;nbsp; 它们可正可负, 这些值并没有实际大小的限制.&amp;nbsp; 让我们看个使用Vector3给网格对象设置位置属性值的例子.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The two parameters used by the shadow generator are: the size of the shadow map, and which light is used for the shadow map's computation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T104449Z" creationid="aceway" creationdate="20170204T104449Z">
        <seg>阴影生成器使用的两个参数是: 阴影的大小, 和用于计算阴影的光源.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The up-to-date list of the .js files and indications about the Engine's setup can be found [here](http://doc.babylonjs.com/generals/Creating_the_Mini-fied_Version)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T094136Z" creationid="aceway@qq.com" creationdate="20160427T094136Z">
        <seg>最新的.js文件列表和引擎配置的指示可以在这儿[here](http://doc.babylonjs.com/generals/Creating_the_Mini-fied_Version)找到</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The worker is integrated in the single framework file, and no changes are required by the developer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T050324Z" creationid="aceway" creationdate="20170130T050324Z">
        <seg>该工作线程的实现集成在那个单一的框架文件中，而且开发者不需要做什么改变.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The worker will then receive all collision requests from the cameras and meshes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T050640Z" creationid="aceway" creationdate="20170130T050640Z">
        <seg>该线程将接收来自相机和网格的全部碰撞检测请求.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Their final shape depends upon some parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T132140Z" creationid="aceway" creationdate="20170204T132140Z">
        <seg>它们的最终形状取决于一些参数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then we will use the setPosition() function with a common Vector3 position value... to set our _alpha_, _beta_, and _radius_ values all at once, automatically:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T044256Z" creationid="aceway@qq.com" creationdate="20170206T044256Z">
        <seg>那么我们将一个普通的三维向量值传给setPosition()函数... 一次完成我们的 _经度_, _纬度_, 和 _半径_ 值设置:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, another comma, and another vector3 to a new location.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T142156Z" creationid="aceway" creationdate="20160503T142156Z">
        <seg>然后, 又一个逗号, 和又一个三元向标示点新定位点.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, the all-important rendering loop.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T065040Z" creationid="aceway@qq.com" creationdate="20160429T065040Z">
        <seg>然后, 最重要的渲染循环.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are actually two types of AnaglyphCamera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T132348Z" creationid="aceway" creationdate="20170207T132258Z">
        <seg>实际上有立体相机有两种类型.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are four possible values for this parameter :</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T114926Z" creationid="aceway" creationdate="20160507T114926Z">
        <seg>这个值有四个可能的值:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many IDE out there you can use to contribute to Babylon.js, Visual Studio being one of them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T092215Z" creationid="aceway@qq.com" creationdate="20160427T092215Z">
        <seg>有许多IDE可用与为Babylon.js做贡献, Visual Studio是其中之一.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are some Babylon.js cameras that have unique purposes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T123052Z" creationid="aceway" creationdate="20170206T123052Z">
        <seg>存在一些特殊用途的Babylon.js相机</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are three filters available:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T105534Z" creationid="aceway" creationdate="20170204T105534Z">
        <seg>有三个过滤器可用:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are three more things to add to your web page.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T064838Z" creationid="aceway@qq.com" creationdate="20160429T064838Z">
        <seg>还有三个东东要添加到你的页面里.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are three possible values you can give for EasingMode: 
- ```BABYLON.EasingFunction.EASINGMODE_EASEIN``` : Interpolation follows the mathematical formula associated with the easing function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T143727Z" creationid="aceway" creationdate="20160402T143214Z">
        <seg>有三个值你可以用来赋给 EasingMode: 
- ```BABYLON.EasingFunction.EASINGMODE_EASEIN``` : 按照简化函数的数学公式来控制插入.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are three unique properties on the ArcRotateCamera which are named _alpha_ (in radians), _beta_ (in radians), and _radius_ (a number).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T135400Z" creationid="aceway" creationdate="20170205T134757Z">
        <seg>弧形旋转相机有三个唯一的属性，它们是：_经度角alpha_ (弧度单位), _纬度角beta_ (弧度单位), 和_半径_ (一个数值).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two primary ways of doing animations in your scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160330T033350Z" creationid="aceway" creationdate="20160330T033350Z">
        <seg>有两种主要的方式实现场景动画。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two rather important properties on the DeviceOrientationCamera: _angularSensibility_ and _moveSensibility_, which you can discover and explore... along with all of the other properties and methods... at [**our API documentation site**](http://doc.babylonjs.com/classes/DeviceOrientationCamera).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T135503Z" creationid="aceway" creationdate="20170206T135503Z">
        <seg>设备定向相机上有两个特别重要的属性: _角度感知(angularSensibility)_ 和_运动感知(moveSensibility)_, 这些你可以和其它属性以及方法一起在[**我们的API文档站点**](http://doc.babylonjs.com/classes/DeviceOrientationCamera)发现和探索.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two types of value objects that are very common in Babylon.js.&amp;nbsp; They are the Vector3 value, and the Color3 value.&amp;nbsp; Vector3 and Color3 values... deserve to have their own section in this giant tutorial.&amp;nbsp; Here we go...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160421T103952Z" creationid="aceway@qq.com" creationdate="20160421T103952Z">
        <seg>在Babylon.js中有两类十分常见 的值类型.&amp;nbsp; 它们是三元向量(Vector3)值和3元颜色( Color3)值.&amp;nbsp; Vector3和Color3 values...保留着，后面各自有章节讲有.&amp;nbsp; 我们继续此处的内容....</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a tutorial for the Babylon.js playground.&amp;nbsp; Just [**click here**](http://doc.babylonjs.com/page.php?p=22631).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160404T103910Z">
        <seg>Babylon.js 娱乐场有个教程.&amp;nbsp; 就在 [**点击这儿**](http://doc.babylonjs.com/page.php?p=22631).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is another kind of mesh whose final shapes aren't fixed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T132115Z" creationid="aceway" creationdate="20170204T132115Z">
        <seg>存在另外一种网格,它们的形状不是固定的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is much underlying magic to the TouchCamera, but like everything else in Babylon.js, we make it easy and enjoyable for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T130816Z" creationid="aceway" creationdate="20170206T130816Z">
        <seg>触控相机底层有许多潜在的魔法, 但是正如Babylon.js里许多其它技术一样, 我们使之简单和容易上手.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There you have it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T051727Z" creationid="aceway@qq.com" creationdate="20170207T051727Z">
        <seg>就这些，你实现了跟随相机.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There, we have visited the primary color and texture properties of StandardMaterial.  But we are not done yet.  Here are a few more handy properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T134247Z" creationid="aceway" creationdate="20160522T134247Z">
        <seg>在那里, 我们访问了标准材质的主要颜色和纹理属性.  但是我们还没讲完.  这儿还有些方便使用的属性.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There, you can start a new topic, tell everyone the URL to your broken playground createScene function, and ask others if they will please visit your playground scene and help you get it working correctly.&amp;nbsp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T101942Z" creationid="aceway" creationdate="20160404T094839Z">
        <seg>在那,你可以开始一个新的话题, 将破坏你娱乐展示场景的createScene函数网址告诉大家,  问下是否有人乐意访问你的娱乐展示场景并帮助你修正.&amp;nbsp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T065511Z" creationid="aceway@qq.com" creationdate="20160429T065511Z">
        <seg>那儿.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are needed when you don't work with the main .js file, the reason is that the Shaders are stored as variables in the main .js file, so when you don't use it the Engine must load the .fx files from the web server in the location you specified.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T102503Z" creationid="aceway@qq.com" creationdate="20160427T102503Z">
        <seg>当你不是用主 .js 文件工作时需要这些内容, 原因是：着色器被作为变量存储在主 .js 文件里, 当你没使用它时引擎必须通过你指定的WEB服务加载 .fx 文件.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These can be accessed like so:
```
var indices = pickResult.pickedMesh.getIndices();
var index0 = indices[pickResult.faceId * 3];
var index1 = indices[pickResult.faceId * 3 + 1];
var index2 = indices[pickResult.faceId * 3 + 2];
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T095550Z" creationid="aceway" creationdate="20170130T095533Z">
        <seg>这些索引可以这样访问:
```
var indices = pickResult.pickedMesh.getIndices();
var index0 = indices[pickResult.faceId * 3];
var index1 = indices[pickResult.faceId * 3 + 1];
var index2 = indices[pickResult.faceId * 3 + 2];
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These commands will apply to every animation object contained in the Animatable's ._animations array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T105020Z" creationid="aceway" creationdate="20160402T105020Z">
        <seg>这些指令将应用到包涵在 _animations 数组里的每个动画对象上.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are each ways of making 'ground' in Babylon.js.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T121947Z" creationid="aceway" creationdate="20160507T121947Z">
        <seg>它们(下面例子)是Babylon.js创建'地面'的各种方法.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are, well, whatever you want.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T102950Z" creationid="aceway" creationdate="20160507T102950Z">
        <seg>它们可以是任何你想要的方式.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They don't even need to be straight lines or in the same plane.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T102924Z" creationid="aceway" creationdate="20160507T102924Z">
        <seg>它们甚至不需要是直线或在同一平面内.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This also means that on a touch PC, you can use those 3 types of inputs on the same machine, if you’d like.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T141127Z" creationid="aceway" creationdate="20170207T141127Z">
        <seg>这意味着在一台支持触控的PC上, 你可以在这台机器上是使用这3种输入方式，只要你喜欢.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This array can contain only one path and in this case, the _offset_ parameter is used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T060912Z" creationid="aceway" creationdate="20170205T060912Z">
        <seg>这个数组可以只包含一条路径,这种情况时必须使用_offset_参数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This blended animation will interpolate FROM the current object's state.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T155922Z" creationid="aceway" creationdate="20160402T111742Z">
        <seg>被渲染了的动画将被添加到当前对象状态上. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This button and resulting pull-down selector allows you to adjust the font size of the code in the playground editor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160426T142931Z" creationid="aceway" creationdate="20160426T142931Z">
        <seg>该按钮按钮和它提供的下拉选择器允许你修改娱乐场编辑器里代码的字体大小.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This button causes the right-side rendering canvas to go into fullscreen mode.&amp;nbsp; Upon entering fullscreen mode, your browser will provide instructions about how to exit fullscreen mode and return to the playground's default split-screen mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160426T144907Z" creationid="aceway" creationdate="20160426T144907Z">
        <seg>这个按钮会使右边的渲染画布进入全屏模式.&amp;nbsp; 在进入全屏模式时, 你的浏览器会提供指令来退出全屏模式或返回到娱乐场的默认分屏模式.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This button simply empties all the code out of the playground editor.&amp;nbsp; It is often used in preparing for the pasting-in of a createScene() function, or in preparation for some experimenting that you are about to embark-upon.&amp;nbsp; The BabylonJS playground is a fantastic way to create experiments using the BabylonJS framework.&amp;nbsp; It is a wonderful way to learn.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160426T142726Z" creationid="aceway" creationdate="20160425T150008Z">
        <seg>这个按钮简单的清空娱乐场编辑器里的所有代码.&amp;nbsp; 它经常用在意境准备好代码直接往里粘贴createScene()函数代码, 或者用在当你准备做些试验的代码尝试时.&amp;nbsp; BabylonJS娱乐场是使用BabylonJS框架来创建试验代码的非常棒的地方.&amp;nbsp; 它是个美妙的学习方法.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This camera works closely with Babylon.js Gamepad, Gamepads, and Xbox360Pad classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T132757Z" creationid="aceway" creationdate="20170206T132757Z">
        <seg>这种相机同Babylon.js的游戏手柄，游戏手柄类以及Xbox360Pad类密切接合起来工作.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be any mesh property, depending upon what you want to change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T054051Z" creationid="aceway@qq.com" creationdate="20160331T014336Z">
        <seg>这个可以是网格的任何属性，取决于你要修改什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be set to _null_,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T111309Z" creationid="aceway" creationdate="20160507T111309Z">
        <seg>这个可以设置为 _null_,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This causes the speed of the effect to cycle across about a 20 second time span.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T095554Z" creationid="aceway" creationdate="20170131T095554Z">
        <seg>这导致粒子效果以大约20秒为一个跨度循环.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This color is then used by materials to determine the final color of every pixel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170208T132704Z" creationid="aceway" creationdate="20170208T132704Z">
        <seg>然后这种颜色被用来决定每个像素的材质的最终颜色.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This ellipsoid represents our player’s dimensions: a collision event will be raised when a mesh comes in contact with this ellipsoid, preventing our camera from getting too close to this mesh:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T035759Z" creationid="aceway" creationdate="20170130T034702Z">
        <seg>这个椭球体表示我们播放器大小: 当网格和椭球体发生接触时就会抛出一个碰撞事件，以预防我们的相机和该网格考得太近:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This file is included in many of our demos, or it can be downloaded by [**clicking right here**](http://handjs.codeplex.com/releases/view/119684).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T133915Z" creationid="aceway" creationdate="20170205T133915Z">
        <seg>在我们许多的演示中都包含有该文件，也可以通过 [**点击这里**](http://handjs.codeplex.com/releases/view/119684)来下载它.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This filter uses Poisson sampling to soften shadows.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T120142Z" creationid="aceway" creationdate="20170204T120142Z">
        <seg>这个过滤器使用泊松采样柔化阴影.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This function can be very useful for complex animation like games, where characters have to move depending on many parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T151447Z" creationid="aceway" creationdate="20160402T151409Z">
        <seg>这个函数对复杂动画特别有用,比如一些游戏里角色的移动必需依赖于许多参数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This function returns a ```BABYLON.Animatable``` object that you can use to get access to individual animations (for instance using ```getAnimationByTargetProperty``` function).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T104358Z" creationid="aceway" creationdate="20160402T104358Z">
        <seg>这个函数返回一个 ```BABYLON.Animatable``` 对象,通过该对象能够访问个别的动画 (例如使用 ```getAnimationByTargetProperty``` 功能).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This function uses a shadow map: a map of your scene generated from the light’s point of view, as you can see here:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T104251Z" creationid="aceway" creationdate="20170204T104251Z">
        <seg>这个函数使用阴影映射: 从光源点视角生成的场景映射, 正如你在此处所见:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This function will be called instead of regular update (age, position, color, etc.).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T102448Z" creationid="aceway" creationdate="20170131T102448Z">
        <seg>当粒子老化、位置变化、颜色变化等时该函数会被调用以取代常规的更新.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This function will try to move the mesh according to given velocity and will check if there is no collision between current mesh and all meshes with checkCollisions activated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T041604Z" creationid="aceway" creationdate="20170130T041604Z">
        <seg>当启用碰撞检测时，此函数将根据给定的加速度移动网格，并检测当前网格和任何其它网格对象间是否会碰撞.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This image is the elevation data for your ground.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T095435Z" creationid="aceway" creationdate="20170204T095435Z">
        <seg>此图片就是地形的高程数据.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This image will now be used to generate our ground, using the different variants of gray of our picture.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T095334Z" creationid="aceway" creationdate="20170204T095334Z">
        <seg>这个图片将被用来生成我们的地形, 使用图片上不同的灰度产生不同的变形.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a one-shot particle emission, so this function overrides the previous “emitRate” parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T074537Z" creationid="aceway" creationdate="20170131T074537Z">
        <seg>这是个一次性的粒子发射，因此这个功能覆盖了之前的发射速率(“emitRate”)参数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a picture of the playground's pop-up compilation error detector panel.&amp;nbsp; A compilation error is an error detected by the BabylonJS framework... after you have clicked the Run button.&amp;nbsp; It is not a syntax error detected by the editor, but the editor might ALSO detect it and possibly mark the problem line with a red X icon along its left side.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T025420Z" creationid="aceway@qq.com" creationdate="20160427T025420Z">
        <seg>这是张弹出编译错误检测面板的娱乐场图片。&amp;nbsp; 编译错误是当你点击运行按钮后BabylonJS框架检测出来的错误&amp;nbsp; 它不是编辑器检测到的语法错误, 但是编辑器也可能检测到它并使用红色X图标在其左侧将问题标示出来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is called white-boarding.&amp;nbsp; It is an easy way to allow many people to work on your createScene function and help you figure out what is wrong.&amp;nbsp; See how the createScene function is 'portable'?&amp;nbsp; You took it from your home, to the playground, then played with it there for awhile.&amp;nbsp; Then, if needed, you clicked the playground's **SAVE** button, which gave it a URL.&amp;nbsp; &amp;nbsp;Then you went to the forum and showed that URL to others, and asked for their help.&amp;nbsp; Handy, huh?&amp;nbsp; We think so.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160404T100906Z">
        <seg>这就是所谓的白板.&amp;nbsp; 它使得其他人能很容易的在你创建的场景上工作, 并帮你指出错误之处.&amp;nbsp; 清楚了创建场景函数是如何'可移植'了么?&amp;nbsp; 从家里获得, 扔到娱乐场, 然后在上面折腾一阵.&amp;nbsp; 如果有必要, 你可以点击娱乐场上的 **保持** 按钮, 产生一个网址.&amp;nbsp; &amp;nbsp;最后到论坛上讲网址告诉其他人, 向他们求助.&amp;nbsp; 很方便吧, 哼??&amp;nbsp; 我们认为是这样的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is especially useful if you want to use light maps baked into textures.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T150542Z" creationid="aceway" creationdate="20160521T150324Z">
        <seg>这特别有用, 如果你想使用光照贴图烘焙到纹理.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the complete version of babylon.js.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T071013Z" creationid="aceway@qq.com" creationdate="20160427T071013Z">
        <seg>这个是完整的babylon.js版本.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the density of particles, the rate of particle flow:
```javascript
particleSystem.emitRate = 1000;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T074025Z" creationid="aceway" creationdate="20170131T074025Z">
        <seg>这是粒子的密度, 粒子流的速率:
```javascript
particleSystem.emitRate = 1000;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the first of three consecutive tutorials that talk about scene environment factors and effects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T103658Z" creationid="aceway" creationdate="20170131T103658Z">
        <seg>这是三个连续教程的第一部分，谈论场景的环境因素和效果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the output of this configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T031558Z" creationid="aceway" creationdate="20170131T031558Z">
        <seg>这是该配置的输出:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is very handy, and again, we love it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T022526Z" creationid="aceway@qq.com" creationdate="20160427T022526Z">
        <seg>这个非常方便，我们再次爱死它了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is why the sources must be stored in a location the web server can serve.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T102553Z" creationid="aceway@qq.com" creationdate="20160427T102553Z">
        <seg>这就是为什么资源必须存储在WEB服务器能够访问的位置.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This makes the skybox follow our camera's position.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T025207Z" creationid="aceway" creationdate="20170204T025207Z">
        <seg>这使天空盒跟随我们相机的位置.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This manager is mandatory, even if you want to create one sprite.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170122T111523Z" creationid="aceway" creationdate="20170122T111523Z">
        <seg>这个管理器是强制的，即使你至想创建一个精灵。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that each side only has a front view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T115608Z" creationid="aceway" creationdate="20160507T115608Z">
        <seg>这意味着每个面只有一边可见.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This mode is generaly used to build a new version soon to be publicly released, the compilation takes some time so it's not suitable for developmenent/test roundtrips.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T092848Z" creationid="aceway@qq.com" creationdate="20160427T092848Z">
        <seg>这个模式通常用来创建一个新版本快速发布, 编译需要花费些时间所以不适合用在开发/测试流程里.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This mode is more suitable when you make changes in the library, instead of relying on Gulp to generate the release files you simply compile all the .ts files into .js (and .js.map) files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T093235Z" creationid="aceway@qq.com" creationdate="20160427T093235Z">
        <seg>这种模式使用与你修改库时, 与依赖Gulp 来生成发布文件相反，你可以简单的将所有的.ts文件编译成.js (以及.js.map)文件.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This parameter is optional.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T115001Z" creationid="aceway" creationdate="20160507T115001Z">
        <seg>这个参数时可选的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section of the tutorial is under construction.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T101140Z" creationid="aceway" creationdate="20170131T101140Z">
        <seg>本教程的这节正在构建中.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This texture must have been prepared to be a skybox, in a dedicated directory, named “skybox” in our example:
```javascript
skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture("textures/skybox", scene);
skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;
```
(More about reflectionTextures can be found in our [Unleash the Standard Material](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/01/babylon-js-unleash-the-standardmaterial-for-your-babylon-js-game.aspx) tutorial.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T034700Z" creationid="aceway" creationdate="20170204T034700Z">
        <seg>这纹理必须时为天空盒准备的, 它在我们这个例子里位于专用目录,名为"天空盒":
```javascript
skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture("textures/skybox", scene);
skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;
```
(关于反射纹理(reflectionTextures)的更多信息可以去我们的[运用标准材质](http://blogs.msdn.com/b/eternalcoding/archive/2013/07/01/babylon-js-unleash-the-standardmatNext, we apply our special sky texture to iterial-for-your-babylon-js-game.aspx)教程查看.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This time, I would like you to press the **Get .zip** button.&amp;nbsp; The playground will open a small panel allowing you to download this scene.&amp;nbsp; Save the zip file in some new empty folder on your home computer.&amp;nbsp; Now use an UNZIP utility program to unzip it.&amp;nbsp; Notice that there is one file in the folder, called index.html.&amp;nbsp; Please load that file into a text editor or programming editor.&amp;nbsp; Does it look like the big picture above?&amp;nbsp; Sure it does.&amp;nbsp; ANY scene from the Babylon.js playground, including its pre-installed demo scenes, can be brought to your home with the **Get .zip** button.&amp;nbsp; Most of them will look very similar to the big picture, above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160404T103716Z">
        <seg>这次,我希望你按下 **获取zip压缩包** 按钮.&amp;nbsp; 娱乐场将打开一个小面板让你下载该场景.&amp;nbsp; 保存这个zip压缩文件到你家里电脑上某个新的空文件夹下.&amp;nbsp; 现在使用一个 UNZIP 工具程序解压开.&amp;nbsp; 注意那个文件夹下有一个index.html文件.&amp;nbsp; 请将该文件用文本编辑器或编程用 编辑器打开.&amp;nbsp; 它看起来像上面的大图片吧?&amp;nbsp; 必需的.&amp;nbsp; Babylon.js 娱乐场的任何场景, 包括它里面预装的演示场景, 都可以通过 **获取.zip压缩包** 按钮下载到你家里的电脑上.&amp;nbsp; 其中的大部分看起来都非常像上面的大图片.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This time, another friend and hero of ours...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T052415Z" creationid="aceway@qq.com" creationdate="20170207T052415Z">
        <seg>这次，我么另一位朋友和英雄...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This time, we only want 2 instances, and we said that our sprite’s size is 64.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170123T011446Z" creationid="aceway@qq.com" creationdate="20170123T011446Z">
        <seg>这次，我们仅要2个实例，而且我们精灵的尺寸是64像素的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tutorial is going to show you two ways of collision detection: the first one is to raise a collision event when two meshes are in contact, the other one is detecting contact between a mesh and a single point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T084054Z" creationid="aceway" creationdate="20170130T084054Z">
        <seg>本教程里将为你展示两种碰撞检测的方法: 第一种时当网格彼此相交时抛出碰撞事件，另一种是检测网格和单点的接触.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tutorial is going to talk about the particle system in BabylonJS.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T022648Z" creationid="aceway" creationdate="20170131T022648Z">
        <seg>本教程会谈论BabylonJS里的粒子系统.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This version is aimed for production.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T071124Z" creationid="aceway@qq.com" creationdate="20160427T071124Z">
        <seg>这个版本是以生产环境为目标的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This version is aimed to be used for debugging purpose only.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T070704Z" creationid="aceway@qq.com" creationdate="20160427T070704Z">
        <seg>这个版本目的仅仅是供调试使用的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This version of babylon.js does not include web worker support for collision.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T071746Z" creationid="aceway@qq.com" creationdate="20160427T071339Z">
        <seg>这个版本的babylon.js没有WebWorker(H5中的新技术)来解决冲突问题.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will allow others to help you with problems, and will also allow you to help others with their problems.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160429T141239Z" creationid="aceway" creationdate="20160429T141239Z">
        <seg>这个允许其他人帮助你解决问题,也允许你帮助其他人解决问题.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will animate our players in more than 40 positions, depending upon the situation (walking, jumping,…).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T122418Z" creationid="aceway" creationdate="20170129T122418Z">
        <seg>这个会演示角色的40多个动作定位，取决于具体的情况 (走路，跳跃,…).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This would be handy for user-controlled walking characters, or reacting to value changes from an input device.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T111929Z" creationid="aceway" creationdate="20160402T111929Z">
        <seg>这会对用户很方便 - 例如:控制行走中的角色, 或者实时响应来自输入设备的数据值变化.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those are the enclosing tokens for an array, yet another kind of Javascript value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T141921Z" creationid="aceway" creationdate="20160503T141921Z">
        <seg>这两个是数组的起止标志, 数值是Javascript的另一种值类型.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those cameras have an input manager that is designed for those advanced scenarios.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T142914Z" creationid="aceway" creationdate="20170207T142914Z">
        <seg>这些相机有个输入管理器，是为高级情景设计的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those mountains are very easy to generate with Babylon.js, and with only a single function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T095732Z" creationid="aceway" creationdate="20170204T045924Z">
        <seg>通过Babylon.js非常容易生成这些山峰, 而且只需要一个函数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To achieve today’s animated scene, we begin by creating our environment:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T161219Z" creationid="aceway@qq.com" creationdate="20160331T014002Z">
        <seg>为了实现今天的动态场景，我们开始创建自己的环境：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To activate collisions, just call ```camera.checkCollisions = true```.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T080534Z" creationid="aceway" creationdate="20170130T080534Z">
        <seg>为了启用碰撞检测，仅需调用 ```camera.checkCollisions = true```.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To apply a material to them, you will need to create a new material object like this:
```javascript
var materialSphere1 = new BABYLON.StandardMaterial("texture1", scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T122947Z" creationid="aceway" creationdate="20160508T122947Z">
        <seg>为了给它们应用材质, 你需要像这样的创建一个新的材质对象:
```javascript
var materialSphere1 = new BABYLON.StandardMaterial("texture1", scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To avoid costly calculation by checking many details on a mesh, Babylon engine creates a bounding box around the object, and tests for intersection between this box, and the colliding mesh.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T085718Z" creationid="aceway" creationdate="20170130T085245Z">
        <seg>为了避免网格上大量细节的检测计算销， Babylon引擎在物体的周围创建了一个边界盒, 以及碰撞网格.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To be able to use this function, you need to know that :
- Your animation will have predefined key frames (Only 2 keyframes are generated : **Start** and **End**)
- The animation works only on **AbstractMesh** objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T111059Z" creationid="aceway" creationdate="20160402T111059Z">
        <seg>为了使用该函数,你需要知道这些:
- 你的动画需要有预定义的关键帧 (仅有2个关键帧被创建 : **开始** 和 **结束**)
- 这些动画仅在 **AbstractMesh** 对象上有效.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To be honest, a light is not an absolute requirement.&amp;nbsp; If the mesh in a scene... all have a material.emissiveColor or material.emissiveTexture properly set, then they will each produce their own light.&amp;nbsp; They will be 'self-illuminated'.&amp;nbsp; Careful, it is easy to get lost in a scene without a light.&amp;nbsp; Good advice would be to ALWAYS have one light (a HemisphericLight aimed to the sky, is a very handy wide-lighting tool).&amp;nbsp; You can adjust its .intensity value to set its brightness.&amp;nbsp; We have a tutorial in our Playpen Series... dedicated to talking about lights.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T145335Z" creationid="aceway" creationdate="20160410T142433Z">
        <seg>老实说, 光源不是绝对必需的.&amp;nbsp; 如果场景里的网格对象都设置了material.emissiveColor(材质的颜色)或material.emissiveTexture(材质的纹理)属性, 那么它们自己会产生各自的光.&amp;nbsp; 它们将是 '自发光的'.&amp;nbsp; 注意, 如果一个场景里没有光是很容易迷失的.&amp;nbsp; 好的建议是总是创建一个光源(半球体光源(HemisphericLight)是个非常方便的灯光工具 - 应用到天空体上).&amp;nbsp; 你可以通过调整它的 .intensity 值来设置光的亮度.&amp;nbsp;在操练系列教程里我们有一个例子, 专门谈论各种光源.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define the particle’s texture, add a line like this:
```javascript
particleSystem.particleTexture = new BABYLON.Texture("Flare.png", scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T031234Z" creationid="aceway" creationdate="20170131T031234Z">
        <seg>为了定义纹理，添加一行这样的代码:
```javascript
particleSystem.particleTexture = new BABYLON.Texture("Flare.png", scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To do so, just set ```materialSphere1.useAlphaFromDiffuseTexture```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T133959Z" creationid="aceway" creationdate="20160508T133959Z">
        <seg>要做到这点, 只需设置 ```materialSphere1.useAlphaFromDiffuseTexture```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To do so, you can define the bias (which is 0.00005 by default).:
```javascript
shadowGenerator.bias = 0.01;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T105412Z" creationid="aceway" creationdate="20170204T105412Z">
        <seg>要做到这点,你可以定义偏差(默认值是0.00005):
```javascript
shadowGenerator.bias = 0.01;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get the best rendering, you will want to know when your meshes are in contact with each other.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T081400Z" creationid="aceway" creationdate="20170130T081400Z">
        <seg>为了更好的渲染此种情景，你需要知道你的网格具体什么 时候彼此相交的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To give a perfect illusion of a beautiful sunny sky, we are going to create a simple box, but with a special texture.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T024843Z" creationid="aceway" creationdate="20170204T024843Z">
        <seg>为了给漂亮的晴朗天空一个完美的演绎, 我们准备创建一个简单的盒子,但是它具有特殊的纹理.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To give another example, look at this snippet:
```javascript
var spriteManagerPlayer = new BABYLON.SpriteManager("playerManagr","Assets/Player.png", 2, 64, scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170123T011337Z" creationid="aceway@qq.com" creationdate="20170123T011337Z">
        <seg>在举一个例子，看看这个代码片段:
```javascript
var spriteManagerPlayer = new BABYLON.SpriteManager("playerManagr","Assets/Player.png", 2, 64, scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To give your scene a more realistic effect, we are now going to learn [**how to manage lights**](http://doc.babylonjs.com/tutorials/Lights).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T143616Z" creationid="aceway" creationdate="20170207T143616Z">
        <seg>为了给你的场景提供更真实的效果，现在我们开始学习 [**如何管理光源**](http://doc.babylonjs.com/tutorials/Lights).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To help you generate those gray-scale height maps, you can use software such as “Terragen”, or ”Picogen”.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T100355Z" creationid="aceway" creationdate="20170204T100355Z">
        <seg>为了帮助你生成这些灰度高度图,你可以使用诸如“Terragen”或”Picogen”等软件.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To keep your code compatible with the Babylon.js Playground, we recommend that you insert a 'createScene' function at this point.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T034728Z" creationid="aceway@qq.com" creationdate="20160429T034728Z">
        <seg>为了保持你的代码和Babylon.js娱乐场兼容, 我们建议你在此处插入一个 'createScene' 函数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn this, go [here!](http://doc.babylonjs.com/tutorials/Height_Map)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T045503Z" creationid="aceway" creationdate="20170204T045503Z">
        <seg>要学习这个,去[这儿!](http://doc.babylonjs.com/tutorials/Height_Map)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To perform this magic trick, the first thing to do is to create a new object, which will be the particle emitter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T025438Z" creationid="aceway" creationdate="20170131T025438Z">
        <seg>为了执行这个魔法，首先需要创建一个新的粒子发射器对象.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To put dynamics in it, we are going to learn how to tell your computer to move your meshes in any way you choose.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T053931Z" creationid="aceway" creationdate="20160330T033249Z">
        <seg>为了给它注入动态，我们将开始学习如何控制电脑来按照你指定的方式移动你创建的网格对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To read more about how workers were integrated head to Raanan Weber's blog:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T051006Z" creationid="aceway" creationdate="20170130T051006Z">
        <seg>想读到更多关于工作线程是如何实现的，请移步到Raanan的网页博客:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To replicate this movement, we have to do 3 simple steps:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T130653Z" creationid="aceway" creationdate="20170129T130653Z">
        <seg>要复现这个运动, 我们需要做简单的3步:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Touch is a type a 'gesture', whether it be on a pad or screen, with finger(s), stylus, glove, feet, or laser pointer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T125913Z" creationid="aceway" creationdate="20170206T125603Z">
        <seg>触碰是种'姿态', 无论在平板还是屏幕上使用手指、手写笔、手套、脚指或激光笔.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Try to memorize this web page layout, and see how the createScene function is at the heart of it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160429T130143Z" creationid="aceway" creationdate="20160429T130143Z">
        <seg>努力记住这个页面布局, 而且弄清楚createScene函数是它的核心.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Two of the most-used values in Babylon.js, are Vector3 values and Color3 values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T135134Z" creationid="aceway" creationdate="20160421T135134Z">
        <seg>Babylon.js里最常用的两种值是 Vector3 值和 Color3 值.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Understanding height maps is the main objective of this tutorial.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T050419Z" creationid="aceway" creationdate="20170204T050235Z">
        <seg>理解高度图是本教程的主要目的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use [Cmder](http://cmder.net/) or any Shell, go to the directory you want to clone your repo, then clone it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T094819Z" creationid="aceway@qq.com" creationdate="20160427T094819Z">
        <seg>使用[Cmder](http://cmder.net/) 或者其它任意Shell, 转到你希望存储仓库的地方，然后复制出一个仓库来.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Values... are often the things that are stored in an object's properties ('pockets') and the things that are returned when GETTER methods are called.&amp;nbsp; As crazy as this sounds, all values are Javascript objects.&amp;nbsp; Remember that 0.5 float that we saw earlier?&amp;nbsp; That is a Floating Point&amp;nbsp; NUMBER OBJECT.&amp;nbsp; The 'box_I_made' variable above... it is a MESH OBJECT.&amp;nbsp; The names of mesh, cameras, and lights... are STRING OBJECTS.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160421T103316Z" creationid="aceway@qq.com" creationdate="20160421T103316Z">
        <seg>值... 通常是存储在对象的属性(存储空间)里的内容, 而且可以通过调用 GETTER 方法获取到.&amp;nbsp; 也许听起来这很疯狂：所有值都是Javascript对象.&amp;nbsp; 还记得前面看到的那个0.5浮点数吗?&amp;nbsp; 那是个数值对象.&amp;nbsp; 上面那个 'box_I_made' 变量... 它是个网格对象.&amp;nbsp; 网格，像机和灯光的名称 是字符串对象.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Virtual Joysticks are on-screen (canvas atop canvas) 2D graphics that are used to control cameras or other scene items.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T052340Z" creationid="aceway@qq.com" creationdate="20170207T052340Z">
        <seg>虚拟操纵杆是屏幕上层(画布叠加)的二维图像，它用来控制相机或其它屏幕物品.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Visit that link, and you can see a fragment shader program that has been stored in a shader store.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T094329Z" creationid="aceway" creationdate="20170131T094329Z">
        <seg>访问连接，然后你就可以看到一个存储在着色器里的片段着色器程序.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Voilà, you have got your sprite displayed!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170123T011928Z" creationid="aceway@qq.com" creationdate="20170123T011928Z">
        <seg>瞧， 你已经显示出你的精灵了!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>WE LOVE IT!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T095945Z" creationid="aceway" creationdate="20170131T095945Z">
        <seg>我们喜欢它!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Watch this positioning demo scene for some time, if you please.&amp;nbsp; It will not take long for you to completely understand mesh positioning.&amp;nbsp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T033026Z" creationid="aceway" creationdate="20160423T033026Z">
        <seg>如果你乐意, 请多花些时间看这个关于位置属性的演示场景.&amp;nbsp; 要不了多久你就会完全理解网格定位了.&amp;nbsp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We are (the demo author is) varying the time parameter of the fragment shader program... from within the scene's render loop!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T095934Z" creationid="aceway" creationdate="20170131T095934Z">
        <seg>在场景的渲染循环里，我们(演示程序的作者)不断改变片段着色器程序的时间参数大小!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We are going to go step by step through [**Playground Demo Scene 02**](http://babylonjs-playground.azurewebsites.net/?2).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T130534Z" creationid="aceway" creationdate="20160503T130534Z">
        <seg>我们将一步步通过[**娱乐场演示场景02**](http://babylonjs-playground.azurewebsites.net/?2)来学习.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We are going to talk about the scene above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T084119Z" creationid="aceway" creationdate="20170130T084119Z">
        <seg>我们将讨论上面的场景.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We are so adept at making createScene functions that we can do it in our sleep, right?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T121839Z" creationid="aceway" creationdate="20160508T121839Z">
        <seg>我们对编写createScene函数已经很娴熟了,闭着眼睛都能搞定, 对吧?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can refine some parameters:
* Box around our emitter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T072701Z" creationid="aceway" creationdate="20170131T072701Z">
        <seg>我们可以优化一些参数:
* 围绕发射器的盒子.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We defined a precise point in our scene, and if our balloon intersects this point, wherever on the balloon, then the event is raised and we change the color of the balloon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T091221Z" creationid="aceway" creationdate="20170130T091221Z">
        <seg>我们在场景中定义了个精确的点, 如果我们的气球和这个点相交，那么特定事件将会被抛出，然后我们会改变气球的颜色。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have a [special tutorial dedicated to the VirtualJoysticksCamera](http://doc.babylonjs.com/tutorials/How_to_use_VirtualJoysticksCamera).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T053506Z" creationid="aceway@qq.com" creationdate="20170207T053506Z">
        <seg>我们有个[特别教程专为虚拟操纵杆相机](http://doc.babylonjs.com/tutorials/How_to_use_VirtualJoysticksCamera)准备.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have now completed an Animation for box1.scaling.x.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T155412Z" creationid="aceway" creationdate="20160402T105422Z">
        <seg>现在我们已经完全实现在x轴方向缩放 box1 的动画.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We hope to teach you a large amount of information in a very quick manner.&amp;nbsp; Often there are more ways than one to accomplish a task here.&amp;nbsp; I will let you discover those other ways by yourself.&amp;nbsp; For now we will teach you the quickest and easiest ways, determined by studying the traits of other new users of Babylon.js.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T034041Z" creationid="aceway" creationdate="20160403T033419Z">
        <seg>我们希望以一种非常快速的方式教给你大量的信息.&amp;nbsp; 通常这里的任务都有多于一种方式达成.&amp;nbsp; 我希望你自己去发现其它的方式.&amp;nbsp; 根据对Babylon.js初学者特点的研究, 现在我们教你最快最简单的方式.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We just have to position our gun’s impact picture (a plane made earlier... called impact) when the user clicks on the wall plane:
```javascript
// if the click hits the wall object, we change the impact picture position
if (pickResult.hit) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T095043Z" creationid="aceway" creationdate="20170130T094955Z">
        <seg>当用户点击墙面时我们仅需把中弹效果图(之前已经创建好的平面...所谓的中弹)放置好:
```javascript
// 如果点击到了墙面, 我们改变中弹图片位置
if (pickResult.hit) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We just make sure we have a _target_ property set ( which we did in the constructor with new BABYLON.Vector3.Zero() ), and then use _setPosition()_ to put our camera exactly where we want it, in 3D space.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T045001Z" creationid="aceway@qq.com" creationdate="20170206T045001Z">
        <seg>我们只要确保有个合适的 _旋转目标_ 属性的设置 ( 我们之前用new BABYLON.Vector3.Zero() 构造的), 然后使用 _setPosition()_ 把相机准确地放置到我们期望的三维空间中的位置.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will also fix the referenced nuget packages that are now incorrect because we moved the Visual Studio project one level up.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T101127Z" creationid="aceway@qq.com" creationdate="20160427T101127Z">
        <seg>我们也需要修复因移动Visual Studio工程到上层目录产生的nuget包引用异常的问题</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will begin with the two most-common types - the FreeCamera and the ArcRotateCamera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T120545Z" creationid="aceway" creationdate="20170205T120545Z">
        <seg>我们将从两种最普通类型 - 自由相机和弧形旋转相机开始.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will have much more to say, soon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T101205Z" creationid="aceway" creationdate="20170131T101205Z">
        <seg>很快我们会谈论更多内容.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will start off with simple scene `clearColor` (background color), then talk briefly about scene `ambientColor`, then on to 6-texture skyboxes, and then fog to give an illusion of depth to your scenes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T104213Z" creationid="aceway" creationdate="20170131T104213Z">
        <seg>我们将从简单的场景清理颜色(`clearColor` 设置背景色)开始, 然后简述下场景的环境色`ambientColor`), 然后是6纹理的天空盒, 最后是为场景提供深度感的雾.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will talk about that nice fog effect, shortly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T104509Z" creationid="aceway" creationdate="20170131T104509Z">
        <seg>不久我们将讨论那个漂亮的雾效果.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will use the “intersectsMesh()” function, with two parameters: the mesh to be checked, and the precision of the intersection (boolean).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T084919Z" creationid="aceway" creationdate="20170130T084919Z">
        <seg>我们用带两个参数的 “intersectsMesh()” 函数 : 被检测的网格，和相交的精度(布尔类型).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Welcome to The Babylon.js Primer, an introduction to some of the things you will need to know in order to get the most out of this useful Javascript-based WebGL framework.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T032215Z" creationid="aceway" creationdate="20160403T032215Z">
        <seg>欢迎阅读 Babylon.js 初级教程, 这是后面学习最棒的基于Javascript的网页图形库框架所需必备知识的一个基础介绍.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What can you say about the BabylonJS webGL rendering canvas, other than "IT IS THE COOLEST THING ON THE PLANET!".&amp;nbsp; This right-side area of the playground is where the BabylonJS webGL framework attempts to render the scene that you currently have in the editor.&amp;nbsp; Is the rendering canvas blank?&amp;nbsp; Did you click the Run button?&amp;nbsp; Have you got a camera?&amp;nbsp; Is the camera aimed correctly?&amp;nbsp; Do you have some lighting or an emissiveColor set on your mesh's material?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T023517Z" creationid="aceway@qq.com" creationdate="20160427T023517Z">
        <seg>对于BabylonJS的网页图形库渲染画布你怎么评价, 没有比这个说法更牛逼的了 "它是这个星球上最酷的事情!".&amp;nbsp; 娱乐场的右边部分是BabylonJS网页图形库框架用来渲染场景的区域，而且你可以通过左边的编辑器实时控制场景.&amp;nbsp; 渲染出来的画布还是空白么?&amp;nbsp; 你点击了运行按钮么?&amp;nbsp; 你有创建相机么?&amp;nbsp; 相机的目标设置正确么?&amp;nbsp; 你网格的材质设置好了光源或散射色么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is a framework, you ask?&amp;nbsp; You can think of a framework as scaffolding for a building, allowing you to build around it without worrying about the foundation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160403T032705Z" creationid="aceway" creationdate="20160403T032705Z">
        <seg>你想知道什么是框架么?&amp;nbsp; 你可以把框架认为成 建筑里的脚手架, 它支撑你围绕它创建新东西而不必为底层细节操心.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is a ribbon ?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T103031Z" creationid="aceway" creationdate="20160507T102137Z">
        <seg>什么是板带 ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When creating a sprite manager, you have to decide a few parameters:
* Name: a name for this manager.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170122T111703Z" creationid="aceway" creationdate="20170122T111703Z">
        <seg>当创建一个精灵管理器时，你需要确定一些参数:
* Name: 该管理器的名字.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the user is manipulating the camera, it can be awkward if he can see under the ground, or if he zooms-out outside the skybox.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T102359Z" creationid="aceway" creationdate="20170204T102359Z">
        <seg>当用户在操作相机时, 如果能够从地面下面看到高度图或在天空盒外放大高度图,那么它(高度图)会显得比较拙劣.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we included the "src" folder it also included the .js files corresponding to the .ts, we have to remove them from the project as we have no use of them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T100856Z" creationid="aceway@qq.com" creationdate="20160427T100856Z">
        <seg>当我们包含进 "src" 文件夹时，也包含进了和 .ts 文件相应的 .js 文件, 我们需要将它们从工程里删除掉，因为我们不使用它们.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we use that useful _setPosition()_ method, we need not concern ourselves with _alpha_, _beta_, and _radius_.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T044723Z" creationid="aceway@qq.com" creationdate="20170206T044723Z">
        <seg>当我们使用得力的 _setPosition()_ 方法时, 我们自己不需要关心 _经度_, _纬度_, 和 _半径_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When working with all files, you can provide the following information to the engine:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T070055Z" creationid="aceway@qq.com" creationdate="20160427T070055Z">
        <seg>当所有这些文件都正常工作时，你可以将下面的信息提供给引擎:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you click Get .zip at the Babylon.js playground, you get a zip that contains a file called index.html.&amp;nbsp; If you examine index.html in a text editor, you will see a file that looks very much like The Big Picture far above.&amp;nbsp; Look at the external includes section... the first four HTML SCRIPT elements/tags.&amp;nbsp; The .src attribute within each of those SCRIPT elements... point to URL's located at the Babylon.js web site.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160423T081649Z">
        <seg>当你在娱乐场里点击获取.zip时, 你得到一个zip压缩文件其中包含个叫做index.html的文件.&amp;nbsp; 如果你在文本编辑器中查看这个index.html文件, 你将看到一个和上面大图里非常像的文件内容.&amp;nbsp; 查看下外部包含的段落... 第一批4个页面SCRIPT元素/标签.&amp;nbsp; 每个标签里的.src属性... 指向里Babylon.js网站的网址.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you save a scene to the playground's database in order to share the URL with others or remember the scene for later, the URL will look something like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T030925Z" creationid="aceway@qq.com" creationdate="20160427T030925Z">
        <seg>当你想同人分享网址或为之后工作记住场景而将一个场景保存到娱乐场的数据库里时，那么网址看起来会像这样的:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With Visual Studio you will be able to build the library along with your custom code and being able to debug and test both of them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T092426Z" creationid="aceway@qq.com" creationdate="20160427T092426Z">
        <seg>通过Visual Studio你将能够将库和你的代码一起编译，而且能测试两者(库和你的代码.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the touch of a touchscreen, or the click of a mouse button, the virtual joysticks activate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T052824Z" creationid="aceway@qq.com" creationdate="20170207T052824Z">
        <seg>通过触碰触摸屏，或者点击鼠标键激活虚拟操纵杆.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wow, this is a lot of information, isn't it?&amp;nbsp; You have learned what a scene file (the big picture) looks like, you have learned about its important createScene() function and how copy'n'paste portable it is.&amp;nbsp; You have seen a createScene() function in the Babylon.js playground, and you have been introduced to the playground's RUN, SAVE, and Get .zip buttons.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160404T104506Z">
        <seg>哇, 到这儿信息量很大了,不是吗?&amp;nbsp; 你已经学了如何识别一个场景文件 (大突破) 了, 学了它重要的 createScene() 函数, 而且学了怎么复制粘贴它到别处.&amp;nbsp; 你已经见识了娱乐场里的 createScene() 函数, 而且为你介绍了它的 运行, 保存 和 获取.zip压缩包的按钮.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Yes, that is quite a function, but do not let it scare you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T040321Z" creationid="aceway@qq.com" creationdate="20160429T040321Z">
        <seg>是的，这就是个函数，但是不要让它把你吓着了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You are becoming a Babylon.js TOOLS expert.&amp;nbsp; When I say 'tools', I mean... you have learned the things that SUPPORT the createScene() function.&amp;nbsp; Are you ready to engage in learning some things about the code that is used in a createScene() function?&amp;nbsp; I knew you were.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T145740Z" creationid="aceway" creationdate="20160404T145740Z">
        <seg>您正在成为Babylon.js工具专家.&amp;nbsp; 我所说的 '工具', 是指... 那些你学到的支持 createScene() 函数的东西.&amp;nbsp; 你已经准备好加入学习代码知识,以用在创建场景的功能么?&amp;nbsp; 我知道你准备好了.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You are done!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T071613Z" creationid="aceway@qq.com" creationdate="20160429T071613Z">
        <seg>你做到了!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You are finally at the bottom of this tutorial.&amp;nbsp; It was a long, but fun trip, wasn't it?&amp;nbsp; Things will be easy from now on.&amp;nbsp; The next tutorial in the Playpen Series tutorials... is about building a very basic scene.&amp;nbsp; I think it will be quite easy and fast, for you.&amp;nbsp; You have graduated from tutorial #0... this tutorial.&amp;nbsp; You are already a Babylon.js expert.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T085558Z" creationid="aceway" creationdate="20160423T085558Z">
        <seg>你终于到达这个教程的底部了.&amp;nbsp; 它很长, 但是很有趣, 不是么?&amp;nbsp; 从现在开始将很容易的.&amp;nbsp; 下一演练系列的教程里... 是关于常见一个非常基础的场景的.&amp;nbsp; 我想对你而言,它会非常简单而且快; 你已经从本教程#0毕业啦... &amp;nbsp; 你已经是个Babylon.js专家啦.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add as many vectors as you wish, but notice that the LAST vector3 does not have a comma following it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T142249Z" creationid="aceway" creationdate="20160503T142249Z">
        <seg>可以添加任意多个向量, 但是注意最后一个三元向量之后没有逗号跟随.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add some behaviors to your animations, using easing functions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T125451Z" creationid="aceway" creationdate="20160402T125451Z">
        <seg>你可以使用简化函数给动画添加一些不同的行为.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also [**read about Virtual Joysticks**](http://blogs.msdn.com/b/davrous/archive/2013/02/22/creating-an-universal-virtual-touch-joystick-working-for-all-touch-models-thanks-to-hand-js.aspx) on David's blog.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T052723Z" creationid="aceway@qq.com" creationdate="20170207T052723Z">
        <seg>你也可在David的博客上阅读[**关于虚拟操纵杆**](http://blogs.msdn.com/b/davrous/archive/2013/02/22/creating-an-universal-virtual-touch-joystick-working-for-all-touch-models-thanks-to-hand-js.aspx).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also control how specular behaves with alpha.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T151746Z" creationid="aceway" creationdate="20160521T151746Z">
        <seg>你可也可以使用alpha值来控制镜面的行为表现.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also control the global intensity of any light by using the *intensity* property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170208T133643Z" creationid="aceway" creationdate="20170208T133643Z">
        <seg>你也可以通过 *intensity* 属性来控制任何光源的全局强度.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also do the same thing with a mesh by playing with _mesh.ellipsoid_ property and _mesh.moveWithCollisions(velocity)_ function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T041029Z" creationid="aceway" creationdate="20170130T041029Z">
        <seg>你也能够在网格间执行同样的功能，通过使用 _mesh.ellipsoid_ 属性并调用 _mesh.moveWithCollisions(velocity)_ 函数来实现.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also get access to current running ```BABYLON.Animatable``` objects by using ```scene.getAnimatableByTarget()``` providing the target object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T105257Z" creationid="aceway" creationdate="20160402T105257Z">
        <seg>通过提供目标对象来调用 ```scene.getAnimatableByTarget()``` 你也可以访问当前正在运行的 ```BABYLON.Animatable``` 对象.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also participate in this project by going to our Github page: [https://github.com/BabylonJS/Babylon.js](https://github.com/BabylonJS/Babylon.js) and also by participating in our very active forum: [http://www.html5gamedevs.com/forum/16-babylonjs](http://www.html5gamedevs.com/forum/16-babylonjs).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T131441Z" creationid="aceway" creationdate="20170204T131441Z">
        <seg>你也可以通过访问我们的Github页来参与到这个项目: [https://github.com/BabylonJS/Babylon.js](https://github.com/BabylonJS/Babylon.js) 同时参与到我们非常活跃的论坛: [http://www.html5gamedevs.com/forum/16-babylonjs](http://www.html5gamedevs.com/forum/16-babylonjs).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use _mesh.ellipsoidOffset_ to move the ellipsoid on the mesh (By default the ellipsoid is centered on the mesh)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T041919Z" creationid="aceway" creationdate="20170130T041622Z">
        <seg>你也能使用 _mesh.ellipsoidOffset_ 在网格上偏移椭球体 (默认情况下椭球体位于网格中心)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also visit the [point light shadow map playground scene](http://www.babylonjs-playground.com/#LYCSQ#12)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T130925Z" creationid="aceway" creationdate="20170204T130925Z">
        <seg>你也可以访问 [点光源映射的娱乐场景](http://www.babylonjs-playground.com/#LYCSQ#12)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can choose between “BLENDMODE_ONEONE” (default choice: source color is added to the destination color without alpha affecting the result), and “BLENDMODE_STANDARD” (to blend current color and particle color using particle’s alpha).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T074946Z" creationid="aceway" creationdate="20170131T074946Z">
        <seg>你能够在“BLENDMODE_ONEONE” (默认选择: 源色附加到目标色，不受透明通道影响), 和“BLENDMODE_STANDARD” (将当前颜色和粒子的透明通道色混合)模式间选择.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can control how you see your scene, you can choose your input and viewing devices, and you now know how to move cameras around.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T143518Z" creationid="aceway" creationdate="20170207T143518Z">
        <seg>你能控制如观看看场景，你能选择输入机制以及查看设备, 而且你知道如何移动相机.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can define a Z-axis rotation for each particle (in radian):
```javascript
particleSystem.minAngularSpeed = 0;
particleSystem.maxAngularSpeed = Math.PI;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T075627Z" creationid="aceway" creationdate="20170131T075627Z">
        <seg>你可以为每个粒子沿Z轴定义转角 (弧度单位):
```javascript
particleSystem.minAngularSpeed = 0;
particleSystem.maxAngularSpeed = Math.PI;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can define the collision radius with this code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T080638Z" creationid="aceway" creationdate="20170130T080638Z">
        <seg>你可以使用这行代码来定义碰撞半径:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can define the power of emitting particles, and the overall motion speed (0.01 is default update speed, faster updates = faster animation).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T075947Z" creationid="aceway" creationdate="20170131T075947Z">
        <seg>离可以给发射中的粒子定义力量，以及作为整体运动的速度(默认更新速度是0.01, 更快的更新速度等于更快的播放动画).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can explore all the properties and methods available on the GamepadCamera... at [our API documentation site](http://doc.babylonjs.com/classes/GamepadCamera).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T133618Z" creationid="aceway" creationdate="20170206T133618Z">
        <seg>你可以在[**我们的API文档网站**](http://doc.babylonjs.com/classes/GamepadCamera)探索手持相机具有的所有属性和方法...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can explore all the properties and methods available on the TouchCamera... at [**our API documentation site**](http://doc.babylonjs.com/classes/TouchCamera).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T131226Z" creationid="aceway" creationdate="20170206T131226Z">
        <seg>你可以在[**我们的API文档网站**](http://doc.babylonjs.com/classes/TouchCamera)探索触控相机具有的所有属性和方法...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can explore all the properties and methods available on the VirtualJoysticksCamera... at [**our API documentation site**](http://doc.babylonjs.com/classes/VirtualJoysticksCamera).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170207T053556Z" creationid="aceway@qq.com" creationdate="20170207T053556Z">
        <seg>你可以在 [**我们的API文档站点**](http://doc.babylonjs.com/classes/VirtualJoysticksCamera)探索虚拟操纵杆相机的所有属性和方法.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find the complete loader code here:
https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Loading/Plugins/babylon.babylonFileLoader.js</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T072220Z" creationid="aceway@qq.com" creationdate="20160427T072220Z">
        <seg>你可以在这儿找到完整的加载器代码:
https://github.com/BabylonJS/Babylon.js/blob/master/Babylon/Loading/Plugins/babylon.babylonFileLoader.js</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can grad the files:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T101938Z" creationid="aceway@qq.com" creationdate="20160427T101938Z">
        <seg>你可以获取这些文件:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can keep using ```player.size``` and in this case width and height will just be the same.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T121539Z" creationid="aceway" creationdate="20170129T121539Z">
        <seg>你可以继续使用 ```player.size``` 而且在这种情况下宽度和高度是一样的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can learn all about anaglyphs by visiting a [Wikipedia page that explains it thoroughly](http://en.wikipedia.org/wiki/Anaglyph_3D).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T134032Z" creationid="aceway" creationdate="20170207T134032Z">
        <seg>你可以访问[维基百页-漂浮立体技术](http://en.wikipedia.org/wiki/Anaglyph_3D)来学习其所有技术知识.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can learn all about gestures by visiting [**a wikipedia page that tells all about it**](http://en.wikipedia.org/wiki/Gesture_recognition).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T130001Z" creationid="aceway" creationdate="20170206T125814Z">
        <seg>你可以通过访问[**关于姿态的维基百页**](http://en.wikipedia.org/wiki/Gesture_recognition)学习所有的姿态技术.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can learn many more things about Babylon.js scenes... in the other [tutorials and documentation](http://doc.babylonjs.com/).&amp;nbsp; And don't forget to look at the 'createScene()' functions of the playground's pre-installed demo scenes.&amp;nbsp; The Babylon.js playground is a learning wonderland, and it is a whole lot of fun, too.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T091226Z" creationid="aceway" creationdate="20160410T144346Z">
        <seg>关于Babylon.js的场景, 在另外的 [教程和文档](http://doc.babylonjs.com/)里你可以学到许多.&amp;nbsp; 而且别忘了察看娱乐场里 'createScene()' 函数的预装演示场景.&amp;nbsp; Babylon.js的娱乐场是个学习乐园, 也充满乐趣.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can now debug the source code of Babylon.js along with yours.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T103301Z" creationid="aceway@qq.com" creationdate="20160427T103301Z">
        <seg>你现在可以使用源码调试Babylon.js了.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can play with bezier curve algorithm too, using the **BezierCurveEase(x1, y1, x2, y2)** function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T160449Z" creationid="aceway" creationdate="20160402T145650Z">
        <seg>你也能用贝塞尔曲线的算法, 使用 **BezierCurveEase(x1, y1, x2, y2)** 函数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can play with the code used in this tutorial... by visiting [**a demo at our playground**](http://babylonjs-playground.azurewebsites.net/?10).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T091406Z" creationid="aceway" creationdate="20170130T091406Z">
        <seg>通过访问[**我们娱乐厅的一个演示**](http://babylonjs-playground.azurewebsites.net/?10)，你能够体验本教程使用的这些代码.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can play with the scene and code used in this tutorial... by visiting the Babylon.js [**Playground sprites demo**](http://babylonjs-playground.azurewebsites.net/?8).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T123636Z" creationid="aceway" creationdate="20170129T123636Z">
        <seg>你可以通过访问 [**娱乐场场精灵演示**](http://babylonjs-playground.azurewebsites.net/?8) 来体验本教程的这些场景和代码.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can play with the scene used in this tutorial... by visiting the Babylon.js [**playground demo**](http://www.babylonjs-playground.com/#4HUQQ).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T040400Z" creationid="aceway" creationdate="20170130T040400Z">
        <seg>通过访问Babylon.js [**娱乐场的演示**](http://www.babylonjs-playground.com/#4HUQQ)你能够体验下我们例子里使用的场景.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can see your object in wireframe mode... by using:
```javascript
materialSphere1.wireframe = true;
 ```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T135503Z" creationid="aceway" creationdate="20160522T135503Z">
        <seg>你可以在线框模式下查看你的对象... 通过使用:
```javascript
materialSphere1.wireframe = true;
 ```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can set the amount of time the particle system is running (depends of the overall speed above).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T080155Z" creationid="aceway" creationdate="20170131T080155Z">
        <seg>你可以设置粒子系统的持续运行时间量 (取决于上面提到的粒子的整体运行速度).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify a solid color with the ```ambientColor``` property:
```javascript
materialSphere1.ambientColor = new BABYLON.Color3(1, 0.2, 0.7);
```
Or, you can use a texture:
```javascript
materialSphere1.ambientTexture = new BABYLON.Texture("grass.png", scene);
```
See the **More About Textures** section above.  Change occurrences of 'diffuse' to 'ambient', of course.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T150731Z" creationid="aceway" creationdate="20160521T150731Z">
        <seg>你可以使用 ```ambientColor``` 属性指定一个固体的颜色:
```javascript
materialSphere1.ambientColor = new BABYLON.Color3(1, 0.2, 0.7);
```
或者, 你能够使用一个纹理:
```javascript
materialSphere1.ambientTexture = new BABYLON.Texture("grass.png", scene);
```
参加上面的 **更多关于纹理** 一节.  当然, 修改 'diffuse' 为 'ambient'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify a solid color with the ```diffuseColor``` property:
```javascript
materialSphere1.diffuseColor = new BABYLON.Color3(1.0, 0.2, 0.7);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T125335Z" creationid="aceway" creationdate="20160508T125335Z">
        <seg>你可以用```diffuseColor```属性指定一个纯色:
```javascript
materialSphere1.diffuseColor = new BABYLON.Color3(1.0, 0.2, 0.7);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify a solid color with the ```emissiveColor``` property:
```javascript
materialSphere1.emissiveColor = new BABYLON.Color3(1, .2, .7);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T145615Z" creationid="aceway" creationdate="20160521T145615Z">
        <seg>你可以用```emissiveColor```属性指定一个固体的色:
```javascript
materialSphere1.emissiveColor = new BABYLON.Color3(1, .2, .7);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify a solid color with the ```specularColor``` property:
```javascript
materialSphere1.specularColor = new BABYLON.Color3(1.0, 0.2, 0.7);
```
Or, you can use a texture:
```javascript
materialSphere1.specularTexture = new BABYLON.Texture("grass.png", scene);
```
When using a texture you can set ```materialSphere1.useGlossinessFromSpecularMapAlpha``` to true to use specular map alpha as glossiness level.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160521T151700Z" creationid="aceway" creationdate="20160521T151632Z">
        <seg>你可以通过 ```specularColor``` 属性指定一个固体的颜色:
```javascript
materialSphere1.specularColor = new BABYLON.Color3(1.0, 0.2, 0.7);
```
或者, 你能过使用一个纹理:
```javascript
materialSphere1.specularTexture = new BABYLON.Texture("grass.png", scene);
```
当使用纹理时能够设置 ```materialSphere1.useGlossinessFromSpecularMapAlpha``` 为真, 从而使用镜面映射alpha的光泽度.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use an extended function to create a quick animation:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T110722Z" creationid="aceway" creationdate="20160402T110702Z">
        <seg>通过一个扩展函数你可以创建快速动画:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use gravity if you want to give an orientation to your particles (e.g.: fire particles travel upward on the Y-axis)
```javascript
//Set the gravity of all particles (not necessarily down)
particleSystem.gravity = new BABYLON.Vector3(0, -9.81, 0);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T075323Z" creationid="aceway" creationdate="20170131T075323Z">
        <seg>如果你想给粒子方向性你就可以启用重力(例如: 火焰粒子在Y轴向上)
```javascript
//为所有粒子设置重力(不一定向下)
particleSystem.gravity = new BABYLON.Vector3(0, -9.81, 0);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the **EasingMode** property to alter how the easing function behaves, that is, change how the animation interpolates.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T142847Z" creationid="aceway" creationdate="20160402T142839Z">
        <seg>你可以使用 **EasingMode** 这个属性来修改简化函数的行为, 也就是, 改变动画是如何插入的.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the [Gulp](https://github.com/BabylonJS/Babylon.js/tree/master/Tools/Gulp) script to create the main release files (babylon.js, babylon.max.js, babylon.d.ts) that will be stored in the [preview directory](https://github.com/BabylonJS/Babylon.js/tree/master/dist/preview%20release).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T092645Z" creationid="aceway@qq.com" creationdate="20160427T092645Z">
        <seg>你可以使用[Gulp](https://github.com/BabylonJS/Babylon.js/tree/master/Tools/Gulp)脚本来创建主发布文件(babylon.js, babylon.max.js, babylon.d.ts) , 它们将被存储到[之前的路径里](https://github.com/BabylonJS/Babylon.js/tree/master/dist/preview%20release).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can't damage the pre-installed demos)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T030412Z" creationid="aceway@qq.com" creationdate="20160427T030412Z">
        <seg>你不可能毁坏预装的演示程序的)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could 'externalize' the entire green section, and possibly place it into a file called... 'myJavascript.js'... maybe in a folder called 'jsfolder'.&amp;nbsp; Then you could remove the green section, and add one more EXTERNAL INCLUDE script element/tag that might look like this:
``` html
&lt;script src="./jsfolder/myJavascript.js"&gt;&lt;/script&gt;
```
You need not concern yourself with that, at this point.&amp;nbsp; Externalizing your Javascript is often done when you have written LOTS of Javascript code.&amp;nbsp; Externalizing your code into separate files helps your project be organized, but it is not necessary this early in your webGL adventures.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T030142Z" creationid="aceway" creationdate="20160404T005616Z">
        <seg>你可以把绿色部分外部化, 可以把它们放到一个叫做... 'myJavascript.js'文件里, 也许还在个叫做... 'jsfolder'的目录里.&amp;nbsp; 然后你可以移除绿色部分, 且再添加一个外部包含 脚本 元素/标签, 看起来就像这样:
``` html
&lt;script src="./jsfolder/myJavascript.js"&gt;&lt;/script&gt;
```
You need not concern yourself with that, at this point.&amp;nbsp; Externalizing your Javascript is often done when you have written LOTS of Javascript code.&amp;nbsp; Externalizing your code into separate files helps your project be organized, but it is not necessary this early in your webGL adventures.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have come a long way, have learned about shapes, lights, sprites, particles, materials.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T104810Z" creationid="aceway" creationdate="20170131T103331Z">
        <seg>你已经走过漫长的路途了，已经学了造型，光源，精灵，粒子，材质.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have seen some createScene functions, and you have noticed that much of the Javascript code used to make a Babylon.js scene... sets values on object properties.&amp;nbsp; To illustrate what I mean:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160410T145024Z" creationid="aceway" creationdate="20160410T144815Z">
        <seg>你已经见识了一些创建场景的函数, 而且你也应该注意到大量Javascript代码被用来创建Babylon.js场景... 给些代码阐述下我的意思, &amp;nbsp;比如设置对象的属性值:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have to customize it as you like.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T123648Z" creationid="aceway" creationdate="20160508T123648Z">
        <seg>你可以根据你的喜好自定义材质.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have to use **TypeScript** to submit a pull request.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T065039Z" creationid="aceway@qq.com" creationdate="20160427T065039Z">
        <seg>你必须使用 **TypeScript** 提交拉取请求.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You just have to write:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170122T111540Z" creationid="aceway" creationdate="20170122T111540Z">
        <seg>你只需像这样写代码:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may be interested in visiting [**the playground demo**](http://babylonjs-playground.azurewebsites.net/?14) that goes with this tutorial.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T102722Z" creationid="aceway" creationdate="20170204T102722Z">
        <seg>也许你有兴趣访问这个 [**娱乐场演示**](http://babylonjs-playground.azurewebsites.net/?14),那和本教程相辅相成.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may have noticed that scaling values are never negative.&amp;nbsp; It would be illogical to use a negative scaling value, and if you decide to use some negative values, unexpected results may occur.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T075646Z" creationid="aceway" creationdate="20160423T075646Z">
        <seg>你也许注意到了缩放值没有出现过负数.&amp;nbsp; 使用负数值来缩放是非法的, 而且如果你决定使用负数值, 可能会出现未知异常.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may want to read more about back-face culling at [the wikipedia page about it](http://en.wikipedia.org/wiki/Back_face_culling). </seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160522T135142Z" creationid="aceway" creationdate="20160522T135142Z">
        <seg>你也许想在[维基页](http://en.wikipedia.org/wiki/Back_face_culling)上阅读更多的背面剔除信息. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may want to reduce shadow acne resulting from not precise enough shadow map.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T105302Z" creationid="aceway" creationdate="20170204T105302Z">
        <seg>你可能希望减小因精度不够造成的阴影瑕疵.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might also be interested in our new [LinesSystem](http://doc.babylonjs.com/tutorials/Mesh_CreateXXX_Methods_With_Options_Parameter#linesystem).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T101829Z" creationid="aceway" creationdate="20160507T101829Z">
        <seg>你可能会被我们新的[线系统](http://doc.babylonjs.com/tutorilas/Mesh_CreateXXX_Methods_With_Options_Parameter#linesystem)吸引住.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might also want to read [the wikipedia page about it](http://en.wikipedia.org/wiki/Alpha_compositing).  You will encounter even more uses for it when you enjoy the BabylonJS particle system, and BabylonJS sprites system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T124734Z" creationid="aceway" creationdate="20160508T124734Z">
        <seg>你也许想阅读[关于它的维基页](http://en.wikipedia.org/wiki/Alpha_compositing).  当你在享受BabylonJS的粒子系统和精灵系统时, 你会遇到更多的透明度用途.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might want to open that playground scene in a new window or new tab, so you can switch back and forth between here and there.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160404T033725Z" creationid="aceway" creationdate="20160404T033725Z">
        <seg>你也许希望在新的浏览器窗口或标签页来打开娱乐联系的场景, 那样可以通过后退和前进切换不同场景.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might wish to use the 'Get .zip' choice on its top menu.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T130039Z" creationid="aceway" creationdate="20160503T130039Z">
        <seg>你可能想使用弹出菜单的'下载.zip压缩包' 选项.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You need at least one path to construct a ribbon and each path must contain at least four _Vector3_,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T104116Z" creationid="aceway" creationdate="20160507T104116Z">
        <seg>你需要至少一条路径形成板带,而且每条路径包含至少四个 _三元向量_,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You need to unload the project from the solution to edit it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T101204Z" creationid="aceway@qq.com" creationdate="20160427T101204Z">
        <seg>你需要将工程从解决方案写在后再编辑它.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You only have to load one large image file which will contain all animation images, one next to another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170129T121834Z" creationid="aceway" creationdate="20170129T121834Z">
        <seg>你仅需加载一个大的包含所有动画图像的图片文件.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will also have to add a line below the TypeScriptSourceMap element to enable TypeScriptExperimentalDecorators.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T101631Z" creationid="aceway@qq.com" creationdate="20160427T101631Z">
        <seg>你还要在TypeScriptSourceMap元素下面添加一行，以便启用TypeScriptExperimentalDecorators.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will find that when there is no `scene.ambientColor`, then `StandardMaterial.ambientColor` and `StandardMaterial.ambientTexture` will appear to do nothing.&amp;nbsp; Set a `scene.ambientColor` of some value, like the example above, and `StandardMaterial.ambientColor`/`StandardMaterial.ambientTexture` will become active on meshes where you have applied such.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170203T040936Z" creationid="aceway" creationdate="20170203T040936Z">
        <seg>你会发现当没有`场景环境色(scene.ambientColor)`时, `标准材质的环境色属(StandardMaterial.ambientColor)`和`标准材质的环境纹理(StandardMaterial.ambientTexture)`将没有任何表现效果.&amp;nbsp; 给`场景的环境色(scene.ambientColor)`设置一些值,就如上面例子所示,然后那些网格上的你应用了的`标准材质的环境色属(StandardMaterial.ambientColor)`以及`标准材质的环境纹理(StandardMaterial.ambientTexture)`将会被激活.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will learn more about the parameters and properties for lights, cameras, and built-in shapes... in the tutorials to come.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T040424Z" creationid="aceway@qq.com" creationdate="20160429T040424Z">
        <seg>这个教程后面你将学习光源，相机，内置造型物的更多参数和属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You won’t change the mesh itself, but just the material.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T123725Z" creationid="aceway" creationdate="20160508T123725Z">
        <seg>你不需要改变网格本身, 只要修改该材质.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your paths don't need to be parallel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T102833Z" creationid="aceway" creationdate="20160507T102833Z">
        <seg>你的路径间不需要平行.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your scene is now becoming dynamic, and all your meshes can move in all directions!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T160839Z" creationid="aceway" creationdate="20160402T152713Z">
        <seg>你的场景现在动起来了, 你的所有网格都可在所有方向上移动!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your scene looks good now, and you can imagine a lot of new landscapes!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T102834Z" creationid="aceway" creationdate="20170204T102834Z">
        <seg>你的场景现在看起来不错了,而且你能想想许多新的风景了!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[**Click here for the next tutorial.**](http://doc.babylonjs.com/tutorials/Materials)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T125954Z" creationid="aceway" creationdate="20160507T125954Z">
        <seg>[**点击这儿进入下一教程.**](http://doc.babylonjs.com/tutorilas/Materials)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[**Click right here**](http://makina-corpus.com/blog/metier/how-to-use-multimaterials-with-a-tiled-ground-in-babylonjs) to view it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T123745Z" creationid="aceway" creationdate="20160507T123745Z">
        <seg>[**点击这儿**](http://makina-corpus.com/blog/metier/how-to-use-multimaterials-with-a-tiled-ground-in-babylonjs) 查看该教程.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[**Playground Demo Scene 2 - Seven basic shapes/mesh**](http://babylonjs-playground.azurewebsites.net/?2)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T125829Z" creationid="aceway" creationdate="20160503T125829Z">
        <seg>[**娱乐场演示场景2 - 七个基本形状/网格**](http://babylonjs-playground.azurewebsites.net/?2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[**Playground Demo Scene 4 - Materials**](http://www.babylonjs.com/playground/?4)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T121438Z" creationid="aceway" creationdate="20160508T121438Z">
        <seg>[**娱乐场演示场景4 - 材质**](http://www.babylonjs.com/playground/?4)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[**babylon.js**](http://www.babylonjs.com/babylon.js)&amp;nbsp; &amp;nbsp;&lt;= right-click... save link/target</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T082406Z" creationid="aceway" creationdate="20160423T082406Z">
        <seg>[**babylon.js**](http://www.babylonjs.com/babylon.js)&amp;nbsp; &amp;nbsp;&lt;= 右击... 保存链接/目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[**cannon.js**](http://www.babylonjs.com/cannon.js)&amp;nbsp; &lt;= right-click... save link/target</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T082343Z" creationid="aceway" creationdate="20160423T082343Z">
        <seg>[**cannon.js**](http://www.babylonjs.com/cannon.js)&amp;nbsp; &lt;= 右击... 保存链接/目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[**hand.js**](http://www.babylonjs.com/hand.minified-1.2.js)&amp;nbsp; &lt;= right-click... save link/target</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T082331Z" creationid="aceway" creationdate="20160423T082331Z">
        <seg>[**hand.js**](http://www.babylonjs.com/hand.minified-1.2.js)&amp;nbsp; &lt;= 右击... 保存链接/目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[**oimo.js**](http://www.babylonjs.com/oimo.js)&amp;nbsp; &lt;= right-click... save link/target</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T082355Z" creationid="aceway" creationdate="20160423T082355Z">
        <seg>[**oimo.js**](http://www.babylonjs.com/oimo.js)&amp;nbsp; &lt;= 右击... 保存链接/目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_.createEffectForParticles_ accepts the following parameters:
- fragment name (can be in the shaders store or the id of a DOM element)
- array of additional parameters (uniforms)
- array of additional samplers (for additional textures!)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T094751Z" creationid="aceway" creationdate="20170131T094445Z">
        <seg>_.createEffectForParticles_ 接受下面的参数:
- 片段名(可以是着色器里存储的，或者时页面DOM元素的ID)
- 附加参数的数组(类型统一)
- 附加采样的数组(给附加纹理使用的!)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_A picture showing Babylon.js fog in action_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T104404Z" creationid="aceway" creationdate="20170131T104404Z">
        <seg>_一图展示Babylon.js的雾感_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_A pretty sphere with multiple lights_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170208T132422Z" creationid="aceway" creationdate="20170208T132422Z">
        <seg>_多光源下的一个漂亮球体_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_Add new files types in the web.config_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T103057Z" creationid="aceway@qq.com" creationdate="20160427T103057Z">
        <seg>_在web.config添加新的文件类型_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_Build, run et voilà !_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T103228Z" creationid="aceway@qq.com" creationdate="20160427T103228Z">
        <seg>_构建, 运行瞧瞧看哦 !_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_Cut the directory..._</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T100006Z" creationid="aceway@qq.com" creationdate="20160427T100006Z">
        <seg>_剪切目录..._</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_Final result_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T053841Z" creationid="aceway@qq.com" creationdate="20160331T013721Z">
        <seg>_最终结果_ </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_HTML page_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T102749Z" creationid="aceway@qq.com" creationdate="20160427T102749Z">
        <seg>_HTML 页面_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_Our material, a texture, applied to the plane_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T050120Z" creationid="aceway" creationdate="20170204T050120Z">
        <seg>_我们的材质, 一张纹理, 应用到该平面上_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_Paste one level up._</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T100027Z" creationid="aceway@qq.com" creationdate="20160427T100027Z">
        <seg>_粘贴到上一层._</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_Set the page as the startup one_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T102810Z" creationid="aceway@qq.com" creationdate="20160427T102810Z">
        <seg>_设置启动页面_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_The expected result_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T100043Z" creationid="aceway@qq.com" creationdate="20160427T100043Z">
        <seg>_预计的结果_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_Two Basic Shapes in a Basic Scene_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T145157Z" creationid="aceway" creationdate="20160428T145157Z">
        <seg>_具有两个造型物的基础场景_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_TypeScript file_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T102600Z" creationid="aceway@qq.com" creationdate="20160427T102600Z">
        <seg>_TypeScript文件_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_We only need the "external references" and "src" folder to compile Babylon.js._</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T100640Z" creationid="aceway@qq.com" creationdate="20160427T100640Z">
        <seg>_我们仅需要 "external refeernces" 和 "src" 文件夹来编译Babylon.js._</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_add the new one_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T100201Z" creationid="aceway@qq.com" creationdate="20160427T100201Z">
        <seg>_添加一个新的_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_dashSize_ and _gapSize_ are relative to each other dash and gap sizes within these strokes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T101721Z" creationid="aceway" creationdate="20160507T101409Z">
        <seg>_划线大小_ 和 _间隙大小_ 是指点划线里每个划线和之间间隙的相对大小.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_distance_ (float): the “distance” between the active camera and your hit (infinite if no mesh was hit)
1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T094132Z" creationid="aceway" creationdate="20170130T094132Z">
        <seg>_距离_ (浮点值): 激活相机与你命中的物体间的 “距离” (如果没有命中则未无穷大)
1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_do a search/replace of "..\packages" by "packages", replace all occurences._</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T101404Z" creationid="aceway@qq.com" creationdate="20160427T101404Z">
        <seg>_用"packages"执行搜索/替换 "..\packages" , 替换所有._</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_get rid of all the .js files referenced_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T101240Z" creationid="aceway@qq.com" creationdate="20160427T101240Z">
        <seg>_避免所有的 .js 文件引用_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_hit_ (bool): « True » if your click hits an object in the scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T093951Z" creationid="aceway" creationdate="20170130T093951Z">
        <seg>_点击_ (布尔值): « 真 » 如果你的点击命中了场景中的一个物体.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_pickedMesh_ (BABYLON.Mesh): if you hit an object, this is the selected mesh.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T094211Z" creationid="aceway" creationdate="20170130T094211Z">
        <seg>_拾取的网格_ (BABYLON.Mesh): 如果你命中一个物体，这时该选中的网格.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_pickedPoint_ (BABYLON.Vector3): the point you have clicked, transformed in 3D coordinates, depending on the object you’ve clicked.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T094350Z" creationid="aceway" creationdate="20170130T094350Z">
        <seg>_拾取点_ (BABYLON.Vector3): 你点击的点, 转换到三维空间坐标的, 依赖于你点击的物体.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>_remove the dead project_</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T100150Z" creationid="aceway@qq.com" creationdate="20160427T100150Z">
        <seg>_移除已废弃的工程_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```
It is difficult for me to explain, but actually quite easy to do, thanks to Babylon.js.&amp;nbsp; Experimenting with properties and methods... is the fastest way to learn.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160421T102435Z" creationid="aceway@qq.com" creationdate="20160421T102435Z">
        <seg>```
对我来而言，空说难但具体做起来很容易, 这要归功于 Babylon.js.&amp;nbsp; 尽快熟悉属性和方法... 是最佳的学习途径.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```
Parameters are : name, path, radius, tesselation, optional radiusFunction, cap, scene, updatable, sideOrientation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T110924Z" creationid="aceway" creationdate="20160507T110924Z">
        <seg>```
参数为: 名称, 路径, 半径, 曲面细分, 可选的半径函数,  头罩, 场景, 可更新否, 朝向.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```
var light = new BABYLON.DirectionalLight("dir01", new BABYLON.Vector3(-1, -2, -1), scene);
```
Point lights use cubemaps rendering so please be cautious when enabling them as this could lead to some performance issues.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T125916Z" creationid="aceway" creationdate="20170204T125849Z">
        <seg>```
var light = new BABYLON.DirectionalLight("dir01", new BABYLON.Vector3(-1, -2, -1), scene);
```
点光源使用立方贴图渲染,因此需要慎重启用,因为这会导致一些性能问题.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
// Create a BABYLON.Engine type of object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T144338Z" creationid="aceway" creationdate="20160418T144229Z">
        <seg>``` javascript
// 创建一个 BABYLON.Engine 引擎对象类型.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
// Creation of a triangular lines mesh
var myLines = BABYLON.Mesh.CreateLines("itsName", [
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; new BABYLON.Vector3(-5, 0, 5),
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; new BABYLON.Vector3(5, 0, 5),
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; new BABYLON.Vector3(0, 0, -5),
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; new BABYLON.Vector3(-5, 0, 5)
], scene);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T025529Z" creationid="aceway" creationdate="20160423T025529Z">
        <seg>``` javascript
// 三角线网格的创建
var myLines = BABYLON.Mesh.CreateLines("itsName", [
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; new BABYLON.Vector3(-5, 0, 5),
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; new BABYLON.Vector3(5, 0, 5),
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; new BABYLON.Vector3(0, 0, -5),
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; new BABYLON.Vector3(-5, 0, 5)
], scene);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
box.position = new BABYLON.Vector3(0, 10, 0);
```
The xValue is 0, meaning that the box is positioned in the center of the x-axis.&amp;nbsp; The yValue is 10, meaning that the box is positioned 10 units above the center of the y-axis.&amp;nbsp; The zValue is 0, meaning that the box is positioned in the center of the z-axis.&amp;nbsp; Easy.&amp;nbsp; We will talk more about positioning... further below.&amp;nbsp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T140257Z" creationid="aceway" creationdate="20160421T140257Z">
        <seg>``` javascript
box.position = new BABYLON.Vector3(0, 10, 0);
```
该 xValue 为是0, 意味着那个盒子位于X轴的中心.&amp;nbsp; 该yValue值是10, 意味着那个盒子位于Y轴中心上方10个单位的位置.&amp;nbsp; 该zValue值是0, 意味着那个盒子位于Z轴中心的位置.&amp;nbsp; 简单吧.&amp;nbsp; 在后面我们讲更多的讨论位置.&amp;nbsp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
box.rotation = new BABYLON.Vector3(Math.PI/4, 0, 0);
```
Here, our box is being rotated around the x-axis... about 45 degrees.&amp;nbsp; In Babylon.js, rotation is measured in radians.&amp;nbsp; Math.PI/4 is approximately .707 radians.&amp;nbsp; To rotate 90 degrees, it would be Math.PI/2, or about 1.57 radians.&amp;nbsp; For 180 degrees, it would be Math.PI, or about 3.14 radians.&amp;nbsp; To rotate 360 degrees, it would Math.PI times 2, or about 6.28 radians.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T140823Z" creationid="aceway" creationdate="20160421T140823Z">
        <seg>``` javascript
box.rotation = new BABYLON.Vector3(Math.PI/4, 0, 0);
```
此处, 我们的盒子绕着X轴旋转呢来大约45度.&amp;nbsp; 在Babylon.js里, 旋转是以弧度为度量单位的.&amp;nbsp; Math.PI/4 约等于.707 弧度.&amp;nbsp; 要旋转90度, 将是Math.PI/2, 或着说大约1.57 弧度.&amp;nbsp; 对于180度, 是Math.PI, 或大约3.14 弧度.&amp;nbsp; 要旋转360度, 那就是Math.PI 乘以2, 或者大约6.28弧度.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
box.scaling = new BABYLON.Vector3(1, 1, 3);
```
Scaling is a way to shrink or stretch a mesh along any of the 3 scene axes.&amp;nbsp; In the above example, the xValue (1) indicates that no scaling change to the mesh along its x-axis... is desired.&amp;nbsp; The yValue of 1 indicates that we want no change in scaling along the y-axis, either.&amp;nbsp; The zValue of 3 indicates that we we are 'stretching' our mesh along its z-axis... to 3 times its normal size.&amp;nbsp; Easy, right?&amp;nbsp; You bet!&amp;nbsp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T143159Z" creationid="aceway" creationdate="20160421T143159Z">
        <seg>``` javascript
box.scaling = new BABYLON.Vector3(1, 1, 3);
```
缩放是种在场景3轴的任何方向上缩减或拉伸网格的方法.&amp;nbsp; 在上面的例子里, 该xValue (1) 表明网格在X轴上没有缩放改变.&amp;nbsp; 该yValue值1 表明也不要在Y轴上做缩放改变.&amp;nbsp; 该zValue值3表明我们希望在Z轴上拉伸到3倍原大小.&amp;nbsp; 简单吧, 这样就对了?&amp;nbsp; 你矇对了!&amp;nbsp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
box_I_made.rotation.y = Math.PI/2;&amp;nbsp; // Rotate the box 90 degrees on the Y-axis.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160421T102031Z" creationid="aceway@qq.com" creationdate="20160421T102031Z">
        <seg>``` javascript
box_I_made.rotation.y = Math.PI/2;&amp;nbsp; // 在Y轴上旋转90度.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
light.intensity = 0.5;
```
Here, we 'set' the property named 'intensity' on the object called 'light' to a value of 0.5 (0.5 is called a FLOATING POINT value, or just 'a float').&amp;nbsp; We'll talk about values, shortly.&amp;nbsp; The main thing I want you to notice is that the property (pocket) had a NAME... .intensity, and we stored the value 0.5 into that pocket (on the object named 'light').</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160418T150733Z" creationid="aceway" creationdate="20160418T150733Z">
        <seg>``` javascript
light.intensity = 0.5;
```
此处, 我们给一个被称为'光'的对象设置其叫做 'intensity'的属性值为0.5 (0.5 叫做浮点值, 或仅称为'a float').&amp;nbsp; 我们后面简短的谈论下值.&amp;nbsp; 我主要是希望你注意 那个具有intensity名字的属性(存储空间), 而且我们吧值0.5存到那里(属于那个称为'light'的对象).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
myLight.diffuse = new BABYLON.Color3(0.5, 0, 0);
```
And there we go.&amp;nbsp; We have colored the light beam that emits from our light... to be medium red.&amp;nbsp; There is one more use for a Color3 value, and that is on one of our newest basic shape objects... called a LINES object.&amp;nbsp; A LINES object does not use a StandardMaterial object for its color.&amp;nbsp; It uses a property called .color.&amp;nbsp; Here is an example of a LINES object being created, and then colored:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T025404Z" creationid="aceway" creationdate="20160423T025404Z">
        <seg>``` javascript
myLight.diffuse = new BABYLON.Color3(0.5, 0, 0);
```
我们开始吧.&amp;nbsp; 我们将光源发散出来的光线着色为中红色.&amp;nbsp; 有不止一种使用Color3值的方式, 其中一种使用在来我们最基础的造型对象(线对象)上.&amp;nbsp; 一个线对象不使用标准材质作为其颜色.&amp;nbsp; 它使用一个称为颜色(.color)的属性.&amp;nbsp; 此处我们有个例子创建一个线对象,然后为其着色的例子:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
mySpotLight.direction = new BABYLON.Vector3(0, -1, 0);
```
Generally speaking, when a Vector3 value is used to set a DIRECTION, the xValue, yValue, and zValue are each in a range of negative 1... to positive 1.&amp;nbsp; In the example above, our light is aimed negative on the y-axis... or... straight down.&amp;nbsp; Directions (directional vectors) are used for more things than just lights, but lights is a common use.&amp;nbsp; Directional vectors are not always easy things to determine the x, y, and z parameters/values for.&amp;nbsp; We have some helpful tools on our lights... that will assist you in setting directions.&amp;nbsp; You will learn about those tools in our lights tutorial.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160421T144435Z" creationid="aceway" creationdate="20160421T144435Z">
        <seg>``` javascript
mySpotLight.direction = new BABYLON.Vector3(0, -1, 0);
```
通常来说, 当一个Vector3值被用来设置一个方向是, 该xValue, yValue, 和 zValue是在负1和正1之间的.&amp;nbsp; 在上面的例子里, 我们的光是瞄向Y轴负方向的... 或者直接向下.&amp;nbsp; 矢量 (方向向量) 被用在不仅仅是灯光上, 但通常是灯光上.&amp;nbsp; 矢量并不总是能很容易的用x, y, 和z 为参数来衡量.&amp;nbsp; 我们有些辅助工具来处理灯光... 它们将帮助你设置方向.&amp;nbsp; 你讲在我们的灯光教程里来学习那些工具.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
object.property = value;
```
Let's talk more about these four things... objects, properties, methods, and values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160410T145127Z" creationid="aceway" creationdate="20160410T145127Z">
        <seg>``` javascript
object.property = value;
```
让我们更深入的讨论这4个事情: 对象, 属性, 方法, 和 值.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
scene.getMeshByName("box");
```
Here, we have 'called' the getMeshByName() method that is located on the object called 'scene'.&amp;nbsp; See that "box" thing inside the parentheses?&amp;nbsp; That is called a 'parameter' or sometimes called an 'argument' or just... 'an arg'.&amp;nbsp; Some methods require one or more parameters inside the parentheses, and some require none at all.&amp;nbsp; If you look at your createScene function (method) from the big picture above, it had empty parentheses.&amp;nbsp; It did not require any parameters in order to be called.&amp;nbsp; At other times, you might see createScene(engine).&amp;nbsp; In this case, the createScene method DOES require a parameter...&amp;nbsp; a Javascript ENGINE-type of object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160420T142955Z" creationid="aceway" creationdate="20160420T142955Z">
        <seg>``` javascript
scene.getMeshByName("box");
```
此处,我们调用了一个叫做'scene'的对象上的 getMeshByName() 方法.&amp;nbsp; 看到括号里面的 "box" 了么?&amp;nbsp; 那是一个 '参数' 或者有时也叫做一个 '变元' 或简化为 '一个arg'.&amp;nbsp; 有些方法需要一个或多个参数在括号里, 而且有些压根不需要参数.&amp;nbsp; 如果你从上面的大图里查看下创建场景的函数(方法), 你会发现它的括号里是空的.&amp;nbsp; 调用一个函数并不必须提供参数.&amp;nbsp; 另外一些时候,你可能看到createScene(engine)这样的调用函数.&amp;nbsp; 这种情况下, 创建场景方法确实需要一个Javascript对象的引擎类型的参数.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
var box_I_made = scene.getMeshByName("box");
```
This call is getting a reference/handle on a box that was made earlier in the code, and putting that reference into a variable called 'box_I_made'.&amp;nbsp; After you get that reference, you can do things to the box... like set property values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160421T102002Z" creationid="aceway@qq.com" creationdate="20160421T102002Z">
        <seg>``` javascript
var box_I_made = scene.getMeshByName("box");
```
这个调用获取了之前代码创建的盒子对象引用/句柄, 然后把它赋值给一个叫 'box_I_made'的变量.&amp;nbsp; 你获得那个句柄后，就可以操作那个盒子了... 像设置属性.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``` javascript
var myMaterial = new BABYLON.StandardMaterial("mymat", scene);
myBox.material = myMaterial;&amp;nbsp; 
```
The first line creates a StandardMaterial and puts it into the variable named myMaterial.&amp;nbsp; The second line sets the box's .material property... to be that newly-made StandardMaterial.&amp;nbsp; The appearance of the box will not change yet, because we have not given the StandardMaterial any information about what color we want the box to be.&amp;nbsp;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160422T145001Z" creationid="aceway" creationdate="20160422T145001Z">
        <seg>``` javascript
var myMaterial = new BABYLON.StandardMaterial("mymat", scene);
myBox.material = myMaterial;&amp;nbsp; 
```
第一行创建了个标准材质并把它放入一个名为myMaterial的变量.&amp;nbsp; 第二行设置盒子的材质(.material)属性为那个新创建的标准材质.&amp;nbsp; 孩子的外观还没有改变,因为我们还没有给该标准材质提供任何我们想要的颜色.&amp;nbsp;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```Javascript
//Create a Vector3 animation at 30 FPS
var animationTorus = new BABYLON.Animation("torusEasingAnimation", "position", 30, BABYLON.Animation.ANIMATIONTYPE_VECTOR3, BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T144921Z" creationid="aceway" creationdate="20160402T144921Z">
        <seg>```Javascript
//创建一个3维空间里的30帧每秒的动画
var animationTorus = new BABYLON.Animation("torusEasingAnimation", "position", 30, BABYLON.Animation.ANIMATIONTYPE_VECTOR3, BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```Javascript
BABYLON.Animation.CreateAndStartAnimation('boxscale', box1, 'scaling.x', 30, 120, 1.0, 1.5);
```
Fast and easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T111425Z" creationid="aceway" creationdate="20160402T111425Z">
        <seg>```Javascript
BABYLON.Animation.CreateAndStartAnimation('boxscale', box1, 'scaling.x', 30, 120, 1.0, 1.5);
```
快速而简便.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```html
&lt;script src="babylon.js"&gt;&lt;/script&gt;
&lt;script src="hand.js"&gt;&lt;/script&gt;
&lt;script src="cannon.js"&gt;&lt;/script&gt;  &lt;!-- optional physics engine --&gt;
&lt;!-- &lt;script src="Oimo.js"&gt;&lt;/script&gt;  New physics engine --&gt;
```
(if you don't already have those files, you can find them here: https://github.com/BabylonJS/Babylon.js, and here: http://handjs.codeplex.com/)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160428T145920Z" creationid="aceway" creationdate="20160428T145920Z">
        <seg>```html
&lt;script src="babylon.js"&gt;&lt;/script&gt;
&lt;script src="hand.js"&gt;&lt;/script&gt;
&lt;script src="cannon.js"&gt;&lt;/script&gt;  &lt;!-- 可选的物理引擎 --&gt;
&lt;!-- &lt;script src="Oimo.js"&gt;&lt;/script&gt;  新的物理引擎 --&gt;
```
(如果你还没有这些文件, 可以在此找到: https://github.com/BabylonJS/Babylon.js, and here: http://handjs.codeplex.com/)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
// An array with all animation keys
var keys = [];</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T154439Z" creationid="aceway@qq.com" creationdate="20160331T085111Z">
        <seg>```javascript
// 存储所有动画键值的数组
var keys = [];</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
// ArcRotateCamera &gt;&gt; Camera turning around a 3D point (here Vector zero) with mouse and cursor keys
// Parameters : name, alpha, beta, radius, target, scene
   var camera = new BABYLON.ArcRotateCamera("ArcRotateCamera", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T134359Z" creationid="aceway" creationdate="20170205T134359Z">
        <seg>```javascript
// 弧形旋转相机 &gt;&gt; 使用鼠标和光标键将相机绕着一个三维点(此处时0坐标处) 旋转
// 参数: 名称, 水平角(alpha), 垂直角(beta), 半径, 围绕的目标, 场景
   var camera = new BABYLON.ArcRotateCamera("ArcRotateCamera", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
// Colors of all particles (splited in 2 + specific color before dispose)
particleSystem.color1 = new BABYLON.Color4(0.7, 0.8, 1.0, 1.0);
particleSystem.color2 = new BABYLON.Color4(0.2, 0.5, 1.0, 1.0);
particleSystem.colorDead = new BABYLON.Color4(0, 0, 0.2, 0.0);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T073614Z" creationid="aceway" creationdate="20170131T073614Z">
        <seg>```javascript
// 所有粒子的颜色 (被拆分成2种色 + 1种特殊色的方式来处理)
particleSystem.color1 = new BABYLON.Color4(0.7, 0.8, 1.0, 1.0);
particleSystem.color2 = new BABYLON.Color4(0.2, 0.5, 1.0, 1.0);
particleSystem.colorDead = new BABYLON.Color4(0, 0, 0.2, 0.0);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
// Create a sprite manager
var spriteManagerTrees = new BABYLON.SpriteManager("treesManagr", "Assets/Palm-arecaceae.png", 2000, 800, scene);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170122T111614Z" creationid="aceway" creationdate="20170122T111614Z">
        <seg>```javascript
// 创建一个精灵管理器
var spriteManagerTrees = new BABYLON.SpriteManager("treesManagr", "Assets/Palm-arecaceae.png", 2000, 800, scene);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
// Enable Collisions
scene.collisionsEnabled = true;
camera.checkCollisions = true;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T040050Z" creationid="aceway" creationdate="20170130T040039Z">
        <seg>```javascript
// 启用碰撞检测
scene.collisionsEnabled = true;
camera.checkCollisions = true;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
// GamepadCamera &gt;&gt; Move in your scene with gamepad controls
// Parameters : name, position, scene
var camera = new BABYLON.GamepadCamera("Camera", new BABYLON.Vector3(0, 15, -45), scene);
```
Easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T133146Z" creationid="aceway" creationdate="20170206T133102Z">
        <seg>```javascript
// 手持相机 &gt;&gt; 使用控制手柄在场景中移动它
// 参数: 名称，位置，场景
var camera = new BABYLON.GamepadCamera("Camera", new BABYLON.Vector3(0, 15, -45), scene);
```
简单吧.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
// WebVRFreeCamera &gt;&gt; Move in your VR scene
// Parameters : name, position, scene
    var camera = new BABYLON.WebVRFreeCamera("WVR", new BABYLON.Vector3(0, 1, -15), scene);
```
The WebVRFreeCamera uses FreeCamera as its basis, so all of the properties and methods of FreeCamera... are also found on our WebVRFreeCamera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T135823Z" creationid="aceway" creationdate="20170207T135823Z">
        <seg>```javascript
// 页面虚拟现实自由相机 &gt;&gt; 在虚拟现实场景中移动
// 参数：名称，位置，场景
    var camera = new BABYLON.WebVRFreeCamera("WVR", new BABYLON.Vector3(0, 1, -15), scene);
```
页面虚拟现实自由相机也是用自由相机作为基础.. 因此自由相机的所有属性和方法也都可以在它上面找到.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
//Set the ellipsoid around the camera (e.g. your player's size)
camera.ellipsoid = new BABYLON.Vector3(1, 1, 1);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T035720Z" creationid="aceway" creationdate="20170130T035720Z">
        <seg>```javascript
//设置包围相机的椭球体 (如您的播放器大小)
camera.ellipsoid = new BABYLON.Vector3(1, 1, 1);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
//When click event is raised
window.addEventListener("click", function () {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T093707Z" creationid="aceway" creationdate="20170130T093707Z">
        <seg>```javascript
//当点击事件抛出时
window.addEventListener("click", function () {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
CreateRibbon(name, pathArray, closeArray, closePath, offset, scene, updatable, sideOrientation);
```
  * **name** : string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T132612Z" creationid="aceway" creationdate="20170204T132612Z">
        <seg>```javascript
CreateRibbon(name, pathArray, closeArray, closePath, offset, scene, updatable, sideOrientation);
```
  * **name** : 字符串类型.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
animationBox.setKeys(keys);
```
* Link this animation to our box:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160331T085601Z" creationid="aceway@qq.com" creationdate="20160331T085601Z">
        <seg>```javascript
animationBox.setKeys(keys);
```
* 将动画和对象链接起来</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
function createScene() {
    var scene = new BABYLON.Scene(engine);
    var light = new BABYLON.PointLight("Omni", new BABYLON.Vector3(0, 100, 100), scene);
    var camera = new BABYLON.ArcRotateCamera("Camera", 0, 0.8, 100, new BABYLON.Vector3.Zero(), scene);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T122639Z" creationid="aceway" creationdate="20160508T122639Z">
        <seg>```javascript
function createScene() {
    var scene = new BABYLON.Scene(engine);
    var light = new BABYLON.PointLight("Omni", new BABYLON.Vector3(0, 100, 100), scene);
    var camera = new BABYLON.ArcRotateCamera("camera", 0, 0.8, 100, new BABYLON.Vector3.Zero(), scene);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
scene.ambientColor = new BABYLON.Color3(0.3, 0.3, 0.3);
```
As you can see, it is set using the same format as `clearColor`, but `ambientColor` is used in quite a few calculations toward determining the final colors of scene items.&amp;nbsp; Mainly, it is used in conjunction with a mesh's `StandardMaterial.ambientColor` to determine a FINAL `ambientColor` for the mesh material.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170203T040101Z" creationid="aceway" creationdate="20170203T040101Z">
        <seg>```javascript
scene.ambientColor = new BABYLON.Color3(0.3, 0.3, 0.3);
```
正如你所见，它的使用方式和设置`清理背景色(clearColor)`一样, 但是`环境色(ambientColor)`是用在很少的几个计算上---以决定场景物品的最终颜色.&amp;nbsp; ,它主要用来和网格`标准材质的环境色属性(StandardMaterial.ambientColor)`合成出该网格材质最终的`环境色(ambientColor)`.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
scene.clearColor = new BABYLON.Color3(0.5, 0.8, 0.5);
```
Or maybe you want to use one of our preset colors and avoid using the `new` keyword:
```javascript
scene.clearColor = BABYLON.Color3.Blue();
```
This color and property is not used in any calculations for the final colors of mesh, materials, textures, or anything else.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T105811Z" creationid="aceway" creationdate="20170131T105811Z">
        <seg>```javascript
scene.clearColor = new BABYLON.Color3(0.5, 0.8, 0.5);
```
或者你想使用某个预设的颜色而避免使用`new`关键字:
```javascript
scene.clearColor = BABYLON.Color3.Blue();
```
在网格、材质、纹理或任何其它东西最终颜色的计算中，该颜色和属性都不会被使用.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
var camerasBorderFunction = function () {
        //Angle
        if (camera.beta &lt; 0.1)
            camera.beta = 0.1;
        else if (camera.beta &gt; (Math.PI / 2) * 0.9)
            camera.beta = (Math.PI / 2) * 0.9;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T102500Z" creationid="aceway" creationdate="20170204T102500Z">
        <seg>```javascript
var camerasBorderFunction = function () {
        //角度
        if (camera.beta &lt; 0.1)
            camera.beta = 0.1;
        else if (camera.beta &gt; (Math.PI / 2) * 0.9)
            camera.beta = (Math.PI / 2) * 0.9;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
var cylinder = BABYLON.Mesh.CreateCylinder("cylinder", 3, 3, 3, 6, 1, scene, false, BABYLON.Mesh.DEFAULTSIDE);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T135929Z" creationid="aceway" creationdate="20160503T135929Z">
        <seg>```javascript
var cylinder = BABYLON.Mesh.CreateCylinder("cylinder", 3, 3, 3, 6, 1, 场景, false, BABYLON.Mesh.DEFAULTSIDE);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
var dashedlines = BABYLON.Mesh.CreateDashedLines("dashedLines", [v1, v2, ... vn], dashSize, gapSize, dashNb, scene);
```
Parameters are : name, [array of Vectors3], dashSize, gapSize, dashNumber, scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T101440Z" creationid="aceway" creationdate="20160503T142512Z">
        <seg>```javascript
var dashedlines = BABYLON.Mesh.CreateDashedLines("dashedLines", [v1, v2, ... vn], dashSize, gapSize, dashNb, 场景);
```
参数为 : 名称, [三元向量数组], 划线大小, 间隙大小, 段划线数, 场景.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
var ground = BABYLON.Mesh.CreateGroundFromHeightMap("ground", "heightmap.jpg", 200, 200, 250, 0, 10, scene, false, successCallback);
```
Parameters are: name, heightmapPath, width, depth, subdivs, minheight, maxheight, scene, updatable, successCallback</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160507T122553Z" creationid="aceway" creationdate="20160507T122317Z">
        <seg>```javascript
var ground = BABYLON.Mesh.CreateGroundFromHeightMap("ground", "heightmap.jpg", 200, 200, 250, 0, 10, scene, false, successCallback);
```
参数为: 名称, 高度图路径, 宽度, 纵深, 子分段数, 最小高度,最大高度, 场景, 可更新否, 成功回调</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
var knot = BABYLON.Mesh.CreateTorusKnot("knot", 2, 0.5, 128, 64, 2, 3, scene, false, BABYLON.Mesh.DEFAULTSIDE);
```
Parameters are: name, radius, tube, radialSegments, tubularSegments, p, q, scene, updatable and the optional side orientation (see below).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T141248Z" creationid="aceway" creationdate="20160503T140755Z">
        <seg>```javascript
var knot = BABYLON.Mesh.CreateTorusKnot("knot", 2, 0.5, 128, 64, 2, 3, scene, false, BABYLON.Mesh.DEFAULTSIDE);
```
参数为: 名称, 半径, tube, 半径上分段数, tubularSegments, p, q, 场景, 可更新否和可选的朝向(参见下面).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
var speedCharacter = 8;
var gravity = 0.15;
var character = Your mesh;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T041946Z" creationid="aceway" creationdate="20170130T041946Z">
        <seg>```javascript
var speedCharacter = 8;
var gravity = 0.15;
var character = 你的网格对象;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
var torus = BABYLON.Mesh.CreateTorus("torus", 5, 1, 10, scene, false, BABYLON.Mesh.DEFAULTSIDE);
```
Parameters are: name, diameter, thickness, tessellation (highly detailed or not), scene, updatable and the optional side orientation (see below).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T140815Z" creationid="aceway" creationdate="20160503T140342Z">
        <seg>```javascript
var torus = BABYLON.Mesh.CreateTorus("torus", 5, 1, 10, scene, false, BABYLON.Mesh.DEFAULTSIDE);
```
参数为: 名称, 直径, 厚度, 边数(高度细节或不是), 场景, 可更新否和可选的朝向(参见下面).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
{
    "autoClear": boolean,
    "clearColor": color3,
    "ambientColor": color3,
    "gravity": vector3 (usually [0,-9,0]),
    "cameras": array of Cameras (see below),
    "activeCamera_": string,
    "lights": array of Lights (see below),
    "materials": array of Materials (see below),
    "geometries": {...} (see below),
    "meshes": array of Meshes (see below),
    "multiMaterials": array of MultiMaterials (see below),
    "shadowGenerators": array of ShadowGenerators (see below),
    "skeletons": array of Skeletons (see below),
    "particleSystems": array of ParticleSystems (see below),
    "lensFlareSystems": array of LensFlareSystems (see below),
    "actions": array of actions (see below),
    "sounds": array of Sounds (see below),
    "workerCollisions": boolean,
    "collisionsEnabled": boolean,
    "physicsEnabled": boolean,
    "physicsGravity": vector3 (defaults to [0,-9.81,0]),
    "physicsEngine": string ("oimo" or "cannon", defaults to the default engine (oimo),</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T073435Z" creationid="aceway@qq.com" creationdate="20160427T073435Z">
        <seg>```javascript
{
    "autoClear": boolean,
    "clearColor": color3,
    "ambientColor": color3,
    "gravity": vector3 (通常是[0,-9,0]),
    "cameras": 相机数组 (见下面),
    "activeCamera_": string,
    "lights": array of Lights (见下面),
    "materials": 材质数组 (见下面),
    "geometries": {...} (见下面),
    "meshes": 网格数组 (见下面),
    "multiMaterials": 多材质数组(见下面),
    "shadowGenerators":  ShadowGenerators数组 (见下面),
    "skeletons": Skeletons数组 (见下面),
    "particleSystems": ParticleSystems数组 (见下面),
    "lensFlareSystems": LensFlareSystems数组 (见下面),
    "actions": actions数组 (见下面),
    "sounds": Sounds数组 (见下面),
    "workerCollisions": boolean,
    "collisionsEnabled": boolean,
    "physicsEnabled": boolean,
    "physicsGravity": vector3 (默认是[0,-9.81,0]),
    "physicsEngine": string ("oimo" 或 "cannon", 引擎默认为(oimo),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
{
    "type": number, (action's type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T090604Z" creationid="aceway@qq.com" creationdate="20160427T090604Z">
        <seg>```javascript
{
    "type": number, (动作类型.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
   // Create an ArcRotateCamera aimed at 0,0,0, with no alpha, beta or radius, so be careful.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T044408Z" creationid="aceway@qq.com" creationdate="20170206T044408Z">
        <seg>```javascript
   // 创建一个弧形旋转相机瞄准0,0,0, 没有经度，纬度和半径, 所以仔细点.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
   // First, set the scene's activeCamera... to be YOUR camera.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T141908Z" creationid="aceway" creationdate="20170207T141908Z">
        <seg>```javascript
   // 第一部, 设定场景的激活相机指向你的相机.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```javascript
   camera.attachControl(canvas, noPreventDefault, useCtrlForPanning);
```
(more info about this method in the **Wrapping Up** section)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170206T122855Z" creationid="aceway@qq.com" creationdate="20170206T050446Z">
        <seg>```javascript
   camera.attachControl(canvas, noPreventDefault, useCtrlForPanning);
```
(关于这个方法的更多信息请参见 **总结**部分)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```startPositionFunction = (worldMatrix: Matrix, positionToUpdate: Vector3)```: This function can be defined to specify initial position for every new particle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T101846Z" creationid="aceway" creationdate="20170131T101846Z">
        <seg>```startPositionFunction = (worldMatrix: Matrix, positionToUpdate: Vector3)```: 这个函数能够用为每个新粒子定义初始位置.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>```updateFunction: (particles: Particle[])```: This function can be defined to provide custom update for active particles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T102046Z" creationid="aceway" creationdate="20170131T102046Z">
        <seg>```updateFunction: (particles: Particle[])```:这个函数能够用为有效粒子提供自定义更新.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>example : http://www.babylonjs-playground.com/#295H7U  
Here we populate an array called _paths_ with many path arrays.  
Each _path_ array is populated itself with Vector3 along a Bézier curve.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170205T061747Z" creationid="aceway" creationdate="20170205T061430Z">
        <seg>示例: http://www.babylonjs-playground.com/#295H7U  
在这里我们使用许多路径数组填充出一个我们称为_paths_的数组.
每个路径数组接合贝赛尔曲线上的三维向量来填充.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.html5gamedevs.com/forum/16-babylonjs/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T144331Z" creationid="aceway" creationdate="20160423T144331Z">
        <seg>http://www.html5gamedevs.com/论坛/16-babylonjs/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>i.e name = "CombineAction".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T091005Z" creationid="aceway@qq.com" creationdate="20160427T091005Z">
        <seg>例如 name = "CombineAction".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (particle.age &gt;= particle.lifeTime) { // Recycle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T102714Z" creationid="aceway" creationdate="20170131T102714Z">
        <seg>if (particle.age &gt;= particle.lifeTime) { // 循环利用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>in our Basic Elements tutorial.&amp;nbsp; For now, I just wanted to show you that it does not use a .diffuseColor property like a box with a StandardMaterial applied, nor a .diffuse property like we used for coloring light beams.&amp;nbsp; It, instead, uses a property called .color.&amp;nbsp; Simple.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T030404Z" creationid="aceway" creationdate="20160423T030404Z">
        <seg>在我们的基础元素教程里.&amp;nbsp; 至于现在, 我只是想表示它(线对象)不像盒子那样应用标准材质并对其(材质)使用.diffuseColor属性来设置颜色, 也不想光线那样使用.diffuse属性来设置颜色.&amp;nbsp; 相反,我们直接使用一个.color属性.&amp;nbsp; 就是这样简单.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>new BABYLON.Vector3(0, 0, 10)
], scene);
```
Parameters are: name, [array of comma-separated vectors], scene.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160503T141502Z" creationid="aceway" creationdate="20160503T141502Z">
        <seg>new BABYLON.Vector3(0, 0, 10)
], 场景);
```
参数为: 名称, [都好分隔的向量数组], 场景.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>particleSystem.maxEmitBox = new BABYLON.Vector3(1, 0, 0); // To...
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170131T072951Z" creationid="aceway" creationdate="20170131T072951Z">
        <seg>particleSystem.maxEmitBox = new BABYLON.Vector3(1, 0, 0); // 目标...
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return FunnyEase;
})(BABYLON.EasingFunction);
```
You will find a complete demonstration of the easing functions behaviors, in the playground : [**Easing function playground**](http://babylonjs-playground.azurewebsites.net/?20)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T150850Z" creationid="aceway" creationdate="20160402T150850Z">
        <seg>return FunnyEase;
})(BABYLON.EasingFunction);
```
在娱乐展示里, 你会找到一个简化函数行为的完整演示: [**简化函数娱乐展示**](http://babylonjs-playground.azurewebsites.net/?20)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>this.doSomething();
}
```
- Braces start on the same line and end on the next one
- Each new file must contain only one class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T065002Z" creationid="aceway@qq.com" creationdate="20160427T065002Z">
        <seg>this.doSomething();
}
```
- 大括号的开始和代码在同一行，而大括号的结尾另起一行
- 每个新文件必须只有一个类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>var engine = new BABYLON.Engine(canvas, true);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160423T145902Z" creationid="aceway" creationdate="20160423T145902Z">
        <seg>var engine = new BABYLON.Engine(画布, true);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>var forwards = new BABYLON.Vector3(parseFloat(Math.sin(character.rotation.y)) / speedCharacter, gravity, parseFloat(Math.cos(character.rotation.y)) / speedCharacter);
forwards.negate();
character.moveWithCollisions(forwards);
// or
var backwards = new BABYLON.Vector3(parseFloat(Math.sin(character.rotation.y)) / speedCharacter, -gravity, parseFloat(Math.cos(character.rotation.y)) / speedCharacter);
character.moveWithCollisions(backwards);
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170130T042016Z" creationid="aceway" creationdate="20170130T042016Z">
        <seg>var forwards = new BABYLON.Vector3(parseFloat(Math.sin(character.rotation.y)) / speedCharacter, gravity, parseFloat(Math.cos(character.rotation.y)) / speedCharacter);
forwards.negate();
character.moveWithCollisions(forwards);
// 或者
var backwards = new BABYLON.Vector3(parseFloat(Math.sin(character.rotation.y)) / speedCharacter, -gravity, parseFloat(Math.cos(character.rotation.y)) / speedCharacter);
character.moveWithCollisions(backwards);
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>window.addEventListener("resize", function () {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160429T125454Z" creationid="aceway" creationdate="20160429T125454Z">
        <seg>window.addEventListener("resize", 函数 () {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>| Id | Title | Author|
| :------------ |:---------------:| -----:|
| [#27FN5R#8](http://www.babylonjs-playground.com/#27FN5R#8) | Equirectangular map as reflection texture | Deltakosh |
| [#RNBKQ#8](http://www.babylonjs-playground.com/#RNBKQ#8) | Glossiness and roughness | Deltakosh |
| [#23M0G6#1](http://www.babylonjs-playground.com/#23M0G6#1) | Rotating mesh to look at a target | iiceman |
| [#CA4SM#1](http://www.babylonjs-playground.com/#CA4SM#1) | Saving dynamic texture on disk | dbawel |
| [#QM57B](http://www.babylonjs-playground.com/#QM57B) | Raycast on heighmap | Unknown |
| [#7SQDY#1](http://www.babylonjs-playground.com/#7SQDY#1) | Using BABYLON.Path3D | jerome |
| [#V1BSD](http://www.babylonjs-playground.com/#V1BSD) | Using SSAO Pipeline | Luaacro |
| [#ILRIF#0](http://www.babylonjs-playground.com/#ILRIF#0) | Using mesh.lookAt | Stvsynrj |
| [#EEOWP#7](http://www.babylonjs-playground.com/#EEOWP#7) | Fog of war prototype | Unknown |</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T062452Z" creationid="aceway@qq.com" creationdate="20160427T060402Z">
        <seg>| Id | 标题 | 作者 |
| :------------ |:---------------:| -----:|
| [#27FN5R#8](http://www.babylonjs-playground.com/#27FN5R#8) | 等矩形映射为反射纹理 | Deltakosh |
| [#RNBKQ#8](http://www.babylonjs-playground.com/#RNBKQ#8) | 光滑度和粗糙度 | Deltakosh |
| [#23M0G6#1](http://www.babylonjs-playground.com/#23M0G6#1) | 旋转网格至瞄准目标 | iiceman |
| [#CA4SM#1](http://www.babylonjs-playground.com/#CA4SM#1) | 保存动态纹理到磁盘 | dbawel |
| [#QM57B](http://www.babylonjs-playground.com/#QM57B) | 高度图上的光线投射 | 未知 |
| [#7SQDY#1](http://www.babylonjs-playground.com/#7SQDY#1) | 使用BABYLON.Path3D | jerome |
| [#V1BSD](http://www.babylonjs-playground.com/#V1BSD) | 使用屏幕空间环境光遮蔽(SSAO) 管道 | Luaacro |
| [#ILRIF#0](http://www.babylonjs-playground.com/#ILRIF#0) | 使用mesh.lookAt | Stvsynrj |
| [#EEOWP#7](http://www.babylonjs-playground.com/#EEOWP#7) | 战争原型里的雾 | 未知 |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>| Id | Title | Author|
| :------------ |:---------------:| -----:|
| [#2FPT1A#5](http://www.babylonjs-playground.com/#2FPT1A#5) | A lot of triangles with SPS | jerome |
| [#GK7FK](http://www.babylonjs-playground.com/#GK7FK) | X-ray material with Fresnel | Raanan |
| [#1WBBW0#1](http://www.babylonjs-playground.com/#1WBBW0#1) | Warp speed !</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T055627Z" creationid="aceway@qq.com" creationdate="20160427T040953Z">
        <seg>| Id | 标题 | 作者|
| :------------ |:---------------:| -----:|
| [#2FPT1A#5](http://www.babylonjs-playground.com/#2FPT1A#5) | 具有固态例子系统(SPS)的大量三角形 | jerome |
| [#GK7FK](http://www.babylonjs-playground.com/#GK7FK) | 使用菲涅耳(Fresnel)公式的X射线材质 | Raanan |
| [#1WBBW0#1](http://www.babylonjs-playground.com/#1WBBW0#1) | 曲率 !</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>| Name | Type | Description
---|---|---|---</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T155325Z" creationid="aceway@qq.com" creationdate="20160331T085752Z">
        <seg> | 名称 | 类型 | 描述
---|---|---|---</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>| Unknown |
| [#2EP7UB](http://babylonjs-playground.azurewebsites.net/#2EP7UB) | Mirors | Wingnut |
| [#VUJG1#1](http://www.babylonjs-playground.com/#VUJG1#1) | Hypnotizing infinite loader | Temechon |
| [External](http://synergy-development.fr/equalonyzer/) | Equalizer (with audio) | Stvsynrj |
| [#CXOLW#3](http://www.babylonjs-playground.com/#CXOLW#3) | Glass wubble ball | Stvsynrj |
| [#2JOSXE#13](http://www.babylonjs-playground.com/#2JOSXE#13) | PBR with music analyzer | Stvsynrj &amp; jerome |
| [External](http://synergy-development.fr/babylonyzer/) | Music analyzer | Stvsynrj &amp; Kohai |</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T060337Z" creationid="aceway@qq.com" creationdate="20160427T041056Z">
        <seg>| 未知 |
| [#2EP7UB](http://babylonjs-playground.azurewebsites.net/#2EP7UB) | 镜像 | Wingnut |
| [#VUJG1#1](http://www.babylonjs-playground.com/#VUJG1#1) | 无限加载式催眠 | Temechon |
| [External](http://synergy-development.fr/equalonyzer/) | 平衡器(有音频) | Stvsynrj |
| [#CXOLW#3](http://www.babylonjs-playground.com/#CXOLW#3) | 高斯气泡 | Stvsynrj |
| [#2JOSXE#13](http://www.babylonjs-playground.com/#2JOSXE#13) | 基于物理过程的渲染(PBR) ，同时有音乐分析器 | Stvsynrj &amp; jerome |
| [External](http://synergy-development.fr/babylonyzer/) | 音乐分析器 | Stvsynrj &amp; Kohai |</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>| from | number | The fps starting frame</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T155329Z" creationid="aceway@qq.com" creationdate="20160331T085900Z">
        <seg> | 起始| 数 | 开始fps</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>| target | any | The target</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T155327Z" creationid="aceway@qq.com" creationdate="20160331T085822Z">
        <seg> | 目标 | 任意 | 特定目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>| to | number | The fps ending frame
optional | loop | boolean | If true, the animation will loop (dependent upon BABYLON.Animation.ANIMATIONLOOPMODE)
optional | speedRatio | number | default : 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160402T155344Z" creationid="aceway@qq.com" creationdate="20160331T085929Z">
        <seg> | 止于 | 数量 | 结束fps
可选 | 循环 | 布尔值 | 如果为真,则动画循环播放 (取决于BABYLON.Animation.ANIMATIONLOOPMODE)
可选 | 速率 | 数值 | 默认 : 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>};  // End of createScene function
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160429T040205Z" creationid="aceway@qq.com" creationdate="20160429T040205Z">
        <seg>};  // createScene函数结束
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>  * **pathArray** : an array of paths.  
As explained in the [Basic Elements](02.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170204T132714Z" creationid="aceway" creationdate="20170204T132714Z">
        <seg>  * **pathArray** : 一个路径数组.  
如[基础元素]里解释的(02.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> * Reflection probe
 * Global illumination light
 * Generate incremental format from 3dsmax
 * Morph targets
 * Sprites collisions
 * Continuous update of octrees using webworkers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20160427T104501Z" creationid="aceway@qq.com" creationdate="20160427T104501Z">
        <seg> * 反射式探头
 * 球形照明光光源
 * 3dsmax中生成增量格式
 * 变形目标
 * 精灵碰撞
 * 使用webworkers的八叉树连续更新</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> Alpha transparency, written in percent (%), can be applied to a material in this way:
```javascript
materialSphere1.alpha = 0.5;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T124838Z" creationid="aceway" creationdate="20160508T124838Z">
        <seg>百分比(%)形式的Alpha透明, 可以按这种方式应用到材质:
```javascript
materialSphere1.alpha = 0.5;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>   scene.activeCamera = myCamera;
   // Then attach the activeCamera to the canvas.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20170207T141953Z" creationid="aceway" creationdate="20170207T141953Z">
        <seg>   scene.activeCamera = myCamera;
   // 然后把激活相机挂载到画布上.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>   var camera = new BABYLON.ArcRotateCamera("ArcRotateCamera", 0, 0, 0, BABYLON.Vector3.Zero(), scene);
   // Quick, let's use the setPosition() method... with a common Vector3 position, to make our camera better aimed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway@qq.com" changedate="20170206T044557Z" creationid="aceway@qq.com" creationdate="20170206T044557Z">
        <seg>   var camera = new BABYLON.ArcRotateCamera("ArcRotateCamera", 0, 0, 0, BABYLON.Vector3.Zero(), scene);
   // 快点， 让我们使用setPosition() 方法... 带一个普通三维向量, 以使相机的瞄向更好的目标.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>    //Creation of spheres
    var sphere1 = BABYLON.Mesh.CreateSphere("Sphere1", 10.0, 6.0, scene);
    var sphere2 = BABYLON.Mesh.CreateSphere("Sphere2", 2.0, 7.0, scene);
    var sphere3 = BABYLON.Mesh.CreateSphere("Sphere3", 10.0, 8.0, scene);
[…]
    //Positioning the meshes
    sphere1.position.x = -40;
    sphere2.position.x = -30;
```</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T122756Z" creationid="aceway" creationdate="20160508T122730Z">
        <seg>     //创建球体
    var sphere1 = BABYLON.Mesh.CreateSphere("Sphere1", 10.0, 6.0, scene);
    var sphere2 = BABYLON.Mesh.CreateSphere("Sphere2", 2.0, 7.0, scene);
    var sphere3 = BABYLON.Mesh.CreateSphere("Sphere3", 10.0, 8.0, scene);
[…]
    //定位网格
    sphere1.position.x = -40;
    sphere2.position.x = -30;
```</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>“I tested my scene, and …nothing changed…”</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T123440Z" creationid="aceway" creationdate="20160508T123239Z">
        <seg>“我测试下我的场景, 然后 …没有变化…”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>“So how can I adjust my material to give the perfect look to my object?”</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="aceway" changedate="20160508T123918Z" creationid="aceway" creationdate="20160508T123918Z">
        <seg>“所以,我该如何改变我的材质已使我的对象外观漂亮完美?”</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
